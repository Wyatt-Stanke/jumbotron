declare var g_RUN: number;
declare var JSON_game: {
	Extensions: (
		| {
				name: string;
				version: string;
				jsFiles: string[];
				initfuncs: any[];
				init?: undefined;
		  }
		| {
				init: string;
				name?: undefined;
				version?: undefined;
				jsFiles?: undefined;
				initfuncs?: undefined;
		  }
	)[];
	ExtensionOptions: {
		AppleIAP: {
			appSharedSecret: string;
			logLevel: string;
			versionStable: string;
			versionBeta: string;
			versionDev: string;
			versionLTS: string;
		};
		crazygames: {};
		GameCenter: {
			logLevel: string;
			versionStable: string;
			versionBeta: string;
			versionDev: string;
			versionLTS: string;
		};
		GooglePlayBillingExtension: {};
		Poki: {};
		RetroBowl: {};
	};
	Sounds: (
		| {
				pName: string;
				kind: number;
				extension: string;
				origName: string;
				effects: number;
				volume: number;
				pan: number;
				preload: boolean;
				groupId: number;
				duration?: undefined;
		  }
		| {
				pName: string;
				kind: number;
				extension: string;
				origName: string;
				effects: number;
				volume: number;
				pan: number;
				preload: boolean;
				groupId: number;
				duration: number;
		  }
	)[];
	AudioGroups: {
		name: string;
		enabled: boolean;
	}[];
	Sprites: (
		| {
				pName: string;
				width: number;
				height: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				bboxRight: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				xOrigin?: undefined;
				yOrigin?: undefined;
				bboxLeft?: undefined;
				bboxTop?: undefined;
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				width: number;
				height: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				xOrigin: number;
				yOrigin: number;
				bboxLeft: number;
				bboxRight: number;
				bboxTop: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				width: number;
				height: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				xOrigin: number;
				yOrigin: number;
				bboxRight: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				bboxLeft?: undefined;
				bboxTop?: undefined;
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				width: number;
				height: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				xOrigin: number;
				yOrigin: number;
				bboxRight: number;
				bboxTop: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				bboxLeft?: undefined;
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				width: number;
				height: number;
				bboxMode: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				bboxLeft: number;
				bboxRight: number;
				bboxTop: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				xOrigin?: undefined;
				yOrigin?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				width: number;
				height: number;
				bboxMode: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				xOrigin: number;
				yOrigin: number;
				bboxLeft: number;
				bboxRight: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				bboxTop?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				width: number;
				height: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				bboxLeft: number;
				bboxRight: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				xOrigin?: undefined;
				yOrigin?: undefined;
				bboxTop?: undefined;
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				width: number;
				height: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				bboxLeft: number;
				bboxRight: number;
				bboxTop: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				xOrigin?: undefined;
				yOrigin?: undefined;
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				width: number;
				height: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				bboxRight: number;
				bboxTop: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				xOrigin?: undefined;
				yOrigin?: undefined;
				bboxLeft?: undefined;
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				xOrigin: number;
				yOrigin: number;
				bboxLeft: number;
				bboxRight: number;
				bboxTop: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				width?: undefined;
				height?: undefined;
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				xOrigin: number;
				yOrigin: number;
				bboxRight: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				width?: undefined;
				height?: undefined;
				bboxLeft?: undefined;
				bboxTop?: undefined;
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				bboxRight: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				nineslice: {
					nLeft: number;
					nTop: number;
					nRight: number;
					nBottom: number;
					nEnabled: boolean;
					nTilemode: number[];
				};
				width?: undefined;
				height?: undefined;
				xOrigin?: undefined;
				yOrigin?: undefined;
				bboxLeft?: undefined;
				bboxTop?: undefined;
				bboxMode?: undefined;
		  }
		| {
				pName: string;
				width: number;
				height: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				bboxRight: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				nineslice: {
					nLeft: number;
					nTop: number;
					nRight: number;
					nBottom: number;
					nEnabled: boolean;
					nTilemode: number[];
				};
				xOrigin?: undefined;
				yOrigin?: undefined;
				bboxLeft?: undefined;
				bboxTop?: undefined;
				bboxMode?: undefined;
		  }
		| {
				pName: string;
				height: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				xOrigin: number;
				yOrigin: number;
				bboxLeft: number;
				bboxRight: number;
				bboxTop: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				width?: undefined;
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				width: number;
				height: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				xOrigin: number;
				yOrigin: number;
				bboxLeft: number;
				bboxRight: number;
				bboxTop: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				nineslice: {
					nLeft: number;
					nTop: number;
					nRight: number;
					nBottom: number;
					nEnabled: boolean;
					nTilemode: number[];
				};
				bboxMode?: undefined;
		  }
		| {
				pName: string;
				width: number;
				height: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				xOrigin: number;
				yOrigin: number;
				bboxLeft: number;
				bboxRight: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				bboxTop?: undefined;
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				bboxRight: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				width?: undefined;
				height?: undefined;
				xOrigin?: undefined;
				yOrigin?: undefined;
				bboxLeft?: undefined;
				bboxTop?: undefined;
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				width: number;
				height: number;
				bboxMode: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				xOrigin: number;
				yOrigin: number;
				bboxLeft: number;
				bboxRight: number;
				bboxTop: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				nineslice?: undefined;
		  }
		| {
				pName: string;
				bboxMode: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				xOrigin: number;
				yOrigin: number;
				bboxLeft: number;
				bboxRight: number;
				bboxTop: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				width?: undefined;
				height?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				height: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				xOrigin: number;
				yOrigin: number;
				bboxRight: number;
				bboxTop: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				width?: undefined;
				bboxLeft?: undefined;
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				width: number;
				height: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				yOrigin: number;
				bboxLeft: number;
				bboxRight: number;
				bboxTop: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				xOrigin?: undefined;
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				width: number;
				height: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				yOrigin: number;
				bboxLeft: number;
				bboxRight: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				xOrigin?: undefined;
				bboxTop?: undefined;
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				width: number;
				height: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				yOrigin: number;
				bboxRight: number;
				bboxTop: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				xOrigin?: undefined;
				bboxLeft?: undefined;
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				width: number;
				height: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				xOrigin: number;
				bboxRight: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				yOrigin?: undefined;
				bboxLeft?: undefined;
				bboxTop?: undefined;
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				height: number;
				bboxMode: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				xOrigin: number;
				yOrigin: number;
				bboxLeft: number;
				bboxRight: number;
				bboxTop: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				width?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				width: number;
				bboxMode: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				xOrigin: number;
				yOrigin: number;
				bboxLeft: number;
				bboxRight: number;
				bboxTop: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				height?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				width: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				xOrigin: number;
				yOrigin: number;
				bboxLeft: number;
				bboxRight: number;
				bboxTop: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				height?: undefined;
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				height: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				xOrigin: number;
				yOrigin: number;
				bboxLeft: number;
				bboxRight: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				width?: undefined;
				bboxTop?: undefined;
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				width: number;
				height: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				yOrigin: number;
				bboxRight: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				xOrigin?: undefined;
				bboxLeft?: undefined;
				bboxTop?: undefined;
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				height: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				xOrigin: number;
				yOrigin: number;
				bboxRight: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				width?: undefined;
				bboxLeft?: undefined;
				bboxTop?: undefined;
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				xOrigin: number;
				yOrigin: number;
				bboxLeft: number;
				bboxRight: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				width?: undefined;
				height?: undefined;
				bboxTop?: undefined;
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
		| {
				pName: string;
				width: number;
				transparent: boolean;
				smooth: boolean;
				preload: boolean;
				xOrigin: number;
				yOrigin: number;
				bboxRight: number;
				bboxBottom: number;
				playbackspeed: number;
				TPEntryIndex: number[];
				sequence: {
					pName: string;
					playback: number;
					playbackSpeed: number;
					playbackSpeedType: number;
					length: number;
					xorigin: number;
					yorigin: number;
					volume: number;
					keyframeStore: any[];
					tracks: {
						modelName: string;
						pName: string;
						builtinName: number;
						traits: number;
						creationTrack: number;
						tags: any[];
						ownedResourceModels: any[];
						tracks: any[];
						keyframeStore: {
							key: number;
							length: number;
							stretch: boolean;
							disabled: boolean;
							channels: {
								0: {
									imageIndex: number;
								};
							};
						}[];
					}[];
					sequenceEvents: any[];
					momentsKeystore: any[];
				};
				height?: undefined;
				bboxLeft?: undefined;
				bboxTop?: undefined;
				bboxMode?: undefined;
				nineslice?: undefined;
		  }
	)[];
	EmbeddedEntries: {
		fallbacktexture: number;
	};
	Backgrounds: any[];
	Paths: {
		pName: string;
		kind: number;
		closed: boolean;
		precision: number;
		points: {
			x: number;
			y: number;
			speed: number;
		}[];
	}[];
	Shaders: {
		name: string;
		Vertex: string;
		Fragment: string;
		Attributes: string[];
	}[];
	Fonts: {
		pName: string;
		size: number;
		bold: boolean;
		italic: boolean;
		first: number;
		last: number;
		charset: number;
		antialias: number;
		fontname: string;
		ascenderOffset: number;
		ascender: number;
		sdfSpread: number;
		lineHeight: number;
		TPageEntry: number;
		scaleX: number;
		scaleY: number;
		glyphs: (
			| {
					i: number;
					c: string;
					x: number;
					y: number;
					w: number;
					h: number;
					shift: number;
					offset: number;
			  }
			| {
					i: number;
					x: number;
					y: number;
					w: number;
					h: number;
					shift: number;
					offset: number;
					c?: undefined;
			  }
		)[];
	}[];
	Timelines: any[];
	Triggers: {}[];
	GMObjects: (
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_ad_retrogoal_Create_0;
				StepNormalEvent: typeof gml_Object_obj_ad_retrogoal_Step_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				PreCreateEvent?: undefined;
				DrawEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_appstore_btn_Create_0;
				StepNormalEvent: typeof gml_Object_obj_appstore_btn_Step_0;
				PreCreateEvent: typeof gml_Object_obj_appstore_btn_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				DrawEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				DrawEvent: typeof gml_Object_obj_attribute_Draw_0;
				DrawGUI: typeof gml_Object_obj_attribute_Draw_64;
				PreCreateEvent: typeof gml_Object_obj_attribute_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				CreateEvent?: undefined;
				StepNormalEvent?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_ball_Create_0;
				ObjAlarm0: typeof gml_Object_obj_ball_Alarm_0;
				ObjAlarm1: typeof gml_Object_obj_ball_Alarm_1;
				StepNormalEvent: typeof gml_Object_obj_ball_Step_0;
				StepEndEvent: typeof gml_Object_obj_ball_Step_2;
				DrawEvent: typeof gml_Object_obj_ball_Draw_0;
				DrawGUI: typeof gml_Object_obj_ball_Draw_64;
				TriggerEvents: any[];
				CollisionEvents: (
					| number
					| typeof gml_Object_obj_ball_Collision_obj_dummy
				)[];
				PreCreateEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_blank_Create_0;
				DestroyEvent: typeof gml_Object_obj_blank_Destroy_0;
				StepNormalEvent: typeof gml_Object_obj_blank_Step_0;
				SocialEvent: typeof gml_Object_obj_blank_Other_70;
				DrawEvent: typeof gml_Object_obj_blank_Draw_0;
				DrawGUI: typeof gml_Object_obj_blank_Draw_64;
				GestureGlobalTapEvent: typeof gml_Object_obj_blank_Gesture_64;
				GestureGlobalFlickEvent: typeof gml_Object_obj_blank_Gesture_69;
				GestureTapEvent: typeof gml_Object_obj_blank_Gesture_0;
				PreCreateEvent: typeof gml_Object_obj_blank_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_bossprofile_Create_0;
				DrawGUI: typeof gml_Object_obj_bossprofile_Draw_64;
				KeyPressed_Z: typeof gml_Object_obj_bossprofile_KeyPress_90;
				TriggerEvents: any[];
				CollisionEvents: any[];
				StepNormalEvent?: undefined;
				PreCreateEvent?: undefined;
				DrawEvent?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				StepNormalEvent: typeof gml_Object_obj_boundary_Step_0;
				DrawEvent: typeof gml_Object_obj_boundary_Draw_0;
				PreCreateEvent: typeof gml_Object_obj_boundary_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				CreateEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_box_coachcredit_Create_0;
				StepNormalEvent: typeof gml_Object_obj_box_coachcredit_Step_0;
				DrawEvent: typeof gml_Object_obj_box_coachcredit_Draw_0;
				DrawGUI: typeof gml_Object_obj_box_coachcredit_Draw_64;
				PreCreateEvent: typeof gml_Object_obj_box_coachcredit_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_box_defense_Create_0;
				DrawEvent: typeof gml_Object_obj_box_defense_Draw_0;
				DrawGUI: typeof gml_Object_obj_box_defense_Draw_64;
				PreCreateEvent: typeof gml_Object_obj_box_defense_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				StepNormalEvent?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_btn_audible_Create_0;
				StepNormalEvent: typeof gml_Object_obj_btn_audible_Step_0;
				DrawGUI: typeof gml_Object_obj_btn_audible_Draw_64;
				DrawEvent: typeof gml_Object_obj_btn_audible_Draw_0;
				DrawGUIEnd: typeof gml_Object_obj_btn_audible_Draw_75;
				PreCreateEvent: typeof gml_Object_obj_btn_audible_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				ObjAlarm0: typeof gml_Object_obj_btn_buy_Alarm_0;
				StepNormalEvent: typeof gml_Object_obj_btn_buy_Step_0;
				PreCreateEvent: typeof gml_Object_obj_btn_buy_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				CreateEvent?: undefined;
				DrawEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				StepNormalEvent: typeof gml_Object_obj_btn_pause_Step_0;
				DrawEvent: typeof gml_Object_obj_btn_pause_Draw_0;
				DrawGUI: typeof gml_Object_obj_btn_pause_Draw_64;
				TriggerEvents: any[];
				CollisionEvents: any[];
				CreateEvent?: undefined;
				PreCreateEvent?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_btn_restore_Create_0;
				ObjAlarm0: typeof gml_Object_obj_btn_restore_Alarm_0;
				StepNormalEvent: typeof gml_Object_obj_btn_restore_Step_0;
				PreCreateEvent: typeof gml_Object_obj_btn_restore_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				DrawEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				TriggerEvents: any[];
				CollisionEvents: any[];
				CreateEvent?: undefined;
				StepNormalEvent?: undefined;
				PreCreateEvent?: undefined;
				DrawEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				DrawGUI: typeof gml_Object_obj_button_small_Draw_64;
				PreCreateEvent: typeof gml_Object_obj_button_small_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				CreateEvent?: undefined;
				StepNormalEvent?: undefined;
				DrawEvent?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				DrawGUIEnd: typeof gml_Object_obj_button_team_Draw_75;
				PreCreateEvent: typeof gml_Object_obj_button_team_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				CreateEvent?: undefined;
				StepNormalEvent?: undefined;
				DrawEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_camera_Create_0;
				ObjAlarm0: typeof gml_Object_obj_camera_Alarm_0;
				StepEndEvent: typeof gml_Object_obj_camera_Step_2;
				StartRoomEvent: typeof gml_Object_obj_camera_Other_4;
				EndRoomEvent: typeof gml_Object_obj_camera_Other_5;
				DrawGUI: typeof gml_Object_obj_camera_Draw_64;
				TriggerEvents: any[];
				CollisionEvents: any[];
				StepNormalEvent?: undefined;
				PreCreateEvent?: undefined;
				DrawEvent?: undefined;
				ObjAlarm1?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				StepNormalEvent: typeof gml_Object_obj_checkbox_Step_0;
				DrawGUI: typeof gml_Object_obj_checkbox_Draw_64;
				DrawEvent: typeof gml_Object_obj_checkbox_Draw_0;
				PreCreateEvent: typeof gml_Object_obj_checkbox_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				CreateEvent?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_choose_face_Create_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				StepNormalEvent?: undefined;
				PreCreateEvent?: undefined;
				DrawEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_choose_team_Create_0;
				StartRoomEvent: typeof gml_Object_obj_choose_team_Other_4;
				PreCreateEvent: typeof gml_Object_obj_choose_team_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				StepNormalEvent?: undefined;
				DrawEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_college_nfl_draft_Create_0;
				DrawGUI: typeof gml_Object_obj_college_nfl_draft_Draw_64;
				TriggerEvents: any[];
				CollisionEvents: any[];
				StepNormalEvent?: undefined;
				PreCreateEvent?: undefined;
				DrawEvent?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_colpicker_Create_0;
				StepNormalEvent: typeof gml_Object_obj_colpicker_Step_0;
				DrawGUI: typeof gml_Object_obj_colpicker_Draw_64;
				TriggerEvents: any[];
				CollisionEvents: any[];
				PreCreateEvent?: undefined;
				DrawEvent?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_conference_Create_0;
				DestroyEvent: typeof gml_Object_obj_conference_Destroy_0;
				DrawGUI: typeof gml_Object_obj_conference_Draw_64;
				DrawEvent: typeof gml_Object_obj_conference_Draw_0;
				PreCreateEvent: typeof gml_Object_obj_conference_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				StepNormalEvent?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_controller_Create_0;
				ObjAlarm0: typeof gml_Object_obj_controller_Alarm_0;
				ObjAlarm1: typeof gml_Object_obj_controller_Alarm_1;
				StepNormalEvent: typeof gml_Object_obj_controller_Step_0;
				StepEndEvent: typeof gml_Object_obj_controller_Step_2;
				DrawGUI: typeof gml_Object_obj_controller_Draw_64;
				DrawEventBegin: typeof gml_Object_obj_controller_Draw_72;
				DrawEvent: typeof gml_Object_obj_controller_Draw_0;
				KeyPressed_ENTER: typeof gml_Object_obj_controller_KeyPress_13;
				KeyPressed_F: typeof gml_Object_obj_controller_KeyPress_70;
				KeyPressed_P: typeof gml_Object_obj_controller_KeyPress_80;
				KeyPressed_SPACE: typeof gml_Object_obj_controller_KeyPress_32;
				KeyPressed_T: typeof gml_Object_obj_controller_KeyPress_84;
				KeyPressed_K: typeof gml_Object_obj_controller_KeyPress_75;
				GestureGlobalFlickEvent: typeof gml_Object_obj_controller_Gesture_69;
				GestureGlobalTapEvent: typeof gml_Object_obj_controller_Gesture_64;
				GestureGlobalDragMoveEvent: typeof gml_Object_obj_controller_Gesture_67;
				GestureGlobalDragStartEvent: typeof gml_Object_obj_controller_Gesture_66;
				GestureGlobalDragEndEvent: typeof gml_Object_obj_controller_Gesture_68;
				GestureGlobalDoubleTapEvent: typeof gml_Object_obj_controller_Gesture_65;
				TriggerEvents: any[];
				CollisionEvents: any[];
				PreCreateEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_credit_Create_0;
				DestroyEvent: typeof gml_Object_obj_credit_Destroy_0;
				StepNormalEvent: typeof gml_Object_obj_credit_Step_0;
				DrawEvent: typeof gml_Object_obj_credit_Draw_0;
				DrawGUIEnd: typeof gml_Object_obj_credit_Draw_75;
				PreCreateEvent: typeof gml_Object_obj_credit_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				DrawGUI?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_details_Create_0;
				PreCreateEvent: typeof gml_Object_obj_details_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				StepNormalEvent?: undefined;
				DrawEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				StepNormalEvent: typeof gml_Object_obj_dummy_Step_0;
				DrawEvent: typeof gml_Object_obj_dummy_Draw_0;
				DrawEventBegin: typeof gml_Object_obj_dummy_Draw_72;
				PreCreateEvent: typeof gml_Object_obj_dummy_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: (
					| number
					| typeof gml_Object_obj_dummy_Collision_obj_player
				)[];
				CreateEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_hof_achievements_Create_0;
				StepNormalEvent: typeof gml_Object_obj_hof_achievements_Step_0;
				DrawGUI: typeof gml_Object_obj_hof_achievements_Draw_64;
				GestureGlobalFlickEvent: typeof gml_Object_obj_hof_achievements_Gesture_69;
				PreCreateEvent: typeof gml_Object_obj_hof_achievements_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				DrawEvent?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_hof_btn_Create_0;
				DrawGUI: typeof gml_Object_obj_hof_btn_Draw_64;
				PreCreateEvent: typeof gml_Object_obj_hof_btn_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				StepNormalEvent?: undefined;
				DrawEvent?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_hof_retrobowl_history_Create_0;
				DestroyEvent: typeof gml_Object_obj_hof_retrobowl_history_Destroy_0;
				StepNormalEvent: typeof gml_Object_obj_hof_retrobowl_history_Step_0;
				DrawGUI: typeof gml_Object_obj_hof_retrobowl_history_Draw_64;
				GestureGlobalFlickEvent: typeof gml_Object_obj_hof_retrobowl_history_Gesture_69;
				PreCreateEvent: typeof gml_Object_obj_hof_retrobowl_history_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				DrawEvent?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_hof_retrobowl_wins_Create_0;
				DestroyEvent: typeof gml_Object_obj_hof_retrobowl_wins_Destroy_0;
				DrawGUI: typeof gml_Object_obj_hof_retrobowl_wins_Draw_64;
				TriggerEvents: any[];
				CollisionEvents: any[];
				StepNormalEvent?: undefined;
				PreCreateEvent?: undefined;
				DrawEvent?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_home_Create_0;
				ObjAlarm0: typeof gml_Object_obj_home_Alarm_0;
				StepNormalEvent: typeof gml_Object_obj_home_Step_0;
				DrawEvent: typeof gml_Object_obj_home_Draw_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				PreCreateEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_kb_key_Create_0;
				StepNormalEvent: typeof gml_Object_obj_kb_key_Step_0;
				DrawGUI: typeof gml_Object_obj_kb_key_Draw_64;
				GestureTapEvent: typeof gml_Object_obj_kb_key_Gesture_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				PreCreateEvent?: undefined;
				DrawEvent?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				persistent: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_master_Create_0;
				ObjAlarm0: typeof gml_Object_obj_master_Alarm_0;
				ObjAlarm1: typeof gml_Object_obj_master_Alarm_1;
				ObjAlarm2: typeof gml_Object_obj_master_Alarm_2;
				StepNormalEvent: typeof gml_Object_obj_master_Step_0;
				SystemEvent: typeof gml_Object_obj_master_Other_75;
				StartRoomEvent: typeof gml_Object_obj_master_Other_4;
				KeyPressed_C: typeof gml_Object_obj_master_KeyPress_67;
				KeyPressed_S: typeof gml_Object_obj_master_KeyPress_83;
				KeyPressed_0: typeof gml_Object_obj_master_KeyPress_48;
				KeyPressed_B: typeof gml_Object_obj_master_KeyPress_66;
				KeyPressed_N: typeof gml_Object_obj_master_KeyPress_78;
				KeyPressed_D: typeof gml_Object_obj_master_KeyPress_68;
				KeyPressed_R: typeof gml_Object_obj_master_KeyPress_82;
				TriggerEvents: any[];
				CollisionEvents: any[];
				visible?: undefined;
				PreCreateEvent?: undefined;
				DrawEvent?: undefined;
				DrawGUI?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_match_msg_Create_0;
				ObjAlarm0: typeof gml_Object_obj_match_msg_Alarm_0;
				DrawGUI: typeof gml_Object_obj_match_msg_Draw_64;
				PreCreateEvent: typeof gml_Object_obj_match_msg_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				StepNormalEvent?: undefined;
				DrawEvent?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_matchline_Create_0;
				StepNormalEvent: typeof gml_Object_obj_matchline_Step_0;
				DrawEvent: typeof gml_Object_obj_matchline_Draw_0;
				DrawGUI: typeof gml_Object_obj_matchline_Draw_64;
				GestureGlobalFlickEvent: typeof gml_Object_obj_matchline_Gesture_69;
				PreCreateEvent: typeof gml_Object_obj_matchline_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_matchob_Create_0;
				CleanUpEvent: typeof gml_Object_obj_matchob_CleanUp_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				StepNormalEvent?: undefined;
				PreCreateEvent?: undefined;
				DrawEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_metaball_Create_0;
				StepNormalEvent: typeof gml_Object_obj_metaball_Step_0;
				DrawEvent: typeof gml_Object_obj_metaball_Draw_0;
				DrawEventEnd: typeof gml_Object_obj_metaball_Draw_73;
				TriggerEvents: any[];
				CollisionEvents: any[];
				PreCreateEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_msgbg_Create_0;
				ObjAlarm0: typeof gml_Object_obj_msgbg_Alarm_0;
				DrawGUI: typeof gml_Object_obj_msgbg_Draw_64;
				DrawEvent: typeof gml_Object_obj_msgbg_Draw_0;
				KeyPressed_ESCAPE: typeof gml_Object_obj_msgbg_KeyPress_27;
				PreCreateEvent: typeof gml_Object_obj_msgbg_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				StepNormalEvent?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_news_dyn_Create_0;
				DrawGUI: typeof gml_Object_obj_news_dyn_Draw_64;
				DrawEvent: typeof gml_Object_obj_news_dyn_Draw_0;
				KeyPressed_ESCAPE: typeof gml_Object_obj_news_dyn_KeyPress_27;
				CleanUpEvent: typeof gml_Object_obj_news_dyn_CleanUp_0;
				PreCreateEvent: typeof gml_Object_obj_news_dyn_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				StepNormalEvent?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				DrawEventEnd?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				persistent: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_notification_Create_0;
				ObjAlarm0: typeof gml_Object_obj_notification_Alarm_0;
				StepNormalEvent: typeof gml_Object_obj_notification_Step_0;
				DrawGUI: typeof gml_Object_obj_notification_Draw_64;
				PreCreateEvent: typeof gml_Object_obj_notification_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				DrawEvent?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				persistent: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_nx_Create_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				StepNormalEvent?: undefined;
				PreCreateEvent?: undefined;
				DrawEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_options_Create_0;
				ObjAlarm0: typeof gml_Object_obj_options_Alarm_0;
				StepNormalEvent: typeof gml_Object_obj_options_Step_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				PreCreateEvent?: undefined;
				DrawEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_player_Create_0;
				DestroyEvent: typeof gml_Object_obj_player_Destroy_0;
				StepNormalEvent: typeof gml_Object_obj_player_Step_0;
				StepEndEvent: typeof gml_Object_obj_player_Step_2;
				AnimationEndEvent: typeof gml_Object_obj_player_Other_7;
				DrawEvent: typeof gml_Object_obj_player_Draw_0;
				DrawEventBegin: typeof gml_Object_obj_player_Draw_72;
				TriggerEvents: any[];
				CollisionEvents: any[];
				PreCreateEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_playerprofile_rm_Create_0;
				StepNormalEvent: typeof gml_Object_obj_playerprofile_rm_Step_0;
				DrawGUI: typeof gml_Object_obj_playerprofile_rm_Draw_64;
				KeyPressed_X: typeof gml_Object_obj_playerprofile_rm_KeyPress_88;
				KeyPressed_I: typeof gml_Object_obj_playerprofile_rm_KeyPress_73;
				KeyPressed_M: typeof gml_Object_obj_playerprofile_rm_KeyPress_77;
				KeyPressed_D: typeof gml_Object_obj_playerprofile_rm_KeyPress_68;
				KeyPressed_O: typeof gml_Object_obj_playerprofile_rm_KeyPress_79;
				KeyPressed_R: typeof gml_Object_obj_playerprofile_rm_KeyPress_82;
				KeyPressed_Z: typeof gml_Object_obj_playerprofile_rm_KeyPress_90;
				TriggerEvents: any[];
				CollisionEvents: any[];
				PreCreateEvent?: undefined;
				DrawEvent?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_raindrop_Create_0;
				StepNormalEvent: typeof gml_Object_obj_raindrop_Step_0;
				DrawEvent: typeof gml_Object_obj_raindrop_Draw_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				PreCreateEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				StepNormalEvent: typeof gml_Object_obj_roomtitle_special_Step_0;
				PreCreateEvent: typeof gml_Object_obj_roomtitle_special_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				CreateEvent?: undefined;
				DrawEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				persistent: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_scanlines_Create_0;
				DrawGUIEnd: typeof gml_Object_obj_scanlines_Draw_75;
				PreCreateEvent: typeof gml_Object_obj_scanlines_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				StepNormalEvent?: undefined;
				DrawEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_season_tally_Create_0;
				StepNormalEvent: typeof gml_Object_obj_season_tally_Step_0;
				DrawGUI: typeof gml_Object_obj_season_tally_Draw_64;
				DrawGUIBegin: typeof gml_Object_obj_season_tally_Draw_74;
				TriggerEvents: any[];
				CollisionEvents: any[];
				PreCreateEvent?: undefined;
				DrawEvent?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_staffprofile_Create_0;
				StepNormalEvent: typeof gml_Object_obj_staffprofile_Step_0;
				DrawGUI: typeof gml_Object_obj_staffprofile_Draw_64;
				KeyPressed_X: typeof gml_Object_obj_staffprofile_KeyPress_88;
				KeyPressed_Z: typeof gml_Object_obj_staffprofile_KeyPress_90;
				TriggerEvents: any[];
				CollisionEvents: any[];
				PreCreateEvent?: undefined;
				DrawEvent?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				persistent: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_store_async_Create_0;
				WebIAPEvent: typeof gml_Object_obj_store_async_Other_66;
				TriggerEvents: any[];
				CollisionEvents: any[];
				StepNormalEvent?: undefined;
				PreCreateEvent?: undefined;
				DrawEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				LeftButtonPressed: typeof gml_Object_obj_text_watermark_Mouse_4;
				DrawGUI: typeof gml_Object_obj_text_watermark_Draw_64;
				DrawEvent: typeof gml_Object_obj_text_watermark_Draw_0;
				PreCreateEvent: typeof gml_Object_obj_text_watermark_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				CreateEvent?: undefined;
				StepNormalEvent?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_weather_Create_0;
				StepNormalEvent: typeof gml_Object_obj_weather_Step_0;
				DrawGUI: typeof gml_Object_obj_weather_Draw_64;
				PreCreateEvent: typeof gml_Object_obj_weather_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				DrawEvent?: undefined;
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_winners_Create_0;
				ObjAlarm0: typeof gml_Object_obj_winners_Alarm_0;
				DrawEvent: typeof gml_Object_obj_winners_Draw_0;
				PreCreateEvent: typeof gml_Object_obj_winners_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				StepNormalEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_obj_xp_update_Create_0;
				DestroyEvent: typeof gml_Object_obj_xp_update_Destroy_0;
				StepNormalEvent: typeof gml_Object_obj_xp_update_Step_0;
				DrawEvent: typeof gml_Object_obj_xp_update_Draw_0;
				DrawGUI: typeof gml_Object_obj_xp_update_Draw_64;
				PreCreateEvent: typeof gml_Object_obj_xp_update_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				ObjAlarm0?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				DrawGUIEnd?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
		| {
				pName: string;
				spriteIndex: number;
				visible: boolean;
				parent: number;
				CreateEvent: typeof gml_Object_ui_selectable_Create_0;
				ObjAlarm0: typeof gml_Object_ui_selectable_Alarm_0;
				DrawGUIEnd: typeof gml_Object_ui_selectable_Draw_75;
				PreCreateEvent: typeof gml_Object_ui_selectable_PreCreate_0;
				TriggerEvents: any[];
				CollisionEvents: any[];
				StepNormalEvent?: undefined;
				DrawEvent?: undefined;
				DrawGUI?: undefined;
				ObjAlarm1?: undefined;
				StepEndEvent?: undefined;
				DestroyEvent?: undefined;
				SocialEvent?: undefined;
				GestureGlobalTapEvent?: undefined;
				GestureGlobalFlickEvent?: undefined;
				GestureTapEvent?: undefined;
				KeyPressed_Z?: undefined;
				StartRoomEvent?: undefined;
				EndRoomEvent?: undefined;
				DrawEventBegin?: undefined;
				KeyPressed_ENTER?: undefined;
				KeyPressed_F?: undefined;
				KeyPressed_P?: undefined;
				KeyPressed_SPACE?: undefined;
				KeyPressed_T?: undefined;
				KeyPressed_K?: undefined;
				GestureGlobalDragMoveEvent?: undefined;
				GestureGlobalDragStartEvent?: undefined;
				GestureGlobalDragEndEvent?: undefined;
				GestureGlobalDoubleTapEvent?: undefined;
				persistent?: undefined;
				ObjAlarm2?: undefined;
				SystemEvent?: undefined;
				KeyPressed_C?: undefined;
				KeyPressed_S?: undefined;
				KeyPressed_0?: undefined;
				KeyPressed_B?: undefined;
				KeyPressed_N?: undefined;
				KeyPressed_D?: undefined;
				KeyPressed_R?: undefined;
				CleanUpEvent?: undefined;
				DrawEventEnd?: undefined;
				KeyPressed_ESCAPE?: undefined;
				AnimationEndEvent?: undefined;
				KeyPressed_X?: undefined;
				KeyPressed_I?: undefined;
				KeyPressed_M?: undefined;
				KeyPressed_O?: undefined;
				DrawGUIBegin?: undefined;
				WebIAPEvent?: undefined;
				LeftButtonPressed?: undefined;
		  }
	)[];
	AnimCurves: any[];
	Sequences: any[];
	FiltersAndEffectDefs: any[];
	PSEmitters: any[];
	ParticleSystems: any[];
	GMRooms: (
		| {
				pName: string;
				width: number;
				height: number;
				speed: number;
				colour: number;
				LayerCount: number;
				showColour: boolean;
				viewClearScreen: boolean;
				pCode: typeof gml_Room_rm_master_Create;
				backgrounds: any[];
				views: (
					| {
							wview: number;
							wport: number;
							hview?: undefined;
							hport?: undefined;
					  }
					| {
							wview: number;
							hview: number;
							wport: number;
							hport: number;
					  }
				)[];
				pInstances: (
					| {
							x: number;
							y: number;
							index: number;
							id: number;
							rotation: number;
							scaleX: number;
							scaleY: number;
							imageSpeed: number;
							imageIndex: number;
							colour: number;
							pCode?: undefined;
							pPreCreateCode?: undefined;
					  }
					| {
							x: number;
							y: number;
							index: number;
							id: number;
							pCode: typeof gml_RoomCC_rm_master_2_Create;
							pPreCreateCode: typeof gml_RoomCC_rm_master_2_PreCreate;
							rotation: number;
							scaleX: number;
							scaleY: number;
							imageSpeed: number;
							imageIndex: number;
							colour: number;
					  }
					| {
							x: number;
							y: number;
							index: number;
							id: number;
							pPreCreateCode: typeof gml_RoomCC_rm_master_3_PreCreate;
							rotation: number;
							scaleX: number;
							scaleY: number;
							imageSpeed: number;
							imageIndex: number;
							colour: number;
							pCode?: undefined;
					  }
				)[];
				tiles: any[];
				layers: (
					| {
							pName: string;
							id: number;
							type: number;
							depth: number;
							x: number;
							y: number;
							hspeed: number;
							vspeed: number;
							visible: number;
							effectEnabled: number;
							effectType: string;
							effectProperties: any[];
							icount: number;
							iinstIDs: number[];
							bvisible?: undefined;
							bforeground?: undefined;
							bindex?: undefined;
							bhtiled?: undefined;
							bvtiled?: undefined;
							bstretch?: undefined;
							bblend?: undefined;
							bimage_index?: undefined;
							bimage_speed?: undefined;
					  }
					| {
							pName: string;
							id: number;
							type: number;
							depth: number;
							x: number;
							y: number;
							hspeed: number;
							vspeed: number;
							visible: number;
							effectEnabled: number;
							effectType: string;
							effectProperties: any[];
							bvisible: boolean;
							bforeground: boolean;
							bindex: number;
							bhtiled: boolean;
							bvtiled: boolean;
							bstretch: boolean;
							bblend: number;
							bimage_index: number;
							bimage_speed: number;
							icount?: undefined;
							iinstIDs?: undefined;
					  }
				)[];
				enableViews?: undefined;
		  }
		| {
				pName: string;
				width: number;
				height: number;
				speed: number;
				colour: number;
				LayerCount: number;
				showColour: boolean;
				enableViews: boolean;
				viewClearScreen: boolean;
				pCode: typeof gml_Room_rm_details_Create;
				backgrounds: any[];
				views: (
					| {
							visible: boolean;
							wview: number;
							hview: number;
							wport: number;
							hport: number;
					  }
					| {
							wview: number;
							hview: number;
							wport: number;
							hport: number;
							visible?: undefined;
					  }
				)[];
				pInstances: (
					| {
							x: number;
							y: number;
							index: number;
							id: number;
							pPreCreateCode: typeof gml_RoomCC_rm_details_0_PreCreate;
							rotation: number;
							scaleX: number;
							scaleY: number;
							imageSpeed: number;
							imageIndex: number;
							colour: number;
							pCode?: undefined;
					  }
					| {
							x: number;
							y: number;
							index: number;
							id: number;
							pCode: typeof gml_RoomCC_rm_details_12_Create;
							pPreCreateCode: typeof gml_RoomCC_rm_details_12_PreCreate;
							rotation: number;
							scaleX: number;
							scaleY: number;
							imageSpeed: number;
							imageIndex: number;
							colour: number;
					  }
					| {
							x: number;
							y: number;
							index: number;
							id: number;
							rotation: number;
							scaleX: number;
							scaleY: number;
							imageSpeed: number;
							imageIndex: number;
							colour: number;
							pPreCreateCode?: undefined;
							pCode?: undefined;
					  }
				)[];
				tiles: any[];
				layers: (
					| {
							pName: string;
							id: number;
							type: number;
							depth: number;
							x: number;
							y: number;
							hspeed: number;
							vspeed: number;
							visible: number;
							effectEnabled: number;
							effectType: string;
							effectProperties: any[];
							icount: number;
							iinstIDs: number[];
							bvisible?: undefined;
							bforeground?: undefined;
							bindex?: undefined;
							bhtiled?: undefined;
							bvtiled?: undefined;
							bstretch?: undefined;
							bblend?: undefined;
							bimage_index?: undefined;
							bimage_speed?: undefined;
					  }
					| {
							pName: string;
							id: number;
							type: number;
							depth: number;
							x: number;
							y: number;
							hspeed: number;
							vspeed: number;
							visible: number;
							effectEnabled: number;
							effectType: string;
							effectProperties: any[];
							bvisible: boolean;
							bforeground: boolean;
							bindex: number;
							bhtiled: boolean;
							bvtiled: boolean;
							bstretch: boolean;
							bblend: number;
							bimage_index: number;
							bimage_speed: number;
							icount?: undefined;
							iinstIDs?: undefined;
					  }
				)[];
		  }
		| {
				pName: string;
				width: number;
				height: number;
				speed: number;
				colour: number;
				LayerCount: number;
				showColour: boolean;
				enableViews: boolean;
				viewClearScreen: boolean;
				pCode: typeof gml_Room_rm_choose_team_Create;
				backgrounds: any[];
				views: (
					| {
							visible: boolean;
							wview: number;
							hview: number;
							wport: number;
							hport: number;
					  }
					| {
							wview: number;
							hview: number;
							wport: number;
							hport: number;
							visible?: undefined;
					  }
				)[];
				pInstances: (
					| {
							x: number;
							y: number;
							index: number;
							id: number;
							pPreCreateCode: typeof gml_RoomCC_rm_choose_team_0_PreCreate;
							rotation: number;
							scaleX: number;
							scaleY: number;
							imageSpeed: number;
							imageIndex: number;
							colour: number;
					  }
					| {
							x: number;
							y: number;
							index: number;
							id: number;
							rotation: number;
							scaleX: number;
							scaleY: number;
							imageSpeed: number;
							imageIndex: number;
							colour: number;
							pPreCreateCode?: undefined;
					  }
				)[];
				tiles: any[];
				layers: (
					| {
							pName: string;
							id: number;
							type: number;
							depth: number;
							x: number;
							y: number;
							hspeed: number;
							vspeed: number;
							visible: number;
							effectEnabled: number;
							effectType: string;
							effectProperties: any[];
							icount: number;
							iinstIDs: number[];
							acount?: undefined;
							assets?: undefined;
							scount?: undefined;
							sprites?: undefined;
							ecount?: undefined;
							sequences?: undefined;
							pcount?: undefined;
							particles?: undefined;
							bvisible?: undefined;
							bforeground?: undefined;
							bindex?: undefined;
							bhtiled?: undefined;
							bvtiled?: undefined;
							bstretch?: undefined;
							bblend?: undefined;
							bimage_index?: undefined;
							bimage_speed?: undefined;
					  }
					| {
							pName: string;
							id: number;
							type: number;
							depth: number;
							x: number;
							y: number;
							hspeed: number;
							vspeed: number;
							visible: number;
							effectEnabled: number;
							effectType: string;
							effectProperties: any[];
							acount: number;
							assets: any[];
							scount: number;
							sprites: any[];
							ecount: number;
							sequences: any[];
							pcount: number;
							particles: any[];
							icount?: undefined;
							iinstIDs?: undefined;
							bvisible?: undefined;
							bforeground?: undefined;
							bindex?: undefined;
							bhtiled?: undefined;
							bvtiled?: undefined;
							bstretch?: undefined;
							bblend?: undefined;
							bimage_index?: undefined;
							bimage_speed?: undefined;
					  }
					| {
							pName: string;
							id: number;
							type: number;
							depth: number;
							x: number;
							y: number;
							hspeed: number;
							vspeed: number;
							visible: number;
							effectEnabled: number;
							effectType: string;
							effectProperties: any[];
							bvisible: boolean;
							bforeground: boolean;
							bindex: number;
							bhtiled: boolean;
							bvtiled: boolean;
							bstretch: boolean;
							bblend: number;
							bimage_index: number;
							bimage_speed: number;
							icount?: undefined;
							iinstIDs?: undefined;
							acount?: undefined;
							assets?: undefined;
							scount?: undefined;
							sprites?: undefined;
							ecount?: undefined;
							sequences?: undefined;
							pcount?: undefined;
							particles?: undefined;
					  }
				)[];
		  }
		| {
				pName: string;
				width: number;
				height: number;
				speed: number;
				colour: number;
				LayerCount: number;
				showColour: boolean;
				enableViews: boolean;
				pCode: typeof gml_Room_rm_home_Create;
				backgrounds: any[];
				views: (
					| {
							visible: boolean;
							wview: number;
							hview: number;
							wport: number;
							hport: number;
					  }
					| {
							wview: number;
							hview: number;
							wport: number;
							hport: number;
							visible?: undefined;
					  }
				)[];
				pInstances: (
					| {
							x: number;
							y: number;
							index: number;
							id: number;
							rotation: number;
							scaleX: number;
							scaleY: number;
							imageSpeed: number;
							imageIndex: number;
							colour: number;
							pPreCreateCode?: undefined;
							pCode?: undefined;
					  }
					| {
							x: number;
							y: number;
							index: number;
							id: number;
							pPreCreateCode: typeof gml_RoomCC_rm_home_1_PreCreate;
							rotation: number;
							scaleX: number;
							scaleY: number;
							imageSpeed: number;
							imageIndex: number;
							colour: number;
							pCode?: undefined;
					  }
					| {
							x: number;
							y: number;
							index: number;
							id: number;
							pCode: typeof gml_RoomCC_rm_home_20_Create;
							pPreCreateCode: typeof gml_RoomCC_rm_home_20_PreCreate;
							rotation: number;
							scaleX: number;
							scaleY: number;
							imageSpeed: number;
							imageIndex: number;
							colour: number;
					  }
				)[];
				tiles: any[];
				layers: (
					| {
							pName: string;
							id: number;
							type: number;
							depth: number;
							x: number;
							y: number;
							hspeed: number;
							vspeed: number;
							visible: number;
							effectEnabled: number;
							effectType: string;
							effectProperties: any[];
							icount: number;
							iinstIDs: number[];
							bvisible?: undefined;
							bforeground?: undefined;
							bindex?: undefined;
							bhtiled?: undefined;
							bvtiled?: undefined;
							bstretch?: undefined;
							bblend?: undefined;
							bimage_index?: undefined;
							bimage_speed?: undefined;
					  }
					| {
							pName: string;
							id: number;
							type: number;
							depth: number;
							x: number;
							y: number;
							hspeed: number;
							vspeed: number;
							visible: number;
							effectEnabled: number;
							effectType: string;
							effectProperties: any[];
							bvisible: boolean;
							bforeground: boolean;
							bindex: number;
							bhtiled: boolean;
							bvtiled: boolean;
							bstretch: boolean;
							bblend: number;
							bimage_index: number;
							bimage_speed: number;
							icount?: undefined;
							iinstIDs?: undefined;
					  }
				)[];
				viewClearScreen?: undefined;
		  }
		| {
				pName: string;
				width: number;
				height: number;
				speed: number;
				colour: number;
				LayerCount: number;
				showColour: boolean;
				viewClearScreen: boolean;
				backgrounds: any[];
				views: {
					wview: number;
					hview: number;
					wport: number;
					hport: number;
				}[];
				pInstances: (
					| {
							x: number;
							y: number;
							index: number;
							id: number;
							pPreCreateCode: typeof gml_RoomCC_rm_kongregate_0_PreCreate;
							rotation: number;
							scaleX: number;
							scaleY: number;
							imageSpeed: number;
							imageIndex: number;
							colour: number;
					  }
					| {
							x: number;
							y: number;
							index: number;
							id: number;
							rotation: number;
							scaleX: number;
							scaleY: number;
							imageSpeed: number;
							imageIndex: number;
							colour: number;
							pPreCreateCode?: undefined;
					  }
				)[];
				tiles: any[];
				layers: (
					| {
							pName: string;
							id: number;
							type: number;
							depth: number;
							x: number;
							y: number;
							hspeed: number;
							vspeed: number;
							visible: number;
							effectEnabled: number;
							effectType: string;
							effectProperties: any[];
							icount: number;
							iinstIDs: number[];
							bvisible?: undefined;
							bforeground?: undefined;
							bindex?: undefined;
							bhtiled?: undefined;
							bvtiled?: undefined;
							bstretch?: undefined;
							bblend?: undefined;
							bimage_index?: undefined;
							bimage_speed?: undefined;
					  }
					| {
							pName: string;
							id: number;
							type: number;
							depth: number;
							x: number;
							y: number;
							hspeed: number;
							vspeed: number;
							visible: number;
							effectEnabled: number;
							effectType: string;
							effectProperties: any[];
							bvisible: boolean;
							bforeground: boolean;
							bindex: number;
							bhtiled: boolean;
							bvtiled: boolean;
							bstretch: boolean;
							bblend: number;
							bimage_index: number;
							bimage_speed: number;
							icount?: undefined;
							iinstIDs?: undefined;
					  }
				)[];
				pCode?: undefined;
				enableViews?: undefined;
		  }
		| {
				pName: string;
				width: number;
				height: number;
				speed: number;
				colour: number;
				LayerCount: number;
				showColour: boolean;
				enableViews: boolean;
				viewClearScreen: boolean;
				backgrounds: any[];
				views: (
					| {
							visible: boolean;
							wview: number;
							hview: number;
							wport: number;
							hport: number;
							hborder: number;
							vborder: number;
					  }
					| {
							wview: number;
							hview: number;
							wport: number;
							hport: number;
							visible?: undefined;
							hborder?: undefined;
							vborder?: undefined;
					  }
				)[];
				pInstances: {
					x: number;
					y: number;
					index: number;
					id: number;
					rotation: number;
					scaleX: number;
					scaleY: number;
					imageSpeed: number;
					imageIndex: number;
					colour: number;
				}[];
				tiles: any[];
				layers: {
					pName: string;
					id: number;
					type: number;
					depth: number;
					x: number;
					y: number;
					hspeed: number;
					vspeed: number;
					visible: number;
					effectEnabled: number;
					effectType: string;
					effectProperties: any[];
					icount: number;
					iinstIDs: number[];
				}[];
				pCode?: undefined;
		  }
	)[];
	RoomOrder: number[];
	TPageEntries: {
		x: number;
		y: number;
		w: number;
		h: number;
		XOffset: number;
		YOffset: number;
		CropWidth: number;
		CropHeight: number;
		ow: number;
		oh: number;
		tp: number;
	}[];
	Textures: string[];
	TexturesBlocks: {
		MipsToGenerate: number;
	}[];
	TextureGroupInfo: {
		pName: string;
		TextureIDs: number[];
		SpriteIDs: number[];
		SpineSpriteIDs: any[];
		FontIDs: number[];
		TilesetIDs: any[];
	}[];
	FeatureFlags: {
		"filt+fx": string;
		subscription: string;
		gx_mod_wallpaper: string;
		nullish: string;
		login_sso: string;
		"operagx-yyc": string;
		mqtt: string;
		"audio-fx": string;
		intellisense: string;
		test: string;
		custom_env: string;
		gx_mod_gamestrip: string;
		live_wallpaper_subscription: string;
	};
	Options: {
		debugMode: boolean;
		AssetCompilerMajorVersion: number;
		AssetCompilerMinorVersion: number;
		AssetCompilerBuildVersion: number;
		GameSpeed: number;
		DrawColour: number;
		xscreensize: number;
		yscreensize: number;
		gameId: number;
		gameGuid: string;
		fullScreen: boolean;
		interpolatePixels: boolean;
		showCursor: boolean;
		scale: number;
		allowFullScreenKey: boolean;
		freezeOnLostFocus: boolean;
		showLoadingBar: boolean;
		displayErrors: boolean;
		writeErrors: boolean;
		abortErrors: boolean;
		variableErrors: boolean;
		outputDebugToConsole: boolean;
		WebGL: number;
		WebGLPreserveDrawingBuffer: number;
		CollisionCompatibility: boolean;
		UseNewAudio: boolean;
		GameDir: string;
		Config: string;
		ViewColour: number;
		CreateEventOrder: boolean;
		UseParticles: boolean;
		UseBuiltinFont: boolean;
		LocalRunAlert: boolean;
		crc: number;
		ProjectName: string;
		md5: number[];
		MajorVersion: number;
		MinorVersion: number;
		BuildVersion: number;
		RevisionVersion: number;
		DisplayName: string;
		UseFBExtension: boolean;
		tm: number;
		AllowStatistics: string;
		loadingBarCallback: string;
	};
};
declare function gml_Room_rm_master_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_master_2_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_master_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_master_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_master_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_master_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_master_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_master_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_master_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_master_9_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_master_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_master_11_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_master_12_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_master_13_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_master_14_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_master_15_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_master_16_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_master_17_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_master_18_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_master_20_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_master_20_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_master_21_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_master_21_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_title_0_PreCreate(_inst: any, _other: any): void;
declare function gml_Room_rm_details_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_details_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_details_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_details_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_details_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_details_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_details_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_details_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_details_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_details_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_details_9_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_details_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_details_11_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_details_12_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_details_12_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_details_13_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_details_14_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_details_15_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_details_16_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_choose_team_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_choose_team_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_choose_team_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_choose_team_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_choose_team_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_choose_team_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_choose_team_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_choose_team_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_choose_team_9_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_choose_team_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_choose_team_11_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_choose_face_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_choose_face_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_choose_face_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_choose_face_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_choose_face_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_choose_face_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_draft_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_draft_0_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_draft_1_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_draft_3_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_draft_4_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_draft_5_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_draft_6_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_draft_8_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_draft_9_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_draft_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_edit_team_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_edit_team_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_9_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_11_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_12_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_13_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_14_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_15_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_16_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_17_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_18_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_19_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_20_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_21_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_22_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_23_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_24_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_27_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_28_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_29_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_30_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_31_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_32_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_33_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_34_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_35_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_36_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_37_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_38_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_39_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_40_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_41_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_42_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_43_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_team_44_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_freeagents_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_freeagents_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_freeagents_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_freeagents_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_freeagents_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_freeagents_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_freeagents2_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_freeagents2_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_freeagents2_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_freeagents2_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_freeagents2_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_freeagents2_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_freeagents2_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_freeagents2_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_freeagents2_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_freeagents2_9_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_freeagents2_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_freeagents2_17_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_freeagents2_19_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_freeagents2_21_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_freeagents2_24_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_freeagents2_27_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_freeagents2_28_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_freeagents2_29_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_frontoffice_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_frontoffice_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_frontoffice_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_frontoffice_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_frontoffice_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_frontoffice_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_frontoffice_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_frontoffice_9_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_frontoffice_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_frontoffice_11_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_frontoffice_12_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_frontoffice_15_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_frontoffice_17_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_frontoffice_18_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_frontoffice_19_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_frontoffice_20_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_frontoffice_22_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_frontoffice_23_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_frontoffice_26_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_frontoffice_26_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_frontoffice_27_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_halloffame_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_halloffame_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_3_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_8_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_halloffame_retrobowls_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_retrobowls_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_retrobowls_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_retrobowls_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_retrobowls_4_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_retrobowls_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_retrobowls_5_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_retrobowls_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_retrobowls_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_retrobowls_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_halloffame_players_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_players_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_players_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_players_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_players_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_players_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_players_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_players_7_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_players_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_players_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_players_9_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_players_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_halloffame_player_records_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_player_records_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_player_records_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_player_records_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_player_records_3_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_player_records_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_player_records_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_player_records_5_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_player_records_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_player_records_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_halloffame_player_records_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_home_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_home_1_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_home_2_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_home_3_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_home_4_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_home_5_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_home_6_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_home_7_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_home_8_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_home_9_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_home_10_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_home_16_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_home_17_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_home_18_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_home_20_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_home_20_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_home_22_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_kongregate_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_kongregate_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_kongregate_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_league_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_league_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_league_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_league_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_league_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_league_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_league_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_league_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_league_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_league_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_league_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_league_11_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_league_12_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_league_14_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_league_15_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_options_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_options_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_9_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_11_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_12_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_13_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_14_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_15_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_16_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_17_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_18_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_19_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_20_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_21_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_22_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_23_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_25_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_26_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_27_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_28_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_29_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_30_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_31_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_32_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_33_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_34_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_35_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_36_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_37_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_38_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_39_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_40_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_41_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_42_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_44_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_options_44_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_45_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_options_45_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_46_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_options_46_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_playoffs_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_playoffs_22_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_playoffs_23_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_playoffs_25_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_playoffs_26_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_playoffs_27_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_playoffs_28_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_playoffs_29_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_playoffs_30_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_playoffs2_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_playoffs2_12_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_playoffs2_13_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_playoffs2_15_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_playoffs2_16_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_playoffs2_17_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_playoffs2_18_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_playoffs2_21_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_playoffs2_22_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_pre_match_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_pre_match_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_pre_match_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_pre_match_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_pre_match_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_pre_match_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_pre_match_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_pre_match_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_pre_match_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_pre_match_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_pre_match_9_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_pre_match_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_pre_match_11_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_pre_match_12_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_pre_match_14_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_pre_match_14_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_profile_player_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_9_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_11_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_13_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_15_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_16_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_17_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_18_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_19_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_20_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_21_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_22_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_23_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_24_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_25_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_26_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_27_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_28_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_29_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_30_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_31_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_32_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_33_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_36_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_37_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_38_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_39_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_40_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_41_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_42_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_43_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_44_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_45_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_46_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_47_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_48_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_49_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_50_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_player_51_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_profile_staff_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_staff_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_staff_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_staff_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_staff_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_staff_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_staff_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_staff_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_staff_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_staff_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_staff_9_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_staff_11_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_staff_12_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_staff_13_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_staff_14_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_staff_15_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_staff_16_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_staff_17_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_staff_18_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_staff_19_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_staff_20_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_staff_21_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_staff_22_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_post_match_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_post_match_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_post_match_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_post_match_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_post_match_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_post_match_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_post_match_9_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_post_match_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_roster_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_roster_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_roster_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_roster_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_roster_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_roster_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_roster_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_stats_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_stats_2_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_stats_3_PreCreate(_inst: any, _other: any): void;
declare function gml_Room_rm_stats_player_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_stats_player_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_11_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_12_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_13_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_14_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_15_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_16_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_17_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_18_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_19_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_20_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_21_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_22_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_22_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_23_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_stats_player_23_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_meeting_player_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_meeting_player_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_meeting_player_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_meeting_player_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_meeting_player_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_meeting_player_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_meeting_player_9_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_meeting_player_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_meeting_player_11_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_meeting_player_12_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_meeting_player_13_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_meeting_player_14_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_meeting_player_16_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_meeting_player_18_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_meeting_player_19_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_team_editor_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_team_editor_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_team_editor_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_team_editor_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_team_editor_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_team_editor_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_team_editor_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_team_editor_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_team_editor_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_team_editor_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_team_editor_9_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_team_editor_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_team_editor_12_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_team_editor_13_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_team_editor_14_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_team_editor_16_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_team_editor_17_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_team_editor_18_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_team_editor_19_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_team_editor_20_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_team_editor_21_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_training_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_training_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_training_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_training_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_training_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_training_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_viewhires_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_viewhires_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_viewhires_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_viewhires_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_viewhires_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_viewhires_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_viewhires_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_viewhires_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_viewhires_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_viewhires_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_viewhires_9_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_viewhires_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_viewhires_11_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_viewhires_12_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_viewhires_13_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_viewhires_14_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_viewhires_18_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_watermark_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_watermark_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_watermark_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_watermark_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_watermark_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_watermark_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_watermark_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_watermark_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_winners_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_winners_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_winners_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_winners_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_winners_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_winners_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_winners_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_winners_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_xp_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_xp_0_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_xp_1_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_xp_2_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_xp_3_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_xp_7_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_xp_9_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_xp_10_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_xp_15_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_xp_16_PreCreate(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_xp_17_PreCreate(_inst: any, _other: any): void;
declare function gml_Room_rm_ad_retrogoal_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_ad_retrogoal_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_options2_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_options2_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options2_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options2_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options2_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options2_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options2_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options2_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options2_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options2_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_options_mapping_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_mapping_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_mapping_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_mapping_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_mapping_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_mapping_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_season_tally_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_season_tally_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_season_tally_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_season_tally_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_season_tally_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_season_tally_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_season_tally_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_season_tally_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_qb_life_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_qb_life_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_life_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_life_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_life_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_life_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_life_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_life_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_life_9_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_life_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_life_13_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_life_14_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_life_15_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_life_16_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_life_17_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_life_18_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_life_19_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_qb_post_match_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_post_match_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_post_match_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_post_match_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_post_match_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_post_match_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_post_match_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_post_match_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_post_match_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_post_match_11_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_post_match_13_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_post_match_14_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_qb_shopping_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_qb_shopping_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_shopping_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_shopping_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_shopping_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_shopping_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_shopping_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_shopping_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_shopping_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_shopping_9_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_shopping_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_qb_contract_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_qb_contract_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_9_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_12_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_13_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_14_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_15_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_16_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_17_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_18_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_19_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_20_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_21_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_22_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_23_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_24_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_25_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_26_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_27_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_28_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_contract_30_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_qb_negotiate_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_qb_negotiate_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_negotiate_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_negotiate_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_negotiate_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_negotiate_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_negotiate_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_qb_post_training_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_post_training_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_post_training_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_post_training_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_post_training_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_post_training_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_post_training_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_post_training_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_post_training_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_post_training_11_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_post_training_13_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_qb_post_training_14_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_draft_college_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_profile_boss_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_profile_boss_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_boss_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_boss_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_boss_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_boss_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_boss_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_boss_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_boss_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_boss_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_boss_9_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_boss_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_boss_11_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_boss_12_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_boss_13_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_boss_14_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_boss_15_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_profile_boss_16_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_exhibition_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_exhibition_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_9_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_10_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_11_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_12_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_13_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_14_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_15_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_16_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_17_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_19_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_20_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_options_exh_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_options_exh_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_exh_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_exh_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_exh_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_exh_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_exh_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_exh_6_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_exh_7_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_exh_8_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_options_exh_9_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_exhibition_postmatch_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_postmatch_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_postmatch_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_exhibition_options_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_options_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_options_1_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_options_2_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_options_3_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_options_4_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_exhibition_options_5_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_choose_team_college_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_choose_team_college_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_league_college_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_league_college_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_debug_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_debug_0_PreCreate(_inst: any, _other: any): void;
declare function gml_Room_rm_postseason_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_postseason_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_editor_Create(_inst: any, _other: any): void;
declare function gml_RoomCC_rm_editor_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_Room_rm_edit_competition_Create(
	_inst: any,
	_other: any,
): void;
declare function gml_RoomCC_rm_edit_competition_0_PreCreate(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript__poki_gameplay_start(
	_inst: any,
	_other: any,
): void;
declare function gml_Script__poki_gameplay_start(_inst: any, _other: any): void;
declare function gml_GlobalScript__poki_gameplay_stop(
	_inst: any,
	_other: any,
): void;
declare function gml_Script__poki_gameplay_stop(_inst: any, _other: any): void;
declare function gml_GlobalScript__poki_is_mobile(
	_inst: any,
	_other: any,
): void;
declare function gml_Script__poki_is_mobile(_inst: any, _other: any): boolean;
declare function gml_GlobalScript__poki_rewarded_ad(
	_inst: any,
	_other: any,
): void;
declare function gml_Script__poki_rewarded_ad(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_browser_rewarded_ad_success(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_ads_scripts(_inst: any, _other: any): void;
declare function gml_Script_s_interstitial_create(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_interstitial_step(_inst: any, _other: any): void;
declare function gml_Script_anon_2053_adpool_ads_scripts(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_anon_2256_adpool_ads_scripts(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_anon_2498_adpool_ads_scripts(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_anon_2663_adpool_ads_scripts(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_adpool(_inst: any, _other: any): void;
declare namespace gml_Script_adpool {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_anon_3037_ad_ads_scripts(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): any;
declare function gml_Script_ad(_inst: any, _other: any): void;
declare namespace gml_Script_ad {
	var __yyg__is_constructor: boolean;
}
declare function gml_GlobalScript_age_scripts(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_rookie_age_internal(
	_inst: any,
	_other: any,
): 21 | 18;
declare function gml_Script_s_max_age_player_internal(
	_inst: any,
	_other: any,
): 21 | 35;
declare function gml_Script_s_max_age_qb_internal(
	_inst: any,
	_other: any,
): 21 | 40;
declare function gml_Script_s_get_max_age(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_GlobalScript_btn_click_AddSkill(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_AddSkill(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_AddSpeed(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_AddSpeed(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_AddStamina(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_AddStamina(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_AddStrength(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_AddStrength(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_BallStyle(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_BallStyle(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_BengRams(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_BengRams(_inst: any, _other: any): void;
declare function gml_Script_s_update_btn_bengrams(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_ui_colours(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_btn_click_Boost_Condition(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Boost_Condition(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Boost_Morale(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Boost_Morale(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Boost_Salary_Cap(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Boost_Salary_Cap(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Change_Favourite(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___0_btn_click_Change_Favourite_btn_click_Change_Favourite(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___0_btn_click_Change_Favourite_btn_click_Change_Favourite {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_btn_click_Change_Favourite(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_ChooseAFC(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ChooseAFC(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_ChooseFace(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ChooseFace(_inst: any, _other: any): void;
declare function gml_Script_s_goto_rm_choose_face(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_ChooseFaceDone(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ChooseFaceDone(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_cancel_chooseface(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_ChooseFaceNext(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ChooseFaceNext(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_ChooseFacePrev(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ChooseFacePrev(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_ChooseNFC(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ChooseNFC(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_ChooseReject(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ChooseReject_loading(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ChooseReject(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_ChooseTeam(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ChooseTeam(_inst: any, _other: any): void;
declare function gml_Script_btn_click_ChooseTeamExhibition(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ChoosePlayerExhibition(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ChoosePlayerExhibition_confirm(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ChoosePlayerExhibition_cancel(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_ChooseTeamNew(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ChooseTeamNew(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_qb_mode_ChooseTeamNew(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Continue(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Continue(_inst: any, _other: any): void;
declare function gml_Script_btn_click_SimGame(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_DeleteSlot1(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_DeleteSlot1(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_DeleteSlot2(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_DeleteSlot2(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_DeleteSlot3(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_DeleteSlot3(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_DeleteSlot4(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_DeleteSlot4(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_DeleteSlot5(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_DeleteSlot5(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Details_Back(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Details_Back(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Details_Continue(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Details_Continue(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_DraftDone(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_DraftDone(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_DraftNext(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_DraftNext(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_DraftPrev(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_DraftPrev(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_edit_conf1(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_edit_conf1(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_edit_conf2(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_edit_conf2(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_edit_div1(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_edit_div1(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_edit_div2(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_edit_div2(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_edit_div3(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_edit_div3(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_edit_div4(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_edit_div4(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_EditAFC(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_EditAFC(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_EditCopySlotA(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_EditCopySlotA(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_EditCopySlotB(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_EditCopySlotB(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_EditCopySlotC(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_EditCopySlotC(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_EditCopySlotD(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_EditCopySlotD(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_EditCopySlotE(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_EditCopySlotE(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_EditEndzone(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_EditEndzone(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_EditHelmet(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_EditHelmet(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_EditLogo(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_EditLogo(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_EditNFC(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_EditNFC(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_EditPants(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_EditPants(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_EditProfile(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_EditProfile(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_EditShirt(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_EditShirt(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_EditSleeve(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_EditSleeve(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_EditSocks1(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_EditSocks1(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_EditSocks2(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_EditSocks2(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_EditStripe(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_EditStripe(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_EditTeam(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_EditTeam(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_external_links(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_BuyMerch(_inst: any, _other: any): void;
declare function gml_Script_btn_click_MusicBy(_inst: any, _other: any): void;
declare function gml_Script_btn_click_YouTube(_inst: any, _other: any): void;
declare function gml_Script_btn_click_RecordBook(_inst: any, _other: any): void;
declare function gml_Script_btn_click_Leagues(_inst: any, _other: any): void;
declare function gml_Script_btn_click_ad_NSS(_inst: any, _other: any): void;
declare function gml_Script_btn_click_ad_NSM(_inst: any, _other: any): void;
declare function gml_Script_btn_click_ad_RG(_inst: any, _other: any): void;
declare function gml_Script_btn_click_ad_NSB(_inst: any, _other: any): void;
declare function gml_Script_btn_click_ad_RB(_inst: any, _other: any): void;
declare function gml_Script_btn_click_ad_RBC(_inst: any, _other: any): void;
declare function gml_Script_btn_click_ad_NSGP(_inst: any, _other: any): void;
declare function gml_Script_btn_click_NewStarGames(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_FacilityStadium(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_FacilityStadium(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_FacilityStaff(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_FacilityStaff(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_FacilityTraining(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_FacilityTraining(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_FieldGoal(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_FieldGoal(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_FreeAgents(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_FreeAgents(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_FreeAgents2(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_FreeAgents2(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_FreeAgentsBack(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_FreeAgentsBack(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_FreeAgentsNext(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_FreeAgentsNext(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_FreeAgentsPrev(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_FreeAgentsPrev(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_FreeAgentsReset(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_FreeAgentsReset(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_FrontOffice(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_FrontOffice(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_GenerateCharacter(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_GenerateCharacter(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_HallOfFame(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_HallOfFame(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_HireStaff(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_HireStaff(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_HOF_Coach(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_HOF_Coach(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_HOF_player_records(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_HOF_player_records(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_HOF_players(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_HOF_players(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_HOF_Select(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_HOF_Select(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_HofNext(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_HofNext(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_HofPrev(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_HofPrev(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_Home(_inst: any, _other: any): void;
declare function gml_Script_btn_click_Home(_inst: any, _other: any): void;
declare function gml_Script_btn_click_Play1(_inst: any, _other: any): void;
declare function gml_Script_btn_click_Options_Exit(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Home_rm_winners(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_InputEndzone(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_InputEndzone(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_InputHelmet(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_InputHelmet(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_InputLogo(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_InputLogo(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_InputPants(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_InputPants(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_InputShirt(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_InputShirt(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_InputSleeve(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_InputSleeve(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_InputSocks1(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_InputSocks1(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_InputSocks2(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_InputSocks2(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_InputStripe(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_InputStripe(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_InvertedThrowing(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_InvertedThrowing(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Kit1(_inst: any, _other: any): void;
declare function gml_Script_btn_click_Kit1(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_Kit2(_inst: any, _other: any): void;
declare function gml_Script_btn_click_Kit2(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_Kit3(_inst: any, _other: any): void;
declare function gml_Script_btn_click_Kit3(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_Kit4(_inst: any, _other: any): void;
declare function gml_Script_btn_click_Kit4(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_KR_Select(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_KR_Select(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_League_Back(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_League_Back(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_League(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___1_btn_click_League_btn_click_League(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___1_btn_click_League_btn_click_League {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_btn_click_League(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_LeagueAFC(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_LeagueAFC(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_LeagueMode(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_LeagueMode(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_LeagueNFC(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_LeagueNFC(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_LeaguePanel(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_btn_click_LeaguePanel(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_btn_click_LeagueReportNext(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_LeagueReportNext(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_LeagueReportPrev(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_LeagueReportPrev(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_LeagueSchedule(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_LeagueSchedule(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Meeting_Condition(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Meeting_Condition(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Meeting_ExtendContract(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Meeting_ExtendContract(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Meeting_LevelUp(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Meeting_LevelUp(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Meeting_Morale(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Meeting_Morale(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_MeetingNext(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_MeetingNext(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_MeetingPrev(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_MeetingPrev(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Options(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Options(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_OptionsAutoRun(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsAutoRun(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_OptionsControls(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsControls(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsControls1(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsControls2(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsControls3(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_control_screen(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_btn_click_OptionsDifficulty(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsDifficulty(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_OptionsDriveBoth(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsDriveBoth(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_OptionsDriveLeft(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsDriveLeft(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsDriveLeft_Exh(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_OptionsDriveRight(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsDriveRight(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_OptionsKickReturns(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsKickReturns(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsKickReturns_Exh(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_OptionsMatchLength(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsMatchLength(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsMatchLength_Exh(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_OptionsNewGame(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsNewGame(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_OptionsReplays(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsReplays(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_OptionsSalaryCap(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsSalaryCap(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_salary_cap_toggle_roster_size(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_roster_cap(_inst: any, _other: any): 10 | 12;
declare function gml_GlobalScript_btn_click_OptionsScanlines(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsScanlines(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_OptionsSoundFX(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsSoundFX(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_OptionsTeamEditor(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsTeamEditor(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_OptionsWeather(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsWeather(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsWeather_Exh(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_OptionsZoom(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_OptionsZoom(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Passing(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Passing(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_PlayerProfile_Back(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_PlayerProfile_Back(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_PlayerProfile(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_PlayerProfile(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_PlayOffs_Back(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_PlayOffs_Back(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_PlayOffs(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_PlayOffs(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_PlayOffsPlay(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_PlayOffsPlay(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_PlayOffsSkip(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_PlayOffsSkip(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Profile_Back(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Profile_Back(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Profile_Cut(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Profile_Cut(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Profile_JefeBoost(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Profile_JefeBoostAge(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Profile_JefeBoostAge_Ancient(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Profile_JefeBoostAge_Max(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Profile_JefeBoostStats(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_JefeBoost_Skill(_inst: any, _other: any): void;
declare function gml_Script_s_JefeBoost_Speed(_inst: any, _other: any): void;
declare function gml_Script_s_JefeBoost_Strength(_inst: any, _other: any): void;
declare function gml_Script_s_JefeBoost_Stamina(_inst: any, _other: any): void;
declare function gml_Script_s_JefeBoost(_inst: any, _other: any): void;
declare function gml_Script_btn_click_Profile_JefeOutOfRetirement(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_JefeOutOfRetirement(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Profile_Not_Interested(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Profile_Not_Interested(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Profile_Pick(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Profile_Pick(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Profile_Rest(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Profile_Rest(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Profile_ScoutPlayer(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Profile_ScoutPlayer(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Profile_Stats(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Profile_Stats(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Profile_Trade(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Profile_Trade(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Profile(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Profile(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_ProfileNext(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ProfileNext(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_ProfilePrev(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ProfilePrev(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_qb_items(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_qb_items(_inst: any, _other: any): void;
declare function gml_Script_btn_click_qb_vehicles(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_qb_property(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_qb_training(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_qb_training(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_do_qb_training(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_Records_Reset(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Records_Reset(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_RestAll(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_RestAll(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_RestoreAllTeams(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_RestoreAllTeams(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Roster_Back(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Roster_Back(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Profile_Back_To_Draft(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Profile_Back_To_Draft_Continue(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Roster_List(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Roster_List(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Roster(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Roster(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_Running(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Running(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_ScheduleNext(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ScheduleNext(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_SchedulePrev(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_SchedulePrev(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_SeasonReview(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_SeasonReview(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_SeasonReviewBack(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___2_btn_click_SeasonReviewBack_btn_click_SeasonReviewBack(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___2_btn_click_SeasonReviewBack_btn_click_SeasonReviewBack {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_btn_click_SeasonReviewBack(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_StaffProfile(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_StaffProfile(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_StaffProfileBack(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_StaffProfileBack(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_StaffProfileNext(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_StaffProfileNext(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_StaffProfilePrev(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_StaffProfilePrev(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_StatsNext(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_StatsNext(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_StatsPrev(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_StatsPrev(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_StatsView1(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_StatsView1(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_StatsView2(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_StatsView2(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_TeamEditCancel(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_TeamEditCancel(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_TeamEditDone(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_TeamEditDone(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_TeamEditMore(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_TeamEditMore(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_TeamEditMoreDone(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_TeamEditMoreDone(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_TeamEditRestore(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_TeamEditRestore(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Training(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Training(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_TrainingHard(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_TrainingHard(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_TrainingLight(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_TrainingLight(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_TrainingNormal(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_TrainingNormal(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Uniform_Away(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Uniform_Away(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Uniform_Home(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Uniform_Home(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_Uniforms(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Uniforms(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_ViewHires(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ViewHires(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_ViewHiresBack(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ViewHiresBack(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_ViewHiresProfile(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ViewHiresProfile(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_ViewHiresReset(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ViewHiresReset(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_click_XP_Back(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_XP_Back(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_click_XP_Continue(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_XP_Continue(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_match_kick(_inst: any, _other: any): void;
declare function gml_Script_btn_match_kick(_inst: any, _other: any): void;
declare function gml_Script_btn_match_goforit(_inst: any, _other: any): void;
declare function gml_Script_btn_match_gofor1pt(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_meet_teammate(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_meet_teammate(_inst: any, _other: any): void;
declare function gml_Script_s_confirm_teammate_meeting(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_1pt(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_1pt(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_response_2pt(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_2pt(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_response_boost_condition(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_boost_condition(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_boost_morale(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_boost_morale(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_boost_salary_cap(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_boost_salary_cap(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_clearfreeagents(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_clearfreeagents(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_cointoss_kick(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_cointoss_kick(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_cointoss_receive(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_cointoss_receive(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_confirm_new_team(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_confirm_new_team_loading(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_confirm_new_team(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_cut_player_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_cut_player_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_deletegame1(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_deletegame1(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_deletegame2(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_deletegame2(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_deletegame3(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_deletegame3(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_deletegame4(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_deletegame4(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_deletegame5(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_deletegame5(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_fg_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_fg_yes(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_response_hirestaff(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_hirestaff(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_hof_select(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_hof_select(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_in_trade_player_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_in_trade_player_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_kick_no(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_kick_no(_inst: any, _other: any): void;
declare function gml_GlobalScript_btn_response_newgame_commit(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_newgame_commit(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_onsidekick_no(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_onsidekick_no(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_onsidekick_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_onsidekick_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_out_trade_player_no(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_out_trade_player_no(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_out_trade_player_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_out_trade_player_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_pick_player_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_pick_player_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_player_meeting_condition_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_player_meeting_condition_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_player_meeting_extend_contract(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_player_meeting_extend_contract(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_player_meeting_levelup_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_player_meeting_levelup_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_player_meeting_morale_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_player_meeting_morale_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_punt_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_punt_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_quit_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_quit_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_records_reset(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_records_reset(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_rest_player_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_rest_player_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_review_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_review_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_review_no(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_skip_draft_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_skip_draft_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_response_skip_tutorial(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_skip_tutorial(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_step_check_fullversion(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_step_check_fullversion(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_btn_step_check_iaps(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_step_check_iaps(_inst: any, _other: any): void;
declare function gml_GlobalScript_chk_click_gamepad(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_chk_click_gamepad(_inst: any, _other: any): void;
declare function gml_GlobalScript_debug_scripts(_inst: any, _other: any): void;
declare function gml_Script_s_debug_window_size(_inst: any, _other: any): void;
declare function gml_Script_s_is_debug_desktop(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_s_set_desktop_dev_window_size(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___3_s_co_debug_access_debug_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___3_s_co_debug_access_debug_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_co_debug_access(_inst: any, _other: any): void;
declare function gml_Script_s_debug_bypass(_inst: any, _other: any): void;
declare function gml_Script_s_debug_room_init(_inst: any, _other: any): void;
declare function gml_Script____struct___4_s_debug_init_menu_debug_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___4_s_debug_init_menu_debug_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___5_s_debug_init_menu_debug_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___5_s_debug_init_menu_debug_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___6_s_debug_init_menu_debug_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___6_s_debug_init_menu_debug_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___7_s_debug_init_menu_debug_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___7_s_debug_init_menu_debug_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___8_s_debug_init_menu_debug_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___8_s_debug_init_menu_debug_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___9_s_debug_init_menu_debug_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___9_s_debug_init_menu_debug_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___10_s_debug_init_menu_debug_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___10_s_debug_init_menu_debug_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___11_s_debug_init_menu_debug_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___11_s_debug_init_menu_debug_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___12_s_debug_init_menu_debug_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___12_s_debug_init_menu_debug_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___13_s_debug_init_menu_debug_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___13_s_debug_init_menu_debug_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___14_s_debug_init_menu_debug_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___14_s_debug_init_menu_debug_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___15_s_debug_init_menu_debug_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___15_s_debug_init_menu_debug_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___16_s_debug_init_menu_debug_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___16_s_debug_init_menu_debug_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___17_s_debug_init_menu_debug_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___17_s_debug_init_menu_debug_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___18_s_debug_init_menu_debug_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___18_s_debug_init_menu_debug_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___19_s_debug_init_menu_debug_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___19_s_debug_init_menu_debug_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_debug_init_menu(_inst: any, _other: any): void;
declare function gml_Script_s_give_debug_cc(_inst: any, _other: any): void;
declare function gml_Script_btn_click_debug_main(_inst: any, _other: any): void;
declare function gml_Script____struct___20_btn_click_debug_team_ranking_debug_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___20_btn_click_debug_team_ranking_debug_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_btn_click_debug_team_ranking(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_debug_test_screen(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_debug_review_screen(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_debug_skip_regular_season(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_debug_skip_next_match(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_debug_force_skip_result(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_forced_skip_result_readout(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_btn_click_debug_test_pool_creation(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_debug_team_editor_franchise_screen(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_debug_editor_screen(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_debug_switch_data_version(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_alternative_data_version(
	_inst: any,
	_other: any,
): 2 | 1;
declare function gml_Script____struct___21_s_debug_init_team_ranking_debug_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___21_s_debug_init_team_ranking_debug_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___22_s_debug_init_team_ranking_debug_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___22_s_debug_init_team_ranking_debug_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___23_s_debug_init_team_ranking_debug_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___23_s_debug_init_team_ranking_debug_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___24_s_debug_init_team_ranking_debug_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___24_s_debug_init_team_ranking_debug_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_anon_7817_s_debug_init_team_ranking_debug_scripts(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_debug_init_team_ranking(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_dbg_list_prev_conference(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_dbg_list_next_conference(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_clamp_conference_id(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_dbg_team_ranking_draw_gui(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_debug_test_sim_odds(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_debug_list_bracketed_fixtures(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_debug_start_time(_inst: any, _other: any): void;
declare function gml_Script_s_debug_show_time(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_set_exception_reporter(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_fake_crash(_inst: any, _other: any): void;
declare function gml_Script_s_fake_crash_safe(_inst: any, _other: any): void;
declare function gml_Script_s_safe_run(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_safe_run_catch(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_safe_run_msg(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_safe_run_crash_report(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_safe_run_crash_save(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_exhibition_scripts(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_exhibition_start(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_exhibition_exit(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_exhibition_exit(_inst: any, _other: any): void;
declare function gml_Script_s_exhibition_lost_two_controllers(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_exhibition_assign_lost_controller(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_exhibition_abandon(_inst: any, _other: any): void;
declare function gml_Script_s_set_up_uniforms_exhibition(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_exhibition_fixture(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_btn_click_exhibition_controller_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_exhibition_controller_1(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_exhibition_controllers(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ChangeTeamAway(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ChangeTeamHome(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Exhibition_Play(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_options_exh(_inst: any, _other: any): void;
declare function gml_Script_s_force_kick_direction(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_count_audibles(_inst: any, _other: any): any;
declare function gml_Script_s_update_audibles(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_set_audibles(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_count_timeouts(_inst: any, _other: any): any;
declare function gml_Script_s_update_timeouts(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_set_timeouts(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_set_exhibition_buttons(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_btn_click_exhibition_switch_start(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_exhibition_controller_check_continue(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_exhibition_controllers(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_exhibition_controllers_refresh(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_rm_exhibition_options_create(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_exh_teamswap_allowed(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_get_ex_teamset_0(_inst: any, _other: any): any;
declare function gml_Script_get_ex_teamset_1(_inst: any, _other: any): any;
declare function gml_Script_get_ex_uniform_file(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_btn_click_ExhibitionLoadUniformsA(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ExhibitionLoadUniformsB(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ExhibitionLoadUniformsC(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ExhibitionLoadUniformsD(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ExhibitionLoadUniformsE(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_ExhibitionLoadUniforms(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_get_save_from_number(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_load_save_team_exhibitionA(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_load_save_team_exhibitionB(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_load_save_team_exhibitionC(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_load_save_team_exhibitionD(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_load_save_team_exhibitionE(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_load_save_team_exhibition(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_exh_refresh_roster_from_save(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_load_html_save1_exhibition(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_RestoreAllTeams_ex(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_restore_uniforms_all_ex(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_exhibition_team_management_start(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_exhibition_team_management_clear(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_exhibition_wipe_list(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_Script_s_refresh_exhibition_team_load_buttons(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_refresh_exh_roster_buttons(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_RosterTeamAway(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_RosterTeamHome(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Profile_Back_To_Exhibition(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_rm_player_profile_exhibition_create(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_rm_roster_exhibition_create(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_exhibition_handle_exit_match(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_font_scripts(_inst: any, _other: any): void;
declare function gml_Script_s_data_path(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_fonts_init(_inst: any, _other: any): void;
declare function gml_Script_s_erase_text_background(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): void;
declare function gml_Script_draw_hd_text(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): void;
declare function gml_Script_draw_hd_text_color(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
	argument6: any,
	argument7: any,
): void;
declare function gml_Script_draw_hd_text_ext(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
): void;
declare function gml_Script_draw_hd_text_ext_color(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
	argument6: any,
	argument7: any,
	argument8: any,
	argument9: any,
): void;
declare function gml_Script_draw_hd_text_transformed(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
): void;
declare function gml_Script_draw_hd_text_transformed_color(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
	argument6: any,
	argument7: any,
	argument8: any,
	argument9: any,
	argument10: any,
): void;
declare function gml_Script_draw_hd_text_ext_transformed(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
	argument6: any,
	argument7: any,
): void;
declare function gml_Script_string_hd_width(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_string_hd_width_ext(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_Script_string_hd_height(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_string_hd_height_ext(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_GlobalScript_gmcallback_poki_loadbar(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
	argument6: any,
): void;
declare function gml_Script_gmcallback_poki_loadbar(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
	argument6: any,
): any;
declare function gml_GlobalScript_is_defensiveback(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_is_defensiveback(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_GlobalScript_keyboard_scripts(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_keyboard_custom_enabled(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script____struct___25_s_keyboard_custom_init_keyboard_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___25_s_keyboard_custom_init_keyboard_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_keyboard_custom_init(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_keyboard_custom_show(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_keyboard_custom_hide(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_keyboard_custom_layer(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_s_keyboard_custom_create(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_keyboard_custom_destroy(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_keyboard_custom_create_button(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
): any;
declare function gml_Script_s_custkb_base_draw_gui(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_custkb_base_step(_inst: any, _other: any): void;
declare function gml_Script_s_custkb_confirm(_inst: any, _other: any): void;
declare function gml_Script_s_custkb_delete(_inst: any, _other: any): void;
declare function gml_Script_s_custkb_shift_toggle(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_custkb_add_text(_inst: any, _other: any): void;
declare function gml_Script_s_custkb_key_init(_inst: any, _other: any): void;
declare function gml_Script_s_custkb_key_draw_gui(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_custkb_key_step(_inst: any, _other: any): void;
declare function gml_Script_s_custkb_key_tap(_inst: any, _other: any): void;
declare function gml_GlobalScript_nrg(_inst: any, _other: any): void;
declare function gml_Script_btn_click_nrg_buy(_inst: any, _other: any): void;
declare function gml_Script_btn_click_nrg_drink(_inst: any, _other: any): void;
declare function gml_Script_s_drink_nrg(_inst: any, _other: any): void;
declare function gml_Script_s_get_condition_colour(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_condition_icon(
	_inst: any,
	_other: any,
	argument0: any,
): 0 | 2 | 1 | -1 | 3;
declare function gml_GlobalScript_nx_scripts(_inst: any, _other: any): void;
declare function gml_Script_s_nx_init(_inst: any, _other: any): void;
declare function gml_Script_s_nx_commit(_inst: any, _other: any): void;
declare function gml_Script_s_nx_get_open_user(_inst: any, _other: any): number;
declare function gml_Script_s_is_switch(_inst: any, _other: any): boolean;
declare function gml_GlobalScript_pause_scripts(_inst: any, _other: any): void;
declare function gml_Script_s_pause_toggle(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_pause_is_available(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_s_pause_step(_inst: any, _other: any): void;
declare function gml_Script_s_is_paused_or_just_unpaused(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_s_draw_pause(_inst: any, _other: any): void;
declare function gml_Script_s_pause_btn_init(_inst: any, _other: any): void;
declare function gml_Script_s_pause_btn_step(_inst: any, _other: any): void;
declare function gml_Script_s_pause_btn_draw_gui(_inst: any, _other: any): void;
declare function gml_Script_s_pause_btn_recenter(_inst: any, _other: any): void;
declare function gml_Script_s_pause_options_init(_inst: any, _other: any): void;
declare function gml_Script_s_pause_options_recenter(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_pause_options_dismiss(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_pause_options_draw_gui(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_pause_options_layer(_inst: any, _other: any): any;
declare function gml_Script_s_pause_options_add_button(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
): void;
declare function gml_Script_s_pause_options_add_quit(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_pause_options_update_buttons(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_pause_options_button_action(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_pause_options_quit_game(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_quit_exhibition_cancel(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_quit_exhibition_confirm(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_poki_btn_click_CoinBoost(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_poki_btn_click_CoinBoost(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_poki_CoinBoost_No(_inst: any, _other: any): void;
declare function gml_Script_poki_CoinBoost_Yes(_inst: any, _other: any): void;
declare function gml_GlobalScript_poki_pause(_inst: any, _other: any): void;
declare function gml_Script_poki_pause(_inst: any, _other: any): void;
declare function gml_GlobalScript_poki_resume(_inst: any, _other: any): void;
declare function gml_Script_poki_resume(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_GlobalScript_qb_contract_scripts(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_qb_mode_set_up_contract_screen(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___26_s_qb_mode_new_contract_qb_contract_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___26_s_qb_mode_new_contract_qb_contract_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_qb_mode_new_contract(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_btn_contract_negotiate(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_contract_salary_minus(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_contract_salary_plus(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_contract_tdbonus_minus(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_contract_tdbonus_plus(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_contract_length_minus(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_contract_length_plus(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_negotiate_higher(_inst: any, _other: any): void;
declare function gml_Script_btn_negotiate_lower(_inst: any, _other: any): void;
declare function gml_Script_s_check_negotiate(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_check_hilo_buttons(_inst: any, _other: any): void;
declare function gml_Script_s_accept_contract(_inst: any, _other: any): void;
declare function gml_Script_s_reject_contract(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_achievements(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_complete_achievement(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_achievement_is_valid(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_exists_in_list(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): boolean;
declare function gml_Script_s_count_achievement(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_achievement(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_achievement_percentage(
	_inst: any,
	_other: any,
): number;
declare function gml_Script_s_get_filtered_achievements(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_ach_desc(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_action_result(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_action_result(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_add_news(_inst: any, _other: any): void;
declare function gml_Script_s_add_news(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_add_news_if_new(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_remove_news(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_add_news_dyn(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): void;
declare function gml_GlobalScript_s_add_to_human_fixtures(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_add_to_human_fixtures(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_GlobalScript_s_add_xp_gain_all(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_add_xp_gain_all(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_GlobalScript_s_adjust_team_morale(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_adjust_team_morale(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_adjust_team_morale_ignore_freshman(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_GlobalScript_s_aim_AI_defense(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_aim_AI_defense(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_aim_AI_kickoff(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_aim_AI_kickoff(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_aim_AI_offense(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_aim_AI_offense(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_aim_for_nearest_opponent(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_aim_for_nearest_opponent(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_aiming(_inst: any, _other: any): void;
declare function gml_Script_s_aiming(_inst: any, _other: any): boolean;
declare function gml_GlobalScript_s_all_players_resting(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_all_players_resting(
	_inst: any,
	_other: any,
): boolean;
declare function gml_GlobalScript_s_apple_arcade_helpers(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_aa_debug_give_cc(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_award_sb_rings(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_award_sb_rings(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_ball_holder_goalside(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_ball_holder_goalside(
	_inst: any,
	_other: any,
): boolean;
declare function gml_GlobalScript_s_benched(_inst: any, _other: any): void;
declare function gml_Script_s_player_benched(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_GlobalScript_s_can_run(_inst: any, _other: any): void;
declare function gml_Script_s_can_run(_inst: any, _other: any): boolean;
declare function gml_GlobalScript_s_can_throw(_inst: any, _other: any): void;
declare function gml_Script_s_can_throw(_inst: any, _other: any): boolean;
declare function gml_GlobalScript_s_can_touchback(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_can_touchback(_inst: any, _other: any): boolean;
declare function gml_GlobalScript_s_canvas_fullscreen(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_canvas_fullscreen(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_change_possession(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_change_possession(_inst: any, _other: any): void;
declare function gml_Script_s_force_possession(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_change_wind(_inst: any, _other: any): void;
declare function gml_Script_s_change_wind(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_check_ball_collision(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_Debug_S_Log(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_get_color_by_index(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_Script_s_check_ball_collision(
	_inst: any,
	_other: any,
): boolean;
declare function gml_GlobalScript_s_check_ball_position(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_ball_position(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_check_contracts_expiring(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_contracts_expiring(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_check_dive(_inst: any, _other: any): void;
declare function gml_Script_s_check_dive(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_check_draft_qb(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_draft_QB(_inst: any, _other: any): void;
declare function gml_Script_s_do_qb_draft_round(_inst: any, _other: any): void;
declare function gml_Script_s_get_weakest_player_by_position(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_find_draft_player_by_position(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_player_by_position_for_qb_draft(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_do_contract_news(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_goto_room_contract(_inst: any, _other: any): void;
declare function gml_Script_btn_qb_mode_interested_teams(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_check_draft(_inst: any, _other: any): void;
declare function gml_Script_s_check_draft(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_check_dummy_collision(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_dummy_collision(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_sound_training_success(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_check_expired_contract_message(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_expired_contract_message(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_check_for_injury(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_for_injury(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_GlobalScript_s_check_for_news(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_for_news(_inst: any, _other: any): void;
declare function gml_Script_s_has_news(_inst: any, _other: any): boolean;
declare function gml_GlobalScript_s_check_human_control(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_human_control(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_do_dive(_inst: any, _other: any): void;
declare function gml_Script_s_do_stutterstep(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_check_ingame_control_change(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_ingame_control_change(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_check_intro(_inst: any, _other: any): void;
declare function gml_Script_s_check_intro(_inst: any, _other: any): void;
declare function gml_Script_s_check_intro_college(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_intro_rm_home(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_intro_rm_home_college(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_intro_rm_roster(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_intro_rm_roster_college(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_intro_rm_frontoffice(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_intro_rm_frontoffice_college(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_intro_rm_profile_staff(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_intro_rm_profile_staff_college(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_intro_rm_profile_boss(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_intro_rm_profile_boss_college(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_intro_case1(_inst: any, _other: any): void;
declare function gml_Script_s_check_intro_case2(_inst: any, _other: any): void;
declare function gml_Script_s_check_intro_case3(_inst: any, _other: any): void;
declare function gml_Script_s_check_intro_case4(_inst: any, _other: any): void;
declare function gml_Script_s_check_intro_case5(_inst: any, _other: any): void;
declare function gml_Script_s_check_intro_case6(_inst: any, _other: any): void;
declare function gml_Script_s_check_intro_case7(_inst: any, _other: any): void;
declare function gml_Script_s_check_intro_case8(_inst: any, _other: any): void;
declare function gml_Script_s_check_intro_case2_b(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_intro_case2_c(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_intro_case2_d(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_intro_case2_e(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_intro_case2_f(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_intro_case2_g(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_info_gpa_explanation_open(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_info_gpa_explanation_intro_close(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_intro_case5_b(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_intro_case5_second_msg(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_check_qb_mode_benched(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_qb_mode_benched_status(
	_inst: any,
	_other: any,
): 0 | 2 | 1;
declare function gml_GlobalScript_s_check_record_text(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_record_text(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_GlobalScript_s_check_record(_inst: any, _other: any): void;
declare function gml_Script_s_check_record(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
): void;
declare function gml_GlobalScript_s_check_repeat_retrobowls(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_repeat_retrobowls(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_check_tackling(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_tackling(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_check_tipped(_inst: any, _other: any): void;
declare function gml_Script_s_check_tipped(_inst: any, _other: any): boolean;
declare function gml_GlobalScript_s_check_win_after_turnover(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_win_after_turnover(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_both_teams_had_possession(
	_inst: any,
	_other: any,
): boolean;
declare function gml_GlobalScript_s_choose_defensive_formation(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_choose_defensive_formation(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_choose_dilemma(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_choose_dilemma(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_extract_dilemma_from_pool(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_add_tag_matches_to_list(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): void;
declare function gml_Script_s_reject_dilemma_not_enough_RC(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_GlobalScript_s_choose_face(_inst: any, _other: any): void;
declare function gml_Script_s_choose_face(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_face_from_set(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_face_from_set_direct(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_GlobalScript_s_choose_mode_hc(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_choose_mode_HC(_inst: any, _other: any): void;
declare function gml_Script_s_choose_mode_QB(_inst: any, _other: any): void;
declare function gml_Script_s_choose_mode_CO_loading(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_choose_mode_CO(_inst: any, _other: any): void;
declare function gml_Script_s_setup_for_mode_CO(_inst: any, _other: any): void;
declare function gml_Script_s_update_details_screen(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_choose_random_face_for_me(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_choose_random_face_for_me(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_clear_clock(_inst: any, _other: any): void;
declare function gml_Script_s_clear_clock(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_clear_freeagents(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_clear_freeagents(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_clear_playoff_fixtures(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_clear_playoff_fixtures(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_clear_storelist(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_clear_storelist(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_clear_trade_offers(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_clear_trade_offers(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_coach_trait_experience(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_coach_trait_experience(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_coach_trait_motivator(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_coach_trait_motivator(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_coach_trait_talentspotter(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_coach_trait_talentspotter(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_col_hex_to_b(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_col_hex_to_b(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_col_hex_to_g(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_col_hex_to_g(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_col_hex_to_r(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_col_hex_to_r(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_college_admissions_draft(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_draft_CO(_inst: any, _other: any): void;
declare function gml_Script_s_college_free_agent_check(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_btn_respose_college_free_agent_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_respose_college_free_agent_no(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_college_dilemma_check(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_s_college_admissions_check_trigger(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_s_college_admissions_pick_player(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_college_admissions_players_lost_per_round(
	_inst: any,
	_other: any,
): 0 | 1 | 7 | 3 | 9 | 5;
declare function gml_Script_s_college_admissions_draft_done(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_college_admissions_draft_done_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_college_balance(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_college_balance_create_new_roster(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_college_choose_team(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___27_s_rm_choose_team_co_init_s_college_choose_team(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___27_s_rm_choose_team_co_init_s_college_choose_team {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___28_s_rm_choose_team_co_init_s_college_choose_team(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___28_s_rm_choose_team_co_init_s_college_choose_team {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___29_s_rm_choose_team_co_init_s_college_choose_team(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___29_s_rm_choose_team_co_init_s_college_choose_team {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___30_s_rm_choose_team_co_init_s_college_choose_team(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___30_s_rm_choose_team_co_init_s_college_choose_team {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___31_s_rm_choose_team_co_init_s_college_choose_team(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___31_s_rm_choose_team_co_init_s_college_choose_team {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_rm_choose_team_co_init(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_btn_minor(_inst: any, _other: any): void;
declare function gml_Script_s_btn_major(_inst: any, _other: any): void;
declare function gml_Script_s_choose_team_refresh_subdivision(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_choose_team_refresh_conference(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___32_s_choose_team_create_conference_buttons_s_college_choose_team(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___32_s_choose_team_create_conference_buttons_s_college_choose_team {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___33_s_choose_team_create_conference_buttons_s_college_choose_team(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___33_s_choose_team_create_conference_buttons_s_college_choose_team {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___34_s_choose_team_create_conference_buttons_s_college_choose_team(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___34_s_choose_team_create_conference_buttons_s_college_choose_team {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___35_s_choose_team_create_conference_buttons_s_college_choose_team(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___35_s_choose_team_create_conference_buttons_s_college_choose_team {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_choose_team_create_conference_buttons(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_choose_team_btn_conference(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___36_s_choose_team_create_team_buttons_s_college_choose_team(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___36_s_choose_team_create_team_buttons_s_college_choose_team {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___37_s_choose_team_create_team_buttons_s_college_choose_team(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___37_s_choose_team_create_team_buttons_s_college_choose_team {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___39_s_choose_team_create_team_buttons_s_college_choose_team(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___39_s_choose_team_create_team_buttons_s_college_choose_team {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___40_s_choose_team_create_team_buttons_s_college_choose_team(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___40_s_choose_team_create_team_buttons_s_college_choose_team {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_choose_team_create_team_buttons(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_choose_team_btn_fav_team(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_choose_team_btn_new_team(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_choose_team_btn_back(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_choose_team_btn_reject(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_choose_team_conference_mode(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_choose_team_subdivision_mode(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_refresh_main_sections_buttons(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_college_competitions_seeding(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_team_from_tag(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): any;
declare function gml_Script_s_get_winner_by_cid(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_winner_by_mid(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_co_conference_winner(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_co_division_winner(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_co_conference_best(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_co_subdivision_best(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_co_bowl_seed(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_Script_s_get_co_prestige_bowl_seed(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_Script_s_create_prestige_pool(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_prestige_pool_sort_order_ranking(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_prestige_pool_list(_inst: any, _other: any): void;
declare function gml_Script____struct___41_s_prestige_pool_add_s_college_competitions_seeding(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___41_s_prestige_pool_add_s_college_competitions_seeding {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_prestige_pool_add(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): boolean;
declare function gml_Script_s_get_prestige_pool(_inst: any, _other: any): any;
declare function gml_Script_s_get_team_in_prestige_pool(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_prestige_pool_force_one_per_conf(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_prestige_pool_fill_per_rank(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_bowl_seed_first_loop_pool(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_bowl_seed_second_loop_pool(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_bowl_seed_third_loop_pool(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_first_team_data(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script____struct___42_s_get_competition_pool_s_college_competitions_seeding(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___42_s_get_competition_pool_s_college_competitions_seeding {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_get_competition_pool(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_competition_pool_team(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_get_competition_winner(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_competition_pool_fill_from_rankings(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_competition_pool_exclude_teams(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_competition_pool_add_team(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_competition_pool_rankings_exclude(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script____struct___43_s_get_tagged_source_s_college_competitions_seeding(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___43_s_get_tagged_source_s_college_competitions_seeding {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_get_tagged_source(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_pool_position(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_competitions_debug_printout(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_college_competitions(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_competition_id_from_fix(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_competition_by_conference_division(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_competition(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_competitions_in_editor_group(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_last_schedule_week(
	_inst: any,
	_other: any,
): number;
declare function gml_Script_s_get_postseason_fixture_by_week(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_player_schedule_fixture_by_week(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script____struct___44_s_get_competition_win_access_list_s_college_competitions(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___44_s_get_competition_win_access_list_s_college_competitions {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_get_competition_win_access_list(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_s_schedule_generation(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_is_cyclic_competition_year(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): boolean;
declare function gml_Script_s_schedule_add_game(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_schedule_add_championship(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_get_schedule_fix_template(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_s_fixture_victory_screen(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_handle_fixture_notification(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): boolean;
declare function gml_Script_s_fixture_notifications_roster_cv_entry(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): void;
declare function gml_Script_s_handle_fixture_history_record(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_handle_fixture_reward(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script____struct___45_s_reset_competitions_and_subdivisions_pools_and_rankings_s_college_competitions(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___45_s_reset_competitions_and_subdivisions_pools_and_rankings_s_college_competitions {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___46_s_reset_competitions_and_subdivisions_pools_and_rankings_s_college_competitions(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___46_s_reset_competitions_and_subdivisions_pools_and_rankings_s_college_competitions {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___47_s_reset_competitions_and_subdivisions_pools_and_rankings_s_college_competitions(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___47_s_reset_competitions_and_subdivisions_pools_and_rankings_s_college_competitions {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_reset_competitions_and_subdivisions_pools_and_rankings(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_competitions_status_update(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_competitions_update_quick_standings(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_resolve_non_champ_conferences(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_s_schedule_advance_teams(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_schedule_move_better_team_to_home_slot(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script____struct___48_s_schedule_add_fixtag_s_college_competitions(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___48_s_schedule_add_fixtag_s_college_competitions {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_schedule_add_fixtag(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): void;
declare function gml_Script_s_get_fixtag_priority(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_fixtag_sort_priority(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_competition_update_standings(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_competition_reset_standings(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_conference_update_standings(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_subdivision_update_rankings(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_conference_reset_standings(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_subdivision_get_player_ranking(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): number;
declare function gml_Script_s_subdivision_get_team_ranking(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): number;
declare function gml_Script_s_get_my_conference_current_place(
	_inst: any,
	_other: any,
): number;
declare function gml_Script_s_update_human_postseason_fixtures(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_college_custom_data(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_custom_data_file_exists_safe(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_custom_data_load(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_custom_data_file_delete(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_custom_data_patch(_inst: any, _other: any): void;
declare function gml_Script_s_custom_data_update_from_editor(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_custom_data_save(_inst: any, _other: any): void;
declare function gml_Script_s_custom_data_delete(_inst: any, _other: any): void;
declare function gml_Script_s_custom_data_reset(_inst: any, _other: any): void;
declare function gml_Script____struct___49_s_custom_data_template_s_college_custom_data(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___49_s_custom_data_template_s_college_custom_data {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___50_s_custom_data_template_s_college_custom_data(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___50_s_custom_data_template_s_college_custom_data {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___51_s_custom_data_template_s_college_custom_data(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___51_s_custom_data_template_s_college_custom_data {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___52_s_custom_data_template_s_college_custom_data(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___52_s_custom_data_template_s_college_custom_data {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_custom_data_template(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_s_custom_data_restore(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_custom_data_copy_from(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_copy_uniforms_from(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_college_restore_all_uniforms(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_custom_data_exists(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_s_is_custom_data_active(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_s_set_custom_data_active(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_custom_data_subdivision(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_custom_data_conference(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_custom_data_competition(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_custom_data_filename(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script____struct___53_s_get_or_create_custom_data_conference_s_college_custom_data(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___53_s_get_or_create_custom_data_conference_s_college_custom_data {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_get_or_create_custom_data_conference(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script____struct___54_s_get_or_create_custom_data_competition_s_college_custom_data(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___54_s_get_or_create_custom_data_competition_s_college_custom_data {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_get_or_create_custom_data_competition(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_custom_data_suffix(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_custom_data_comp_name_prefix(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_custom_data_comp_name_suffix(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_bowl_split_name(
	_inst: any,
	_other: any,
	argument0: any,
): any[];
declare function gml_GlobalScript_s_college_data_versioning(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_versioned_path(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_is_newer_data_available(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_s_is_team_active_in_new_data(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_build_data_version(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_Script_s_get_build_year_offset(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_Script_s_get_data_version_string(
	_inst: any,
	_other: any,
): any;
declare function gml_Script____struct___55_s_reset_to_version_s_college_data_versioning(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___55_s_reset_to_version_s_college_data_versioning {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_reset_to_version(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_data_upgrade_teams(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_offer_data_upgrade(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_s_data_upgrade_offer_deny(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_data_upgrade_offer_accept(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_college_details(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___56_s_college_details_init_s_college_details(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___56_s_college_details_init_s_college_details {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___57_s_college_details_init_s_college_details(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___57_s_college_details_init_s_college_details {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_college_details_init(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___58_s_reset_team_selections_s_college_details(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___58_s_reset_team_selections_s_college_details {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_reset_team_selections(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_anon_2333_s_college_details_hide_s_college_details(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_college_details_hide(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_anon_2464_s_college_details_center_s_college_details(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_college_details_center(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script____struct___59_s_college_details_bottom_panel_init_s_college_details(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___59_s_college_details_bottom_panel_init_s_college_details {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___60_s_college_details_bottom_panel_init_s_college_details(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___60_s_college_details_bottom_panel_init_s_college_details {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___61_s_college_details_bottom_panel_init_s_college_details(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___61_s_college_details_bottom_panel_init_s_college_details {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_college_details_bottom_panel_init(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_college_details_bottom_panel_draw_gui(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___62_s_college_details_bottom_panel_create_buttons_s_college_details(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___62_s_college_details_bottom_panel_create_buttons_s_college_details {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___63_s_college_details_bottom_panel_create_buttons_s_college_details(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___63_s_college_details_bottom_panel_create_buttons_s_college_details {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_college_details_bottom_panel_create_buttons(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_college_details_favorite_btn_action(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_college_details_starting_btn_action(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_college_details_difficulty_btn_action(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_college_details_favorite_label_text(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_s_get_college_details_starting_label_text(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_s_get_college_details_difficulty_label_text(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_s_college_details_btn_draw(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_starting_teams_list(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_s_add_starting_team(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_is_starting_team_selectable(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_count_starting_team_selectable_conference(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_Script_s_get_random_non_rival_team(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_college_draft(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_college_draft_ranking(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_Script_s_college_draft_team_ranking(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_s_college_draft_team_pick(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_calculate_college_draft(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_destroy_college_draft(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___64_s_display_college_draft_debug_s_college_draft(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___64_s_display_college_draft_debug_s_college_draft {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_display_college_draft_debug(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_message_college_draft_pick(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_college_draft_check_achievements(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_message_college_draft_notpick(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_message_college_draft_nottrydraft_y3(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_message_college_draft_early_y3(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_message_college_draft_pick_continue(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_message_college_earyly_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_message_college_earyly_no(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_message_college_earyly_info(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_college_draft_earyly_info_return(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_college_draft_refresh_current_attitude(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_doing_college_draft(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_s_check_college_draft_start(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_s_start_college_draft(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_draft_set_epilogue(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_end_college_draft(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_s_end_college_draft_late_msg_clear(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___65_s_end_college_draft_late_s_college_draft(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___65_s_end_college_draft_late_s_college_draft {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_end_college_draft_late(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_college_draft_new_season_loading(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_college_draft_new_season(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_college_draft_next(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_college_draft_refresh(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_college_draft_skip(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_college_draft_do_skip(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_college_draft_player_pick(
	_inst: any,
	_other: any,
): any;
declare function gml_Script____struct___66_s_display_college_draft_roster_s_college_draft(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___66_s_display_college_draft_roster_s_college_draft {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___67_s_display_college_draft_roster_s_college_draft(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___67_s_display_college_draft_roster_s_college_draft {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___68_s_display_college_draft_roster_s_college_draft(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___68_s_display_college_draft_roster_s_college_draft {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___69_s_display_college_draft_roster_s_college_draft(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___69_s_display_college_draft_roster_s_college_draft {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___70_s_display_college_draft_roster_s_college_draft(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___70_s_display_college_draft_roster_s_college_draft {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_display_college_draft_roster(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___71_s_card_layout_pos_s_college_draft(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___71_s_card_layout_pos_s_college_draft {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_card_layout_pos(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_load_pro_teams(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_college_edit_competition(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___72_s_rm_edit_competition_init_s_college_edit_competition(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___72_s_rm_edit_competition_init_s_college_edit_competition {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___73_s_rm_edit_competition_init_s_college_edit_competition(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___73_s_rm_edit_competition_init_s_college_edit_competition {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___74_s_rm_edit_competition_init_s_college_edit_competition(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___74_s_rm_edit_competition_init_s_college_edit_competition {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___75_s_rm_edit_competition_init_s_college_edit_competition(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___75_s_rm_edit_competition_init_s_college_edit_competition {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_rm_edit_competition_init(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_btn_edit_comp_confirm(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_btn_edit_comp_cancel(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___76_s_editor_create_competition_fields_s_college_edit_competition(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___76_s_editor_create_competition_fields_s_college_edit_competition {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_editor_create_competition_fields(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_Script____struct___77_s_editor_create_text_field_s_college_edit_competition(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___77_s_editor_create_text_field_s_college_edit_competition {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_editor_create_text_field(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
	argument6: any,
	argument7: any,
	argument8: any,
	argument9: any,
): void;
declare function gml_Script____struct___78_s_editor_create_partial_text_field_s_college_edit_competition(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___78_s_editor_create_partial_text_field_s_college_edit_competition {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___79_s_editor_create_partial_text_field_s_college_edit_competition(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___79_s_editor_create_partial_text_field_s_college_edit_competition {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___80_s_editor_create_partial_text_field_s_college_edit_competition(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___80_s_editor_create_partial_text_field_s_college_edit_competition {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___81_s_editor_create_partial_text_field_s_college_edit_competition(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___81_s_editor_create_partial_text_field_s_college_edit_competition {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_editor_create_partial_text_field(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
	argument6: any,
	argument7: any,
	argument8: any,
	argument9: any,
): void;
declare function gml_Script____struct___82_s_editor_create_location_field_s_college_edit_competition(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___82_s_editor_create_location_field_s_college_edit_competition {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___83_s_editor_create_location_field_s_college_edit_competition(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___83_s_editor_create_location_field_s_college_edit_competition {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___84_s_editor_create_location_field_s_college_edit_competition(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___84_s_editor_create_location_field_s_college_edit_competition {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_editor_create_location_field(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
	argument6: any,
	argument7: any,
	argument8: any,
	argument9: any,
): void;
declare function gml_Script____struct___85_s_editor_create_field_label_s_college_edit_competition(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___85_s_editor_create_field_label_s_college_edit_competition {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_editor_create_field_label(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
): void;
declare function gml_Script_s_ui_field_label_draw_gui(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_editor_field_validate(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_editor_location_is_neutral(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): boolean;
declare function gml_Script_s_editor_location_toggle_neutral_state(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script____struct___86_s_get_editor_mode_data_s_college_edit_competition(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___86_s_get_editor_mode_data_s_college_edit_competition {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_get_editor_mode_data(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___87_s_rm_editor_init_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___87_s_rm_editor_init_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___88_s_rm_editor_init_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___88_s_rm_editor_init_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___89_s_rm_editor_init_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___89_s_rm_editor_init_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___90_s_rm_editor_init_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___90_s_rm_editor_init_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___91_s_rm_editor_init_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___91_s_rm_editor_init_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___92_s_rm_editor_init_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___92_s_rm_editor_init_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___93_s_rm_editor_init_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___93_s_rm_editor_init_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___94_s_rm_editor_init_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___94_s_rm_editor_init_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___95_s_rm_editor_init_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___95_s_rm_editor_init_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___96_s_rm_editor_init_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___96_s_rm_editor_init_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_rm_editor_init(_inst: any, _other: any): void;
declare function gml_Script_s_goto_editor(_inst: any, _other: any): void;
declare function gml_Script_s_btn_editor_done(_inst: any, _other: any): void;
declare function gml_Script_s_btn_editor_major(_inst: any, _other: any): void;
declare function gml_Script_s_btn_editor_minor(_inst: any, _other: any): void;
declare function gml_Script_s_btn_editor_bowls(_inst: any, _other: any): void;
declare function gml_Script_s_btn_editor_back(_inst: any, _other: any): void;
declare function gml_Script____struct___97_s_btn_editor_edit_subdivision_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___97_s_btn_editor_edit_subdivision_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_btn_editor_edit_subdivision(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___98_s_btn_editor_edit_conference_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___98_s_btn_editor_edit_conference_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_btn_editor_edit_conference(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_btn_editor_conference(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_btn_editor_select_team(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_btn_editor_select_bowl_group(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___99_s_btn_editor_select_bowl_competition_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___99_s_btn_editor_select_bowl_competition_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_btn_editor_select_bowl_competition(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___100_s_save_editor_status_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___100_s_save_editor_status_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_save_editor_status(_inst: any, _other: any): any;
declare function gml_Script____struct___101_s_get_editor_status_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___101_s_get_editor_status_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_get_editor_status(_inst: any, _other: any): any;
declare function gml_Script_s_reset_editor_status(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_editor_subdivision_mode(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_editor_conference_mode(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_editor_bowls_group_mode(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_editor_bowls_competition_mode(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_editor_set_buttons(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_editor_refresh_bowls_groups(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script____struct___102_s_editor_create_bowls_buttons_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___102_s_editor_create_bowls_buttons_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___103_s_editor_create_bowls_buttons_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___103_s_editor_create_bowls_buttons_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_editor_create_bowls_buttons(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script____struct___104_s_create_slot_label_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___104_s_create_slot_label_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_create_slot_label(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_ui_label_draw_gui(_inst: any, _other: any): void;
declare function gml_Script_s_get_editor_bowl_group_name_by_tag(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script____struct___105_s_editor_copy_buttons_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___105_s_editor_copy_buttons_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___106_s_editor_copy_buttons_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___106_s_editor_copy_buttons_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___107_s_editor_copy_buttons_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___107_s_editor_copy_buttons_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___108_s_editor_copy_buttons_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___108_s_editor_copy_buttons_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___109_s_editor_copy_buttons_s_college_editor(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___109_s_editor_copy_buttons_s_college_editor {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_editor_copy_buttons(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_init_btn_editor_copy(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_btn_editor_copy(_inst: any, _other: any): void;
declare function gml_Script_s_btn_editor_confirm_copy(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_btn_editor_restore_all(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_btn_editor_confirm_restore_all(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_college_gui_helpers(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_buttons_college_custom(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_draw_custom_increase_wallet(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): void;
declare function gml_Script_draw_custom_recruitment_credits_display(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_rm_player_profile_show_noncollege_elements(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_rm_player_profile_show_more(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script____struct___110_rm_player_profile_college_create_p1_s_college_gui_helpers(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___110_rm_player_profile_college_create_p1_s_college_gui_helpers {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___111_rm_player_profile_college_create_p1_s_college_gui_helpers(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___111_rm_player_profile_college_create_p1_s_college_gui_helpers {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___112_rm_player_profile_college_create_p1_s_college_gui_helpers(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___112_rm_player_profile_college_create_p1_s_college_gui_helpers {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___113_rm_player_profile_college_create_p1_s_college_gui_helpers(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___113_rm_player_profile_college_create_p1_s_college_gui_helpers {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___114_rm_player_profile_college_create_p1_s_college_gui_helpers(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___114_rm_player_profile_college_create_p1_s_college_gui_helpers {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___115_rm_player_profile_college_create_p1_s_college_gui_helpers(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___115_rm_player_profile_college_create_p1_s_college_gui_helpers {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___116_rm_player_profile_college_create_p1_s_college_gui_helpers(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___116_rm_player_profile_college_create_p1_s_college_gui_helpers {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___118_rm_player_profile_college_create_p1_s_college_gui_helpers(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___118_rm_player_profile_college_create_p1_s_college_gui_helpers {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___119_rm_player_profile_college_create_p1_s_college_gui_helpers(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___119_rm_player_profile_college_create_p1_s_college_gui_helpers {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_rm_player_profile_college_create_p1(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___120_rm_player_profile_college_create_p2_s_college_gui_helpers(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___120_rm_player_profile_college_create_p2_s_college_gui_helpers {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___121_rm_player_profile_college_create_p2_s_college_gui_helpers(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___121_rm_player_profile_college_create_p2_s_college_gui_helpers {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___122_rm_player_profile_college_create_p2_s_college_gui_helpers(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___122_rm_player_profile_college_create_p2_s_college_gui_helpers {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___123_rm_player_profile_college_create_p2_s_college_gui_helpers(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___123_rm_player_profile_college_create_p2_s_college_gui_helpers {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___124_rm_player_profile_college_create_p2_s_college_gui_helpers(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___124_rm_player_profile_college_create_p2_s_college_gui_helpers {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___125_rm_player_profile_college_create_p2_s_college_gui_helpers(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___125_rm_player_profile_college_create_p2_s_college_gui_helpers {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___126_rm_player_profile_college_create_p2_s_college_gui_helpers(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___126_rm_player_profile_college_create_p2_s_college_gui_helpers {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___127_rm_player_profile_college_create_p2_s_college_gui_helpers(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___127_rm_player_profile_college_create_p2_s_college_gui_helpers {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___128_rm_player_profile_college_create_p2_s_college_gui_helpers(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___128_rm_player_profile_college_create_p2_s_college_gui_helpers {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_rm_player_profile_college_create_p2(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_rm_player_profile_college_create(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_rm_player_profile_college_showP1(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_rm_player_profile_college_showP2(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_rm_player_profile_college_step(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Profile_College_Cut(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_Profile_College_Cut_During_Admission_Draft(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_cut_player_for_RC_yes(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_college_player_cut_RC(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_Script_btn_rm_stats_player_showAwards(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_rm_stats_player_showEpilogue(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___129_stats_player_button_entry_s_college_gui_helpers(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___129_stats_player_button_entry_s_college_gui_helpers {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_stats_player_button_entry(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
): void;
declare function gml_Script____struct___130_rm_stats_player_configure_college_s_college_gui_helpers(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___130_rm_stats_player_configure_college_s_college_gui_helpers {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___131_rm_stats_player_configure_college_s_college_gui_helpers(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___131_rm_stats_player_configure_college_s_college_gui_helpers {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_rm_stats_player_configure_college(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_change_panel_division_mode(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_panel_skip_independents_cnf_view(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_panel_scroll_init(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_panel_scroll_step(_inst: any, _other: any): void;
declare function gml_Script_s_panel_scroll_set_height(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_panel_scroll_global_flick(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_panel_scroll_draw_gui(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_panel_scroll_is_inside(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): boolean;
declare function gml_GlobalScript_s_college_gui_panels(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___132_s_co_subdivision_create_s_college_gui_panels(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___132_s_co_subdivision_create_s_college_gui_panels {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_co_subdivision_create(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_co_subdivision_init(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_co_subdivision_hidden_draw_gui(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_co_division_create(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
): void;
declare function gml_Script_s_co_division_init(_inst: any, _other: any): void;
declare function gml_Script_s_co_division_step(_inst: any, _other: any): void;
declare function gml_Script_s_fit_string(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): any;
declare function gml_Script_s_co_division_draw_gui(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_college_league(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___133_s_rm_league_co_init_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___133_s_rm_league_co_init_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___134_s_rm_league_co_init_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___134_s_rm_league_co_init_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___135_s_rm_league_co_init_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___135_s_rm_league_co_init_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___136_s_rm_league_co_init_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___136_s_rm_league_co_init_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___137_s_rm_league_co_init_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___137_s_rm_league_co_init_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___138_s_rm_league_co_init_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___138_s_rm_league_co_init_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___139_s_rm_league_co_init_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___139_s_rm_league_co_init_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___140_s_rm_league_co_init_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___140_s_rm_league_co_init_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___141_s_rm_league_co_init_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___141_s_rm_league_co_init_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___142_s_rm_league_co_init_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___142_s_rm_league_co_init_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___143_s_rm_league_co_init_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___143_s_rm_league_co_init_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___144_s_rm_league_co_init_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___144_s_rm_league_co_init_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___145_s_rm_league_co_init_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___145_s_rm_league_co_init_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___146_s_rm_league_co_init_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___146_s_rm_league_co_init_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___147_s_rm_league_co_init_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___147_s_rm_league_co_init_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___148_s_rm_league_co_init_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___148_s_rm_league_co_init_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___149_s_rm_league_co_init_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___149_s_rm_league_co_init_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___150_s_rm_league_co_init_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___150_s_rm_league_co_init_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_rm_league_co_init(_inst: any, _other: any): void;
declare function gml_Script_s_btn_league_view(_inst: any, _other: any): void;
declare function gml_Script____struct___151_s_btn_league_mode_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___151_s_btn_league_mode_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_btn_league_mode(_inst: any, _other: any): void;
declare function gml_Script____struct___152_s_btn_league_subdivision_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___152_s_btn_league_subdivision_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_btn_league_subdivision(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_btn_division_home_view(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_btn_division_postmatch_view(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___153_s_btn_league_next_conference_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___153_s_btn_league_next_conference_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_btn_league_next_conference(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_anon_5862_s_set_league_mode_btn_colour_s_college_league(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_set_league_mode_btn_colour(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_anon_6028_s_set_league_tier_btn_colour_s_college_league(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_set_league_tier_btn_colour(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_set_var_if_missing(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_league_get_btn_back_image(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_s_league_refresh_subdivision(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___154_s_league_create_conference_buttons_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___154_s_league_create_conference_buttons_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_league_create_conference_buttons(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script____struct___155_s_league_btn_conference_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___155_s_league_btn_conference_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_league_btn_conference(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_league_create_conference_panels(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script____struct___156_s_league_create_conference_division_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___156_s_league_create_conference_division_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___157_s_league_create_conference_division_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___157_s_league_create_conference_division_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_league_create_conference_division(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_Script____struct___158_s_league_create_ranking_panels_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___158_s_league_create_ranking_panels_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___159_s_league_create_ranking_panels_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___159_s_league_create_ranking_panels_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_league_create_ranking_panels(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_is_prev_rank_visible(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script____struct___160_s_league_create_schedule_panels_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___160_s_league_create_schedule_panels_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___161_s_league_create_schedule_panels_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___161_s_league_create_schedule_panels_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___162_s_league_create_schedule_panels_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___162_s_league_create_schedule_panels_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_league_create_schedule_panels(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_co_schedule_init(_inst: any, _other: any): void;
declare function gml_Script_s_league_btn_week(_inst: any, _other: any): void;
declare function gml_Script_s_league_btn_page(_inst: any, _other: any): void;
declare function gml_Script_s_co_schedule_sort_order(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_league_get_own_bracket_page(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_co_schedule_refresh(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_co_schedule_step(_inst: any, _other: any): void;
declare function gml_Script____struct___163_s_co_schedule_filter_format_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___163_s_co_schedule_filter_format_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_co_schedule_filter_format(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): void;
declare function gml_Script____struct___164_s_set_matchlist_bracket_coords_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___164_s_set_matchlist_bracket_coords_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___165_s_set_matchlist_bracket_coords_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___165_s_set_matchlist_bracket_coords_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___166_s_set_matchlist_bracket_coords_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___166_s_set_matchlist_bracket_coords_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___167_s_set_matchlist_bracket_coords_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___167_s_set_matchlist_bracket_coords_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___168_s_set_matchlist_bracket_coords_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___168_s_set_matchlist_bracket_coords_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___169_s_set_matchlist_bracket_coords_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___169_s_set_matchlist_bracket_coords_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___170_s_set_matchlist_bracket_coords_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___170_s_set_matchlist_bracket_coords_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___171_s_set_matchlist_bracket_coords_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___171_s_set_matchlist_bracket_coords_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___172_s_set_matchlist_bracket_coords_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___172_s_set_matchlist_bracket_coords_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___173_s_set_matchlist_bracket_coords_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___173_s_set_matchlist_bracket_coords_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___174_s_set_matchlist_bracket_coords_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___174_s_set_matchlist_bracket_coords_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___175_s_set_matchlist_bracket_coords_s_college_league(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___175_s_set_matchlist_bracket_coords_s_college_league {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_set_matchlist_bracket_coords(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_get_bracket_map_entry(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_co_schedule_draw_gui(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_draw_bracket_name_box(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_GlobalScript_s_college_overtime(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_college_overtime_start(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_college_overtime_handle_play_end(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_college_overtime_setup_new_possesion(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_college_overtime_offer_kick(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_s_college_overtime_next_round(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_college_overtime_possession_count(
	_inst: any,
	_other: any,
): number;
declare function gml_Script_s_college_overtime_one_team_won(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_college_overtime_other_teams_turn(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_college_overtime_trigger_point_conversion(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_college_overtime_flip_possession(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_college_overtime_score_hack(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_co_poss_str(
	_inst: any,
	_other: any,
	argument0: any,
): "HUMAN" | "AI";
declare function gml_Script_btn_click_toggle_college_overtime_debug(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_refresh_btn_overtime_text(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_college_postseason(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___176_s_rm_postseason_init_s_college_postseason(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___176_s_rm_postseason_init_s_college_postseason {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___177_s_rm_postseason_init_s_college_postseason(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___177_s_rm_postseason_init_s_college_postseason {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___178_s_rm_postseason_init_s_college_postseason(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___178_s_rm_postseason_init_s_college_postseason {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___179_s_rm_postseason_init_s_college_postseason(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___179_s_rm_postseason_init_s_college_postseason {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___180_s_rm_postseason_init_s_college_postseason(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___180_s_rm_postseason_init_s_college_postseason {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___181_s_rm_postseason_init_s_college_postseason(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___181_s_rm_postseason_init_s_college_postseason {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___182_s_rm_postseason_init_s_college_postseason(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___182_s_rm_postseason_init_s_college_postseason {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_rm_postseason_init(_inst: any, _other: any): void;
declare function gml_Script_s_btn_postseason_skip_loading(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_btn_postseason_skip(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_btn_postseason_play(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_postseason_goto_home(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_btn_result_postseason_continue(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_btn_postmatch_co_continue(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_btn_postmatch_co_league(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_postseason_show_news(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_postseason_show_finals(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_postseason_show_next_result(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_postseason_show_finals_result(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_btn_postseason_news_skip(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_btn_postseason_news_continue(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_postseason_results(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script____struct___183_s_create_postseason_result_s_college_postseason(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___183_s_create_postseason_result_s_college_postseason {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___184_s_create_postseason_result_s_college_postseason(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___184_s_create_postseason_result_s_college_postseason {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_create_postseason_result(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_postseason_results_data_sort(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_postseason_result_by_cid(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_competition_win_access(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_fix_access_string(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_fix_result_string(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_skip_postseason_until_human_match(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_s_skip_postseason_chunk(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_college_ranking(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_co_set_starting_rank(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_co_set_ranking_points(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_co_reset_teams_rank(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_co_update_fix_rank(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_prestige(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_update_ranking_positions(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_get_ranking_pos_data(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_ranking_pos_data_prev(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_ranking_pos_data_season(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script____struct___185_s_parse_ranking_pos_s_college_ranking(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___185_s_parse_ranking_pos_s_college_ranking {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_parse_ranking_pos(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_encode_ranking_pos(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_save_ranking_pos_end_of_season(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_ranking_pos_last_season(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_is_preseason_for_ranking(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_s_update_rank_after_admission_draft(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_ranking_pct_last_season(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_college_reputation(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_team_offense_with_reputation_boost(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_team_defense_with_reputation_boost(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_strength_with_reputation_boost(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_Script_s_get_reputation_points(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_update_fixture_teams_reputation(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_has_reputation_point(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_update_all_teams_reputation(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_update_team_reputation_flag(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_update_team_reputation(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_get_team_reputation_data(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_set_team_reputation_data(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_convert_reputation_string_to_data(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_convert_reputation_data_to_string(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script____struct___186_s_create_reputation_data_s_college_reputation(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___186_s_create_reputation_data_s_college_reputation {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_create_reputation_data(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
): any;
declare function gml_Script_s_update_reputation_data(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): boolean;
declare function gml_Script_s_is_reputation_string_updated(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_is_reputation_data_updated(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_get_reputation_string_points(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_reputation_data_points(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_reputation_data_test(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_college_room_tools(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___187(_inst: any, _other: any): void;
declare namespace gml_Script____struct___187 {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_goto_room(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_anon_653_s_init_rm_s_college_room_tools(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_init_rm(_inst: any, _other: any): void;
declare function gml_Script____struct___188_s_destroy_rm_s_college_room_tools(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___188_s_destroy_rm_s_college_room_tools {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_destroy_rm(_inst: any, _other: any): void;
declare function gml_Script____struct___189_s_create_title_s_college_room_tools(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___189_s_create_title_s_college_room_tools {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_create_title(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_Script_s_create_button(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): any;
declare function gml_Script_anon_1336_s_destroy_dynamic_buttons_s_college_room_tools(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_destroy_dynamic_buttons(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script____struct___190_s_calc_grid_coords_s_college_room_tools(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___190_s_calc_grid_coords_s_college_room_tools {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_calc_grid_coords(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
	argument6: any,
	argument7: any,
): any;
declare function gml_Script____struct___191_s_show_rm_winners_s_college_room_tools(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___191_s_show_rm_winners_s_college_room_tools {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_show_rm_winners(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
): void;
declare function gml_GlobalScript_s_college_sorting(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_co_teams_data_sort_rank(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_co_teams_data_sort_rank_season(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_co_teams_data_sort_rank_common(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_Script_s_calc_rank_avgpts(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_co_teams_data_sort_rank_pos(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_co_teams_data_sort_pct(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): 0 | 1 | -1;
declare function gml_Script_s_co_teams_data_sort_pct_quick(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): 0 | 1 | -1;
declare function gml_Script_s_co_teams_data_sort_conf_wins_losses(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): 0 | 1 | -1;
declare function gml_Script_s_co_teams_data_sort_wins_rank(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): 0 | 1 | -1;
declare function gml_Script____struct___192_s_create_team_data_array_s_college_sorting(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___192_s_create_team_data_array_s_college_sorting {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_create_team_data_array(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_update_team_data_rank_pos(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_team_data_array_add_formatted_data(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_co_teams_tiebreak(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_Script_s_co_teams_tiebreak_record_next_best_placed_division(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): 0 | 1 | -1;
declare function gml_GlobalScript_s_college_tools(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_college_set_up_globals(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_college_age_index(
	_inst: any,
	_other: any,
	argument0: any,
): 0 | 2 | 1 | 3;
declare function gml_Script_s_college_age_label(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_college_age_simple(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_college_age_simple_other(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_college_age_simple_short(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_college_shorter_season(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_college_academics_type(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_college_correct_new_player(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_random_hobby(_inst: any, _other: any): any;
declare function gml_Script_s_get_hobby_name(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_hobby_from_uid(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_is_player_hobby_fraternity(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_get_random_study_subject(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_study_subject_from_uid(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_study_subject_name_from_uid(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_minor_name(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_major_name(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_study_info(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_random_trait(_inst: any, _other: any): any;
declare function gml_Script_s_get_trait_name(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_trait_from_uid(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_random_hometown(_inst: any, _other: any): any;
declare function gml_Script_s_get_hometown_name(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_only_hometown_name(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_only_state_name(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_hometown_from_uid(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_pick_rand_epilogue_uid(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_Script_s_get_epilogue_name(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_epilogue_tests(_inst: any, _other: any): void;
declare function gml_Script_s_pick_epilogue_story(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_epilogue_story_to_str(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_try_get_teamname_from_uid_or_name(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_add_cv_entry_from_key(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_add_cv_entry_direct(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_get_random_cv_entry(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_extract_cv_entry_from_pool(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_set_cv_list_from_player(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_add_cv_list_entry(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_split_into_chunks(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_btn_response_player_meeting_academic_coaching(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_meeting_cost_academic_coaching(
	_inst: any,
	_other: any,
	argument0: any,
): 0 | 2 | 1 | 4 | 3;
declare function gml_Script_s_is_co_mode(_inst: any, _other: any): number;
declare function gml_Script_s_is_co_postseason(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_is_co_actual_postseason(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_is_co_endseason_lastweek(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_is_co_offseason(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_get_postseason_chunk(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_is_earlier_than(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_get_skip_to_week(_inst: any, _other: any): any;
declare function gml_Script_s_is_co_team(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_get_conference_list(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_team_list_by_tier(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_team_list(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_count_joboffers_conference(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_Script_s_co_get_year(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_this_year(_inst: any, _other: any): any;
declare function gml_Script_s_get_next_year(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_my_conference_uid(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_s_get_my_conference_data(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_s_get_conference_data(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_my_division(_inst: any, _other: any): any;
declare function gml_Script_s_get_subdivision(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_teams_subdivision_diff(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_team_pct_cnf(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_is_independent_team(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_is_independent_conference_id(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_is_independent_conference(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_co_set_strength_boost(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_Script_anon_32947_strength_boost_s_college_tools(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_strength_boost(_inst: any, _other: any): void;
declare namespace gml_Script_strength_boost {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_is_co_bowl_week(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_is_co_bowl_fix(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_is_co_bowl_comp(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script____struct___193_s_get_object_data_s_college_tools(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___193_s_get_object_data_s_college_tools {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_get_object_data(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_map(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_Script_s_get_map_real(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_Script_s_map_swap(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_get_save_slot(_inst: any, _other: any): any;
declare function gml_Script_s_get_week_name(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_my_conference_division_string(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_Script_s_get_fix_competition_string(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_competition_string(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_fix_location_string(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_my_subdivision_string(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_subdiv_name(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_joboffers_string(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_pct_string(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_comp_level_str(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_comp_level_str_plain(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_difficulty_str(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_is_ps_chunk_filled(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_is_week_played(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_is_human_in_week(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_is_human_fix(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_get_next_college_human_fixture(
	_inst: any,
	_other: any,
): number;
declare function gml_Script_s_update_week_done(_inst: any, _other: any): void;
declare function gml_Script_s_is_week_done(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_is_fix_played(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_is_fix_filled(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_is_fix_on_neutral_ground(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_season_competitions_done(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_s_get_fix_away_team_id(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_fix_home_team_id(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_fix_by_competition_id(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_fix_by_match_id(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_fix_winner_id(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_fix_by_week_and_teams(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): any;
declare function gml_Script_s_is_southland(_inst: any, _other: any): boolean;
declare function gml_Script_s_sl_week_str(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_sl_get_week_date(
	_inst: any,
	_other: any,
	argument0: any,
):
	| ""
	| "08/31/24"
	| "09/07/24"
	| "09/14/24"
	| "09/21/24"
	| "09/28/24"
	| "10/05/24"
	| "10/12/24"
	| "10/19/24"
	| "10/26/24"
	| "11/02/24"
	| "11/09/24"
	| "11/16/24"
	| "11/21/24"
	| "11/23/24";
declare function gml_GlobalScript_s_color_picker(_inst: any, _other: any): void;
declare function gml_Script_s_color_picker(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_color_to_hex(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_color_to_hex(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_complete_achievement(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_confirm_freeagent_hire_reset(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_confirm_freeagent_hire_reset(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_confirm_staff_hire_reset(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_confirm_staff_hire_reset(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_confirm_upgrade_rehab(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_confirm_upgrade_rehab(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_confirm_upgrade_stadium(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_confirm_upgrade_stadium(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_confirm_upgrade_training(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_confirm_upgrade_training(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_convert_scrimmage_to_goal_distance(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_convert_scrimmage_to_goal_distance(
	_inst: any,
	_other: any,
): any;
declare function gml_GlobalScript_s_convert_string_to_sprite(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_convert_string_to_sprite(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_convert_uniform_colour(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_convert_uniform_colour(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_GlobalScript_s_convert_uniform_colours_all(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_convert_uniform_colours_all(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_copy_teamnames_from_uniform_file(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_copy_teamnames_from_uniform_file(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_copy_uniforms_slot_a(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_copy_uniforms_slot_a(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_copy_uniforms_slot_b(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_copy_uniforms_slot_b(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_copy_uniforms_slot_c(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_copy_uniforms_slot_c(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_copy_uniforms_slot_d(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_copy_uniforms_slot_d(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_copy_uniforms_slot_e(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_copy_uniforms_slot_e(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_count_achievement(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_count_defenders(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_count_defenders(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_GlobalScript_s_count_full_seasons(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_count_full_seasons(
	_inst: any,
	_other: any,
): number;
declare function gml_Script_s_count_games_coached(
	_inst: any,
	_other: any,
): number;
declare function gml_Script_s_count_games_simmed(
	_inst: any,
	_other: any,
): number;
declare function gml_Script_s_count_fixtures_played(
	_inst: any,
	_other: any,
): number;
declare function gml_GlobalScript_s_count_hires_by_position(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_count_hires_by_position(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_GlobalScript_s_count_hof_entries(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_count_hof_entries(
	_inst: any,
	_other: any,
): number;
declare function gml_GlobalScript_s_count_injuries_weeks(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_count_injuries_weeks(
	_inst: any,
	_other: any,
): number;
declare function gml_GlobalScript_s_count_injuries(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_count_injuries(_inst: any, _other: any): number;
declare function gml_GlobalScript_s_count_joboffers(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_count_joboffers(_inst: any, _other: any): number;
declare function gml_GlobalScript_s_count_players_by_position_store(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_count_players_by_position_store(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_GlobalScript_s_count_players_by_position(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_count_players_by_position(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_GlobalScript_s_count_players_onfield_by_position(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_count_players_onfield_by_position(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): number;
declare function gml_GlobalScript_s_count_remaining_fixtures(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_count_remaining_fixtures(
	_inst: any,
	_other: any,
): number;
declare function gml_GlobalScript_s_count_simmed_games(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_count_simmed_games(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_GlobalScript_s_count_trait_fanfavorite(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_count_trait_fanfavorite(
	_inst: any,
	_other: any,
): number;
declare function gml_GlobalScript_s_count_trait_scout(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_count_trait_scout(
	_inst: any,
	_other: any,
): number;
declare function gml_GlobalScript_s_cover_object(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_cover_object(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_GlobalScript_s_cpu_is_kicking(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_cpu_is_kicking_off(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_s_is_kickoff(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_GlobalScript_s_crazygames(_inst: any, _other: any): void;
declare function gml_Script__crazygames_init(_inst: any, _other: any): void;
declare function gml_Script__crazygames_gameplay_start(
	_inst: any,
	_other: any,
): void;
declare function gml_Script__crazygames_gameplay_stop(
	_inst: any,
	_other: any,
): void;
declare function gml_Script__crazygames_pause(_inst: any, _other: any): void;
declare function gml_Script__crazygames_resume(_inst: any, _other: any): void;
declare function gml_Script__crazygames_rewarded_break(
	_inst: any,
	_other: any,
): void;
declare function gml_Script__crazygames_midgame_break(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_gmcallback_crazy_callback(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_create_boundary(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): void;
declare function gml_Script_s_create_boundary(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): void;
declare function gml_GlobalScript_s_create_camera(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_camera(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_create_credit(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
	argument6: any,
): void;
declare function gml_Script_s_create_credit(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
	argument6: any,
	argument7: any,
): void;
declare function gml_GlobalScript_s_create_dilemma(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_dilemma(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_create_draftlist(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_draftlist(_inst: any, _other: any): void;
declare function gml_Script_s_co_get_player_admission_max_skill(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_GlobalScript_s_create_dummy(_inst: any, _other: any): void;
declare function gml_Script_s_create_dummy(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
): void;
declare function gml_GlobalScript_s_create_fixdata(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_fixdata(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): void;
declare function gml_GlobalScript_s_create_freeagent(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_freeagent(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_create_freeagentlist(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_freeagentlist(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_create_hirelist(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_create_hirelist(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_GlobalScript_s_create_map_options(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_map_options(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_create_match_message(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_match_message(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_create_head2head_message(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_create_message(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_message(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
	argument6: any,
	argument7: any,
	argument8: any,
	argument9: any,
): any;
declare function gml_Script_s_message_recenter(_inst: any, _other: any): void;
declare function gml_Script_s_message_toggle(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_create_message3(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
	argument6: any,
	argument7: any,
	argument8: any,
	argument9: any,
): void;
declare function gml_Script_s_create_message4(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
	argument6: any,
	argument7: any,
	argument8: any,
	argument9: any,
	argument10: any,
	argument11: any,
): void;
declare function gml_Script_s_do_message(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_msg(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_loading_button_hijack(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_loading_trigger(_inst: any, _other: any): void;
declare function gml_Script____struct___194_s_loading_start_s_create_message(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___194_s_loading_start_s_create_message {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_loading_start(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_loading_callback(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_create_my_fixture_list(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_my_fixture_list(
	_inst: any,
	_other: any,
): any;
declare function gml_GlobalScript_s_create_new_roster_newteam(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_new_roster_newteam(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_new_roster_cut_old_roster(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_create_new_roster(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_new_roster(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_create_new_save(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_new_save(_inst: any, _other: any): void;
declare function gml_Script_s_regen_clean_save_mode_dependent_data(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_load_co_mode_files(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_create_new_stafflist(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_new_stafflist(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_create_news_message(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_news_dyn_message(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_create_player_storelist(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_player_storelist(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_GlobalScript_s_create_player(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_player_get_RC_cost(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_Script_s_create_player(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): any;
declare function gml_GlobalScript_s_create_playoffs(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_playoffs(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_create_playoffs2(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_playoffs2(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_create_staff(_inst: any, _other: any): void;
declare function gml_Script_s_create_staff(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_create_headcoach_pmap(
	_inst: any,
	_other: any,
): any;
declare function gml_GlobalScript_s_create_storelist(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_create_storelist(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_create_tradelist(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_create_tradelist(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_crop_text(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_crop_text(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): string;
declare function gml_GlobalScript_s_dec_to_hex(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_dec_to_hex(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_decline_facilities(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_decline_facilities(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_destroy_master(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_destroy_master(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_destroy_match_objects(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_destroy_match_objects(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_dilemma_choice_1(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_dilemma_choice_1(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_dilemma_choice_2(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_dilemma_choice_2(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_dilemma_choice(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_dilemma_choice(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_cut_player_end(_inst: any, _other: any): void;
declare function gml_Script_s_cut_player_end_gpa(_inst: any, _other: any): void;
declare function gml_Script_s_cut_player_end_toxic(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_cut_player_end_party(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_cut_player_end_toxic_max(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_cut_player_end_party_max(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_dilemma_morecc_store(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_dilemma_morecc_back(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_dilemma_end(_inst: any, _other: any): void;
declare function gml_Script_s_dilemma_college_check_chained(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_s_dilemma_college_check_pending_news(
	_inst: any,
	_other: any,
): boolean;
declare function gml_GlobalScript_s_do_audible(_inst: any, _other: any): void;
declare function gml_Script_s_do_audible(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_do_banner_draft(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_do_banner_draft(_inst: any, _other: any): void;
declare function gml_Script_s_do_banner_season_review(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_do_bye_week(_inst: any, _other: any): void;
declare function gml_Script_s_do_bye_week(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_do_info_coachtrait(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_do_info_coachtrait(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_do_info_draftpicks(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_do_info_draftpicks(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_do_info_position(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_do_info_position(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_do_info_skills(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_do_info_skills(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_do_info(_inst: any, _other: any): void;
declare function gml_Script_s_do_info(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_info_draft_col1(_inst: any, _other: any): void;
declare function gml_Script_s_info_draft_col2(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_do_nag_message(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_do_nag_message(_inst: any, _other: any): void;
declare function gml_Script_s_do_ad_retrogoal(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_do_next_week(_inst: any, _other: any): void;
declare function gml_Script_s_do_next_week(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_do_player_awards(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_do_player_awards(_inst: any, _other: any): void;
declare function gml_Script_s_do_player_awards_college(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_Award_OutstandingPOTY(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_Award_ExtraordinaryAcademicPOTY(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_Award_OffensivePOTY(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_Award_DefensivePOTY(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_Award_PositionPOTY(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_Award_AnyPositionPOTY(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_Award_CommunityServicePOTY(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_Award_WalkOnPOTY(_inst: any, _other: any): void;
declare function gml_Script_s_Award_FreshmanPOTY(_inst: any, _other: any): void;
declare function gml_Script_s_Award_AcademicPrize(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_do_playoff_schedule(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_do_playoff_schedule(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_get_retrobowl_mvp_winner(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_do_postmatch_dilemma(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_do_postmatch_dilemma(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_do_postmatch_effects(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_do_postmatch_effects(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_do_postmatch_fans(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_do_postmatch_fans(_inst: any, _other: any): void;
declare function gml_Script_s_get_postmatch_fans_qb(
	_inst: any,
	_other: any,
): 0 | -2 | 3 | -5;
declare function gml_GlobalScript_s_do_prematch_dilemma_qb(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_do_prematch_dilemma_qb(
	_inst: any,
	_other: any,
): boolean;
declare function gml_GlobalScript_s_do_prematch_dilemma(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_do_prematch_dilemma(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_create_dilemma_news(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_clear_msg_and_back(_inst: any, _other: any): void;
declare function gml_Script_s_get_standard_dilemmas(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_dilemma_defend_player_cost(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): number;
declare function gml_Script_s_can_afford_dilemma_cc(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): boolean;
declare function gml_Script_s_get_college_dilemmas(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_GlobalScript_s_do_purchase_message(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_do_purchase_message(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_do_result_news_qb(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_do_result_news_qb(_inst: any, _other: any): void;
declare function gml_Script_s_choose_news(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_do_result_news(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_do_result_news(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_do_review_message(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_do_review_message(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_do_schedule(_inst: any, _other: any): void;
declare function gml_Script_s_do_schedule(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script____struct___195_s_co_get_sim_results_s_do_schedule(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___195_s_co_get_sim_results_s_do_schedule {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_co_get_sim_results(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
): any;
declare function gml_Script_s_co_conference_stats(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_do_timeout(_inst: any, _other: any): void;
declare function gml_Script_s_do_timeout(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_do_touchback(_inst: any, _other: any): void;
declare function gml_Script_s_do_touchback(_inst: any, _other: any): boolean;
declare function gml_GlobalScript_s_draw_commentary(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_draw_commentary(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_draw_gamepad_controls(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_draw_gamepad_controls(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_draw_kick_cone(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_draw_kick_cone(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_draw_kicking_power(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_draw_kicking_power(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_draw_my_route(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_draw_my_route(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_draw_player_image(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_draw_player_image(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): void;
declare function gml_GlobalScript_s_draw_scoreboard_qb_training(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_draw_scoreboard_qb_training(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_draw_scoreboard(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_draw_scoreboard(_inst: any, _other: any): void;
declare function gml_Script_s_get_exhibition_turn_text(
	_inst: any,
	_other: any,
): any;
declare function gml_GlobalScript_s_draw_scrimmage(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_draw_scrimmage(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_draw_wind(_inst: any, _other: any): void;
declare function gml_Script_s_draw_wind(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_drop_ball(_inst: any, _other: any): void;
declare function gml_Script_s_drop_ball(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_edit_cancel(_inst: any, _other: any): void;
declare function gml_Script_s_edit_cancel(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_edit_confirm_conf1(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_edit_confirm_conf1(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_edit_confirm_conf2(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_edit_confirm_conf2(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_edit_confirm_div1(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_edit_confirm_div1(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_edit_confirm_div2(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_edit_confirm_div2(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_edit_confirm_div3(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_edit_confirm_div3(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_edit_confirm_div4(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_edit_confirm_div4(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_edit_confirm_profile(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_edit_confirm_profile(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_boss_profile(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_edit_field(_inst: any, _other: any): void;
declare function gml_Script_s_edit_field(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
	argument6: any,
	argument7: any,
	argument8: any,
): void;
declare function gml_GlobalScript_s_edit_name(_inst: any, _other: any): void;
declare function gml_Script_s_edit_name(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): void;
declare function gml_GlobalScript_s_end_draft_round(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_end_draft_round(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_destroy_draftlist(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_end_match(_inst: any, _other: any): void;
declare function gml_Script_s_end_match(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_end_replay(_inst: any, _other: any): void;
declare function gml_Script_s_end_replay(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_fieldtxt_yards(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_fieldtxt(_inst: any, _other: any): void;
declare function gml_Script_s_fieldtxt(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_fieldtxt_yards(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_fieldimg(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_GlobalScript_s_find_default_button(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_find_default_button(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_GlobalScript_s_find_gamepad(_inst: any, _other: any): void;
declare function gml_Script_s_find_gamepad(_inst: any, _other: any): void;
declare function gml_Script_s_gamepad_is_fingerprint_sensor(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_GlobalScript_s_fire_coach(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_fire_coach(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_force_quit(_inst: any, _other: any): void;
declare function gml_Script_s_force_quit(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_format_hex_color(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_format_hex_color(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_freeze_purchase_buttons(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_freeze_purchase_buttons(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_generate_uid(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_generate_uid(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): string;
declare function gml_GlobalScript_s_get_achievement_percentage(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_get_achievement(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_get_aim_direction(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): void;
declare function gml_Script_s_get_aim_direction(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): any;
declare function gml_GlobalScript_s_get_attitude_icon(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_attitude_icon(
	_inst: any,
	_other: any,
	argument0: any,
): 0 | 2 | 1 | 4 | 3 | 6 | 5;
declare function gml_Script_s_attitude_reduce_step(
	_inst: any,
	_other: any,
	argument0: any,
): 30 | 15 | 75 | 90 | 45 | 60;
declare function gml_GlobalScript_s_get_average_yards(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_get_average_yards(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_GlobalScript_s_get_coach_cost(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_coach_cost(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_GlobalScript_s_get_condition_squad(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_condition_squad(
	_inst: any,
	_other: any,
): number;
declare function gml_Script_s_get_condition_squad_from_roster(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_GlobalScript_s_get_credit(_inst: any, _other: any): void;
declare function gml_Script_s_get_credit(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_get_defense_attribute(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_defense_attribute(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): number;
declare function gml_Script_s_get_attribute(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_attribute_buff(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): 0 | 1;
declare function gml_GlobalScript_s_get_destination(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_destination(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_get_distance_to_furthest_teammate(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_distance_to_furthest_teammate(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_GlobalScript_s_get_distance_to_nearest_opponent(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_distance_to_nearest_opponent(
	_inst: any,
	_other: any,
): number;
declare function gml_GlobalScript_s_get_division_winner_by_seed(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_division_winner_by_seed(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_GlobalScript_s_get_division_winner_name_by_seed(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_get_division_winner_name_by_seed(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_GlobalScript_s_get_division_winner_name(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_get_division_winner_name(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_GlobalScript_s_get_division_winner(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_get_division_winner(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_GlobalScript_s_get_happiness(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_happiness(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_get_hire_shortlist(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_hire_shortlist(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_history_by_year(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_get_holder_name(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_holder_name(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_get_human_fixture_by_week(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_human_fixture_by_week(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_human_fixture_next(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_human_fixture_next(
	_inst: any,
	_other: any,
): any;
declare function gml_GlobalScript_s_get_human_fixture_previous(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_human_fixture_previous(
	_inst: any,
	_other: any,
): number;
declare function gml_GlobalScript_s_get_kick_direction(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_kick_direction(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_get_kicker_name(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_kicker_name(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_get_kicker(_inst: any, _other: any): void;
declare function gml_Script_s_get_kicker(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_get_lifestyle(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_lifestyle(_inst: any, _other: any): number;
declare function gml_GlobalScript_s_get_match_rating(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_match_rating(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_max_age_normal(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_max_age_normal(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_GlobalScript_s_get_max_age(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_get_meeting_cost_condition(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_meeting_cost_condition(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_meeting_cost_delay_retirement(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_meeting_cost_delay_retirement(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_meeting_cost_extend_contract(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_meeting_cost_extend_contract(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_GlobalScript_s_get_meeting_cost_levelup(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_meeting_cost_levelup(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_GlobalScript_s_get_meeting_cost_morale(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_meeting_cost_morale(
	_inst: any,
	_other: any,
	argument0: any,
): 2 | 1 | 4 | 3 | 99;
declare function gml_GlobalScript_s_get_morale(_inst: any, _other: any): void;
declare function gml_Script_s_get_morale(_inst: any, _other: any): any;
declare function gml_Script_s_get_morale_from_roster(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_nearest_opponent_by_position(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_get_nearest_opponent_by_position(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_GlobalScript_s_get_nearest_opponent(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_nearest_opponent(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_new_salary(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_new_salary(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_GlobalScript_s_get_num_audibles(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_num_audibles(
	_inst: any,
	_other: any,
	argument0: any,
): 0 | 2 | 1 | 4 | 3 | 5;
declare function gml_GlobalScript_s_get_offer_team(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_offer_team(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_opponent_team_tla(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_opponent_team_tla(
	_inst: any,
	_other: any,
): any;
declare function gml_GlobalScript_s_get_player_body_type(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_player_body_type(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): 0 | 2 | 1;
declare function gml_Script_s_spr_from_bt(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_is_spr_bodytype(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): boolean;
declare function gml_Script_s_get_team_body_type(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): 2 | 1;
declare function gml_GlobalScript_s_get_player_by_lname(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_player_by_lname(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_player_by_position(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_player_by_position(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_player_by_position_from_roster(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_Script_s_get_player_kick_returner(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_player_name_for_record(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_player_name_for_record(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_player_name(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_get_player_name(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_GlobalScript_s_get_player_potential(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_player_potential(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_player_rating(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_player_rating(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_playoff_fixture_by_week(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_playoff_fixture_by_week(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_point_swing(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_get_point_swing(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): 0 | 1 | -1;
declare function gml_Script_s_get_head_to_head(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): 0 | 1 | -1;
declare function gml_Script_s_get_win_pecentage_by_confdiv(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_GlobalScript_s_get_points_season(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_points_season(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_GlobalScript_s_get_points_versus(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_get_points_versus(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): number;
declare function gml_GlobalScript_s_get_position_colour(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_position_colour(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_qb_energy(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_qb_energy(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_get_qb_name(_inst: any, _other: any): void;
declare function gml_Script_s_get_qb_name(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_get_qb_pmap(_inst: any, _other: any): void;
declare function gml_Script_s_get_qb_pmap(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_get_quarterback(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_quarterback(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_get_random_charity(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_random_charity(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_get_random_coach(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_random_coach(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_get_random_college_name(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_random_college_name(
	_inst: any,
	_other: any,
): any;
declare function gml_GlobalScript_s_get_random_first_name(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_random_first_name(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_random_last_name(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_random_last_name(
	_inst: any,
	_other: any,
): any;
declare function gml_GlobalScript_s_get_random_player_by_position(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_random_player_by_position(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_random_player_by_position_from_roster(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_GlobalScript_s_get_random_player_defensive(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_random_player_defensive(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_random_player_offensive(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_random_player_offensive(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_random_player(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_random_player(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_GlobalScript_s_get_random_scoredata(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_random_scoredata(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_s_co_get_random_scoredata(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_random_teamname(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_random_teamname(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_random_team_id(
	_inst: any,
	_other: any,
): number;
declare function gml_GlobalScript_s_get_record(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_record(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_required_position(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_required_position(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_Script_s_get_required_position_no_QB_RB(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_GlobalScript_s_get_salary_cap_space(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_salary_cap_space(
	_inst: any,
	_other: any,
): any;
declare function gml_GlobalScript_s_get_salary_total(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_salary_total(_inst: any, _other: any): number;
declare function gml_GlobalScript_s_get_savename(_inst: any, _other: any): void;
declare function gml_Script_s_get_savename(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_get_skin_colour_by_index(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_skin_colour_by_index(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_staff(_inst: any, _other: any): void;
declare function gml_Script_s_get_staff(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_store_player_by_position(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_get_store_player_by_position(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_GlobalScript_s_get_string_action_result(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_string_action_result(
	_inst: any,
	_other: any,
	argument0: any,
):
	| "ACTION_RESULT_TOUCHDOWN"
	| "ACTION_RESULT_TOUCHDOWN_OPP"
	| "ACTION_RESULT_INTERCEPTED"
	| "ACTION_RESULT_TURNOVER"
	| "ACTION_RESULT_PUNT"
	| "ACTION_RESULT_FIELDGOAL_GOOD"
	| "ACTION_RESULT_FIELDGOAL_BAD"
	| "ACTION_RESULT_SAFETY"
	| "ACTION_RESULT_TIMEUP"
	| "ACTION_RESULT_FIELDGOAL_QB"
	| "ACTION_RESULT_PAT_QB";
declare function gml_GlobalScript_s_get_string_anim(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_string_anim(
	_inst: any,
	_other: any,
	argument0: any,
):
	| ""
	| "ANIM_STAND"
	| "ANIM_CROUCH"
	| "ANIM_RUN"
	| "ANIM_TACKLING"
	| "ANIM_FALLING"
	| "ANIM_DIVE"
	| "ANIM_GETUP"
	| "ANIM_JOCKEY"
	| "ANIM_JUMP"
	| "ANIM_STIFFARM"
	| "ANIM_JUMPCATCH"
	| "ANIM_AIM"
	| "ANIM_THROW"
	| "ANIM_PLACE"
	| "ANIM_KICK1"
	| "ANIM_KICK2"
	| "ANIM_SPIKE"
	| "ANIM_CELEBRATE"
	| "ANIM_FIRSTDOWN"
	| "ANIM_KNEEL";
declare function gml_GlobalScript_s_get_string_attitude(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_string_attitude(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_string_ball_state(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_string_ball_state(
	_inst: any,
	_other: any,
):
	| "BALL_SET"
	| "BALL_AIM"
	| "BALL_AIM_DEADZONE"
	| "BALL_RELEASED"
	| "BALL_DOWN"
	| "BALL_RECEIVED"
	| "BALL_TOUCHDOWN"
	| "BALL_INCOMPLETE"
	| "BALL_OUTOFBOUNDS"
	| "BALL_INTERCEPTED"
	| "BALL_TURNOVER"
	| "BALL_SACKED"
	| "BALL_SAFETY"
	| "BALL_FUMBLED"
	| "BALL_FIELD_GOAL_GOOD"
	| "BALL_FIELD_GOAL_BAD"
	| "BALL_PRACTICE_SUCCESS"
	| "BALL_PRACTICE_FAIL"
	| "BALL_RUN_QB"
	| "BALL_HANDOFF"
	| "BALL_TOUCHBACK"
	| "BALL_INTERCEPTED_TB"
	| "ball.state == OTHER";
declare function gml_GlobalScript_s_get_string_commstage(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_string_commstage(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_string_condition(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_string_condition(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_string_conference(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_string_conference(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_string_division(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_get_string_division(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_GlobalScript_s_get_string_downand(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_string_downand(
	_inst: any,
	_other: any,
): string;
declare function gml_GlobalScript_s_get_string_float(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_get_string_float(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_GlobalScript_s_get_string_heshe(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_string_heshe(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_string_performance(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_string_performance(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_string_picks(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_string_picks(
	_inst: any,
	_other: any,
	argument0: any,
): string;
declare function gml_GlobalScript_s_get_string_position_full(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_string_position_full(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_string_position(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_string_position(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_string_record(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_get_string_record(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_string_record_co_extended(
	_inst: any,
	_other: any,
	argument0: any,
): string;
declare function gml_Script_s_get_string_conf_tag(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_GlobalScript_s_get_string_save_details(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_string_save_details(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): string;
declare function gml_GlobalScript_s_get_string_sex(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_string_sex(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_get_string_state(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_string_state(
	_inst: any,
	_other: any,
): "ACTION" | "COMMENTARY" | "state == OTHER";
declare function gml_GlobalScript_s_get_string_time(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_get_string_time(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_GlobalScript_s_get_string_trade_value(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_string_trade_value(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_string_trait(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_string_trait(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_string_week_short(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_string_week_short(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_string_week(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_string_week(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_string_year(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_string_year(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_team_by_id(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_team_by_id(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_team_by_id_internal(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_GlobalScript_s_get_team_by_seed(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_team_by_seed(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_team_by_seed_co(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_team_seeding(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_GlobalScript_s_get_team_defense(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_team_defense(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_Script_s_get_team_defense_exh(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_team_defense_from_roster(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_GlobalScript_s_get_team_id_by_seed(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_team_id_by_seed(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_GlobalScript_s_get_team_name_by_id(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_team_name_by_id(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_team_name_by_seed(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_get_team_name_by_seed(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_GlobalScript_s_get_team_net_points(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_team_net_points(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_GlobalScript_s_get_team_offense(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_team_offense(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_Script_s_get_team_offense_exh(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_team_offense_from_roster(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_Script_s_debug_up_team_offense(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_get_team_position_by_id(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_team_position_by_id(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_GlobalScript_s_get_team_tla_by_id(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_team_tla_by_id(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_team_winpct(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_team_winpct(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_ticker_text(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_ticker_text(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_get_trade_value_by_rating(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_trade_value_by_rating(
	_inst: any,
	_other: any,
	argument0: any,
): 2 | 1 | 3;
declare function gml_GlobalScript_s_get_trade_value(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_trade_value(
	_inst: any,
	_other: any,
	argument0: any,
): 2 | 1 | 3;
declare function gml_GlobalScript_s_get_watermark_color(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_watermark_color(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_get_watermarked_stats(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_watermarked_stats(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_get_week_superbowl(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_week_superbowl(
	_inst: any,
	_other: any,
): number;
declare function gml_GlobalScript_s_get_wins_versus(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_get_wins_versus(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): number;
declare function gml_GlobalScript_s_gui_helpers(_inst: any, _other: any): void;
declare function gml_Script_s_create_label(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): any;
declare function gml_Script_s_is_new_shadow(_inst: any, _other: any): number;
declare function gml_GlobalScript_s_gui_matchline(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___196_s_obj_matchLine_create_s_gui_matchline(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___196_s_obj_matchLine_create_s_gui_matchline {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_obj_matchLine_create(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_obj_matchLine_step(_inst: any, _other: any): void;
declare function gml_Script_s_obj_matchLine_global_flick(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_obj_matchLine_draw(_inst: any, _other: any): void;
declare function gml_Script_s_obj_matchLine_draw_gui(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_has_xp_gain(_inst: any, _other: any): void;
declare function gml_Script_s_has_xp_gain(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_GlobalScript_s_hex_string_to_col(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_hex_string_to_col(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_GlobalScript_s_history(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_history_by_year(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_create_history_for_current_year(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_s_log_this_year_history(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_log_full_history(_inst: any, _other: any): void;
declare function gml_Script_s_update_history(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_update_history_playoffs(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_update_history_finish(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_update_history_season_end(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_update_history_won_championship(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_update_history_reached_playoffs_round(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_update_history_won_bowl(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_update_history_subdivisional_champ_finals(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_history_display_lines_count(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_s_history_display_lines_count_yearindex(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_GlobalScript_s_html5_helpers(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_file_exists_safe(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_GlobalScript_s_iap_async_android(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_debug_purge_all_android_iap(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_iap_async_android(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_iap_async_ios(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_iap_async_ios(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_iap_init(_inst: any, _other: any): void;
declare function gml_Script_s_iap_init(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_iap_purchase_Credits_100(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_iap_purchase_Credits_20(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_iap_purchase_Credits_250(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_iap_purchase_Credits_50(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_iap_purchase_FullVersion(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_iap_purchase_FullVersion(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_iap_restore(_inst: any, _other: any): void;
declare function gml_Script_s_iap_restore(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_increase_player_attribute(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_increase_player_attribute(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_GlobalScript_s_injury_effect_on_attitude(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_injury_effect_on_attitude(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_intercept_object(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_intercept_object(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_is_backup(_inst: any, _other: any): void;
declare function gml_Script_s_is_backup(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_GlobalScript_s_is_ball_dead(_inst: any, _other: any): void;
declare function gml_Script_s_is_ball_dead(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_is_bye_week(_inst: any, _other: any): void;
declare function gml_Script_s_is_bye_week(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_get_bye_week(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_is_defensive_player(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_is_defensive_player(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_GlobalScript_s_is_falling(_inst: any, _other: any): void;
declare function gml_Script_s_is_falling(_inst: any, _other: any): boolean;
declare function gml_GlobalScript_s_is_in_the_clear(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_is_in_the_clear(_inst: any, _other: any): boolean;
declare function gml_GlobalScript_s_is_offensive_player(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_is_offensive_player(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_get_training_reg(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_is_on_pitch_xy(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_is_on_pitch_xy(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): boolean;
declare function gml_GlobalScript_s_is_on_pitch(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_is_on_pitch(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_GlobalScript_s_is_quarter_over(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_is_quarter_over(_inst: any, _other: any): boolean;
declare function gml_GlobalScript_s_is_staff(_inst: any, _other: any): void;
declare function gml_Script_s_is_staff(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_GlobalScript_s_kick_ball(_inst: any, _other: any): void;
declare function gml_Script_s_kick_ball(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_kick_off(_inst: any, _other: any): void;
declare function gml_Script_s_kick_off(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_last_secs_of_half(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_last_secs_of_half(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_seconds_remaining(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_lastname_already_on_roster(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_lastname_already_on_roster(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_GlobalScript_s_lines_intersect(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
	argument6: any,
	argument7: any,
): void;
declare function gml_Script_s_lines_intersect(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
	argument6: any,
	argument7: any,
): any;
declare function gml_GlobalScript_s_load_endzone_from_uniform_file(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_load_endzone_from_uniform_file(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_GlobalScript_s_load_map_file(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_load_map_file(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_destroy_map_file(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_load_options(_inst: any, _other: any): void;
declare function gml_Script_s_load_options(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_load_profile_uni(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_load_profile_uni(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_load_retrobowl_history(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_load_retrobowl_history(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_is_string_real(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_GlobalScript_s_load_retrobowl_hof(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_load_retrobowl_hof(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_load_schedule(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_load_schedule(_inst: any, _other: any): any;
declare function gml_Script_s_load_college_schedule(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_s_get_schedule_data_years(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_Script_s_get_schedule_year_stagger(
	_inst: any,
	_other: any,
): number;
declare function gml_Script_s_get_fix_type(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script____struct___197_s_calc_fix_type_s_load_schedule(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___197_s_calc_fix_type_s_load_schedule {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_calc_fix_type(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): any;
declare function gml_Script_s_get_fix_type_string(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_get_fix_type_string_by_values(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_Script_s_create_fix_type_string(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_list_schedule_fix_type(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_load_strings(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_refresh_strings(_inst: any, _other: any): void;
declare function gml_Script_s_load_strings(_inst: any, _other: any): any;
declare function gml_Script_s_select_lang(_inst: any, _other: any): string;
declare function gml_Script_s_select_lang_file(_inst: any, _other: any): any;
declare function gml_Script_s_select_override_lang_file(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_s_select_institution_lang_file(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_s_add_file_to_lang_strings(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script____struct___198_s_co_refresh_strings_s_load_strings(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___198_s_co_refresh_strings_s_load_strings {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_co_refresh_strings(_inst: any, _other: any): void;
declare function gml_Script_s_co_load_strings(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_load_language_file(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_GlobalScript_s_load_team_detail(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_load_team_detail(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_GlobalScript_s_load_teamname_from_uniform_file(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_load_teamname_from_uniform_file(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_GlobalScript_s_load_teams(_inst: any, _other: any): void;
declare function gml_Script_s_load_teams(_inst: any, _other: any): any;
declare function gml_Script_s_load_teams_data(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_reset_co_team_data(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_set_teams_min_max_ids(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_struct_in_array_by_uid(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script____struct___199_load_data_to_struct_array_s_load_teams(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___199_load_data_to_struct_array_s_load_teams {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_load_data_to_struct_array(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script____struct___200_s_load_json_s_load_teams(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___200_s_load_json_s_load_teams {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_load_json(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_save_json(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): boolean;
declare function gml_Script_anon_4747_keys_rows_data_s_load_teams(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_anon_5285_keys_rows_data_s_load_teams(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_anon_5654_keys_rows_data_s_load_teams(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_anon_5724_keys_rows_data_s_load_teams(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_anon_5792_keys_rows_data_s_load_teams(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_keys_rows_data(_inst: any, _other: any): void;
declare namespace gml_Script_keys_rows_data {
	var __yyg__is_constructor: boolean;
}
declare function gml_GlobalScript_s_load_uniform_file2(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_load_uniform_file2(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
): void;
declare function gml_Script_s_verify_restore_uniform_file(
	_inst: any,
	_other: any,
): boolean;
declare function gml_GlobalScript_s_loadgame(_inst: any, _other: any): void;
declare function gml_Script_btn_click_LoadSlot1(_inst: any, _other: any): void;
declare function gml_Script_btn_click_LoadSlot2(_inst: any, _other: any): void;
declare function gml_Script_btn_click_LoadSlot3(_inst: any, _other: any): void;
declare function gml_Script_btn_click_LoadSlot4(_inst: any, _other: any): void;
declare function gml_Script_btn_click_LoadSlot5(_inst: any, _other: any): void;
declare function gml_Script_btn_click_slot(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_master_load(_inst: any, _other: any): void;
declare function gml_Script_s_master_load_from_backup(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_loadgame(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_cap_breach_refresh(_inst: any, _other: any): void;
declare function gml_Script_s_cap_breach_str(_inst: any, _other: any): any;
declare function gml_Script_s_is_player_pmap_corrupt(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_check_for_return_stats(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_check_longest_records(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_fix_poki_browser_max_percent_grade(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_update_ui_colours(_inst: any, _other: any): void;
declare function gml_Script_s_get_college_primary_col(
	_inst: any,
	_other: any,
): number;
declare function gml_Script_s_update_game_title(_inst: any, _other: any): void;
declare function gml_Script_s_reset_subdivision_names(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_log_player(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_log_player(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_make_random_colour(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_make_random_colour(
	_inst: any,
	_other: any,
): number;
declare function gml_GlobalScript_s_match_rating_effect_on_morale(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_match_rating_effect_on_morale(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_meter_change_end(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_meter_change_end(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_meter_change(_inst: any, _other: any): void;
declare function gml_Script_s_meter_change(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): void;
declare function gml_GlobalScript_s_msg_clear_info_draft(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_msg_clear_info_draft(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_msg_clear(_inst: any, _other: any): void;
declare function gml_Script_s_msg_clear(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_msg_timeouts(_inst: any, _other: any): void;
declare function gml_Script_s_msg_timeouts(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_news_clear(_inst: any, _other: any): void;
declare function gml_Script_s_news_clear(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_notification(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_notification(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_GlobalScript_s_obj_controller_draw_begin(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_obj_controller_draw_begin(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_obj_controller_helpers(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_obj_controller_step2(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_obj_controller_step(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_obj_player_draw_begin(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_obj_player_draw_begin(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_obj_player_helpers(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_obj_player_step2(_inst: any, _other: any): void;
declare function gml_Script_s_obj_player_step(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_open_store_nag(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_open_store_nag(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_open_store(_inst: any, _other: any): void;
declare function gml_Script_s_open_store(_inst: any, _other: any): void;
declare function gml_Script_s_btn_store_exit(_inst: any, _other: any): void;
declare function gml_Script_s_iap_purchase_credits(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_iap_purchase_Credits_100(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_iap_purchase_Credits_20(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_iap_purchase_Credits_250(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_iap_purchase_Credits_50(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_iap_purchase_Credits_2000(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_is_consumable_pruchase(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_award_shop_credits(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_do_info_unlimited_info(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_do_info_unlimited_info_continue(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_opponent_goalside(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_opponent_goalside(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_GlobalScript_s_opposite_aim(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_opposite_aim(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_GlobalScript_s_parse_dilemma(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_parse_dilemma(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_GlobalScript_s_parse_intro(_inst: any, _other: any): void;
declare function gml_Script_s_parse_intro(
	_inst: any,
	_other: any,
	argument0: any,
): string;
declare function gml_GlobalScript_s_parse_news(_inst: any, _other: any): void;
declare function gml_Script_s_parse_news(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
): string;
declare function gml_GlobalScript_s_parse_player_message(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_parse_player_message(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): string;
declare function gml_GlobalScript_s_parse_string(_inst: any, _other: any): void;
declare function gml_Script_s_parse_string(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_play(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_play(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_play_endweek(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_player_at_max_potential(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_player_at_max_potential(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_GlobalScript_s_player_gpa(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_gpa_from_percent_grade(
	_inst: any,
	_other: any,
	argument0: any,
): 0 | 2 | 1 | 4 | 3 | 1.3 | 1.7 | 2.3 | 2.7 | 3.3 | 3.7;
declare function gml_Script_s_gpa_string(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_gpa_string_direct(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_decay_percent_grade(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_debug_recover_percent_grade(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_post_match_gpa_refresh(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_add_percent_grade(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_get_decay(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_Script_s_get_decay_info(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_refresh_suspended(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_get_percent_grade_squad(
	_inst: any,
	_other: any,
): number;
declare function gml_Script_btn_click_Boost_GPA(_inst: any, _other: any): void;
declare function gml_Script_btn_response_boost_gpa(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_post_season_gpa_boost(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_my_team_academics(_inst: any, _other: any): any;
declare function gml_Script_s_player_grade_suspend(
	_inst: any,
	_other: any,
	argument0: any,
): 72 | 64 | 76 | 69 | 66 | 60;
declare function gml_Script_s_player_grade_suspend_from_age(
	_inst: any,
	_other: any,
	argument0: any,
): 72 | 64 | 76 | 69 | 66 | 60;
declare function gml_Script_s_player_grade_lift_suspension(
	_inst: any,
	_other: any,
): 80 | 73 | 70 | 76;
declare function gml_Script_s_gpa_step_from_percent_grade(
	_inst: any,
	_other: any,
	argument0: any,
): 0 | 2 | 1 | 4 | 7 | 3 | 8 | 9 | 6 | 5 | 10;
declare function gml_Script_s_percent_grade_from_gpa_step_UPPER(
	_inst: any,
	_other: any,
	argument0: any,
): 10 | 96 | 72 | 64 | 79 | 89 | 76 | 82 | 86 | 92 | 69 | 66;
declare function gml_Script_s_player_gpa_color(
	_inst: any,
	_other: any,
	argument0: any,
): 255 | 16777215 | 65535 | 4235519;
declare function gml_Script_s_player_gpa_colors_info(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_player_party(_inst: any, _other: any): void;
declare function gml_Script_s_update_party_meter(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_get_party_info(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_add_to_party_meter(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_clear_party_meter(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_team_halve_all_party_meters(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_team_clear_all_party_meters(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_player_profile_qb_mode(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_player_profile_qb_mode(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_playoffs_12(_inst: any, _other: any): void;
declare function gml_Script_s_playoffs_12(_inst: any, _other: any): boolean;
declare function gml_GlobalScript_s_point_to_path(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_point_to_path(_inst: any, _other: any): number;
declare function gml_GlobalScript_s_populate_division(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_populate_division(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_GlobalScript_s_populate_schedulebox(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_populate_schedulebox(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_position_already_on_roster(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_position_already_on_roster(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_GlobalScript_s_position_edit_name_btn(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_position_edit_name_btn(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_practice_passing(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_practice_passing(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_practice_qb_mode(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_practice_qb_mode(_inst: any, _other: any): void;
declare function gml_Script_s_end_qb_mode_practice(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_quit_qb_mode_practice(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_practice_running_qb(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_practice_running_qb(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_practice_running(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_practice_running(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_pre_match(_inst: any, _other: any): void;
declare function gml_Script_s_pre_match(_inst: any, _other: any): void;
declare function gml_Script_s_continue_time_for_draft_msg(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_co_pre_match(_inst: any, _other: any): void;
declare function gml_Script_s_rm_winners_notice(
	_inst: any,
	_other: any,
): boolean;
declare function gml_GlobalScript_s_promote_playoff_winner(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_promote_playoff_winner(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_seed_divisional_round(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_punt(_inst: any, _other: any): void;
declare function gml_Script_s_punt(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_qb_mode_auto_xp(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_qb_mode_auto_xp(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): void;
declare function gml_GlobalScript_s_qb_mode_update_resting(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_qb_mode_update_resting(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_qb_run(_inst: any, _other: any): void;
declare function gml_Script_s_qb_run(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_qb_revert_throw(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_receive_ball(_inst: any, _other: any): void;
declare function gml_Script_s_receive_ball(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_received_AI_kickoff(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_received_AI_kickoff(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_received_AI_new(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_received_AI_new(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_record_frame(_inst: any, _other: any): void;
declare function gml_Script_s_record_frame(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_recruitment_credits(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_recruitment_credits_cap_total(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_s_validate_recruitment_credits_cap(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_can_fit_recruitment_credits(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_recruitment_credits_space(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_recruitment_credits_add(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_recruitment_credits_toggle_roster_size(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_recruitment_credits_button_click_boost(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_response_boost_recruitment_credits(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_refactor_team_strengths(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_refactor_team_strengths(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_refactor_co_team_strengths(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_refresh_save_slots(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_refresh_save_slots(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_rehab_effect(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_rehab_effect(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_GlobalScript_s_reinstate_hof_player(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_reinstate_hof_player(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_remaining_picks_by_round(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_remaining_picks_by_round(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_remaining_picks(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_remaining_picks(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_remove_player(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_remove_player(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): boolean;
declare function gml_GlobalScript_s_replay_controls(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_replay_controls(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_replay_frame(_inst: any, _other: any): void;
declare function gml_Script_s_replay_frame(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_reset_draft_picks(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_reset_draft_picks(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_reset_match_stats(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_reset_match_stats(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_reset_player_meetings(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_reset_player_meetings(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_reset_staff_hire_list(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_reset_staff_hire_list(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_reset_wind(_inst: any, _other: any): void;
declare function gml_Script_s_reset_wind(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_rest_all_players(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_rest_all_players(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_restore_uniforms_all(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_restore_uniforms_all(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_rgb_to_bgr(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_rgb_to_bgr(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_roman_numerals(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_roman_numerals(
	_inst: any,
	_other: any,
	argument0: any,
): string;
declare function gml_GlobalScript_s_round_player_attributes(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_round_player_attributes(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_round_to_decimal(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_round_to_decimal(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_GlobalScript_s_save_backup(_inst: any, _other: any): void;
declare function gml_Script_s_save_backup(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_save_options(_inst: any, _other: any): void;
declare function gml_Script_s_save_options(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_save_uniform_file2(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_save_uniform_file2(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_GlobalScript_s_savegame(_inst: any, _other: any): void;
declare function gml_Script_s_savegame(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_set_anim(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_set_anim(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_set_ball_down(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_ball_down(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_set_position_defense_fg(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_position_defense_fg(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_set_position_defense(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_position_defense(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_set_position_kickoff(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_position_return_ko(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_position_take_ko(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_set_position_offense_fg(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_position_offense_fg(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_set_position_offense(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_position_offense(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_set_rewarded_route(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_rewarded_route(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_set_skills_and_skin(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_skills_and_skin(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_ssss_pick_defense_player_pmap(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_Script_ssss_pick_offense_player_pmap(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_Script_s_set_skills_and_skin_new(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_skills_and_skin_old(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_set_team_morale(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_set_team_morale(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_GlobalScript_s_set_up_button_kickoff(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_up_button_kickoff(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_kick_off(_inst: any, _other: any): void;
declare function gml_Script_s_btn_kickoff_recenter(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_set_up_edit_screen(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_up_edit_screen(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_set_up_fieldgoal(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_set_up_fieldgoal(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_set_up_globals(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_up_globals(_inst: any, _other: any): void;
declare function gml_Script_s_set_up_temp_variables(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_set_up_hof_players_screen(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_up_hof_players_screen(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_set_up_kickoff(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_up_kickoff(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_set_up_play(_inst: any, _other: any): void;
declare function gml_Script_s_set_up_play(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_btn_audible_reposition(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_btn_fieldgoal_reposition(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_set_up_practice(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_up_practice(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_set_up_purchase_ids(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_up_purchase_ids(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_set_up_qb_pmap(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_up_qb_pmap(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_set_up_uniform_profile(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_up_uniform_profile(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_set_up_uniforms_training(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_up_uniforms_training(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_set_up_uniforms(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_up_uniforms(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_set_up_xp_headers(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_set_up_xp_headers(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_GlobalScript_s_shader_get_uniforms(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_shader_get_uniforms(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_shader_set_uniforms(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_shader_set_uniforms(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_blackwhite_colour_hack(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_show_backups(_inst: any, _other: any): void;
declare function gml_Script_s_show_backups(_inst: any, _other: any): void;
declare function gml_Script_s_restore_backup1(_inst: any, _other: any): void;
declare function gml_Script_s_restore_backup2(_inst: any, _other: any): void;
declare function gml_Script_s_restore_backup3(_inst: any, _other: any): void;
declare function gml_Script_s_restore_backup4(_inst: any, _other: any): void;
declare function gml_Script_s_restore_backup5(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_sim_stat_increment(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_sim_stat_increment(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_sim_stat_update(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_Script_s_sim_stat_touchdown(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_sim_stat_pass(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_sim_stat_run(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_sim_stat_fumble(_inst: any, _other: any): void;
declare function gml_Script_s_sim_stat_interception(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_sim_stat_sack(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_simming_action(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_simming_action(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_skip_to_week(_inst: any, _other: any): void;
declare function gml_Script_s_skip_to_week(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_sort_hirelist(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_sort_hirelist(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_sort_list_by_column(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_sort_maplist_by_numeric_field(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_GlobalScript_s_sort_players(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_sort_players(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_GlobalScript_s_sort_record_list(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_sort_record_list(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_sort_retrobowl_history_list(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_sort_retrobowl_history_list(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_sort_retrobowl_list(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_sort_retrobowl_list(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_sort_teams(_inst: any, _other: any): void;
declare function gml_Script_s_sort_teams(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_GlobalScript_s_sound_audience_catch(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_sound_audience_catch(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_sound_audience_dis(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_sound_audience_dis(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_sound_audience_fg(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_sound_audience_fg(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_sound_audience_idle(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_sound_audience_idle(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_sound_audience_inc(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_sound_audience_inc(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_sound_audience_tck(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_sound_audience_tck(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_sound_bounce(_inst: any, _other: any): void;
declare function gml_Script_s_sound_bounce(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_sound_dive(_inst: any, _other: any): void;
declare function gml_Script_s_sound_dive(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_sound_kick(_inst: any, _other: any): void;
declare function gml_Script_s_sound_kick(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_sound_loop(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_sound_loop(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_sound_oof(_inst: any, _other: any): void;
declare function gml_Script_s_sound_oof(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_sound_post(_inst: any, _other: any): void;
declare function gml_Script_s_sound_post(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_sound_tackle(_inst: any, _other: any): void;
declare function gml_Script_s_sound_tackle(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_sound_throw(_inst: any, _other: any): void;
declare function gml_Script_s_sound_throw(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_sound(_inst: any, _other: any): void;
declare function gml_Script_s_sound(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_sound_brass_setup(_inst: any, _other: any): void;
declare function gml_Script_s_sound_brass_loop(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_stop_brass_loop(_inst: any, _other: any): void;
declare function gml_Script_s_stop_brass_loop_finalize(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_spike_ball(_inst: any, _other: any): void;
declare function gml_Script_s_spike_ball(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_split_string(_inst: any, _other: any): void;
declare function gml_Script_s_split_string(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_sprite_holding_ball(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_sprite_holding_ball(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_GlobalScript_s_start_new_season(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_start_new_season(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_renew_contracts_qb_mode(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_coach_rating_college(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_start_replay(_inst: any, _other: any): void;
declare function gml_Script_s_start_replay(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_startup(_inst: any, _other: any): void;
declare function gml_Script_s_startup(_inst: any, _other: any): void;
declare function gml_Script_s_startup_welcome_msg(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_startup_set_master_variables(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_startup_handle_saved_game(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_startup_college_mode(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_startup_browser(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_stop_tackling(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_stop_tackling(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_store_cant_afford(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_store_cant_afford(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_str_helpers(_inst: any, _other: any): void;
declare function gml_Script_s_str_int_to_ordinal(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_str(_inst: any, _other: any): void;
declare function gml_Script_s_str(_inst: any, _other: any, argument0: any): any;
declare function gml_Script_s_str_u(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_str_real(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_strf(_inst: any, _other: any): any;
declare function gml_Script_s_strfl(_inst: any, _other: any): any;
declare function gml_Script_s_co_str(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_co_str_real(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_string_rand(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_string_rand(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_GlobalScript_s_strP(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_strP(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_subtract_time(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_subtract_time(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare function gml_GlobalScript_s_switch_drivedirection(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_switch_drivedirection(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_tackle_failure(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_tackle_failure(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_tag_backups(_inst: any, _other: any): void;
declare function gml_Script_s_tag_backups(_inst: any, _other: any): void;
declare function gml_Script_s_tag_backups_internal(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_team_helpers(_inst: any, _other: any): void;
declare function gml_Script_s_teams_file(_inst: any, _other: any): any;
declare function gml_GlobalScript_s_team_interested(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_team_interested(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_qb_mode_team_interested(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_GlobalScript_s_throw_ball(_inst: any, _other: any): void;
declare function gml_Script_s_throw_ball(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_tip_continue(_inst: any, _other: any): void;
declare function gml_Script_s_tip_continue(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_toxic_effect_on_morale(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_toxic_effect_on_morale(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_training_regime_effect_on_morale(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_training_regime_effect_on_morale(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_unfreeze_purchase_buttons(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_unfreeze_purchase_buttons(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_uniform_helpers(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_uniforms_default_file(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_s_extract_uniform_cols_to_record(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_uniform_cols_to_record(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_uniform_cols_from_record(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_GlobalScript_s_update_ball_fieldgoal(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_ball_fieldgoal(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_update_ball_movement(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_ball_movement(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_update_ball_offset(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_ball_offset(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_update_ball(_inst: any, _other: any): void;
declare function gml_Script_s_update_ball(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_update_camera(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_camera(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_update_commentary(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_commentary(_inst: any, _other: any): void;
declare function gml_Script_s_go_for_it_or_not(_inst: any, _other: any): void;
declare function gml_Script_s_check_toggle_sim(_inst: any, _other: any): void;
declare function gml_Script_s_toggle_sim_debug_log(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_btn_toggle_sim(_inst: any, _other: any): void;
declare function gml_Script_btn_toggle_sim_confirm(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_toggle_sim_dismiss(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_toggle_sim_active(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_anon_42892_sim_state_s_update_commentary(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): any;
declare function gml_Script_anon_43102_sim_state_s_update_commentary(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_anon_43225_sim_state_s_update_commentary(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_anon_43731_sim_state_s_update_commentary(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_anon_44127_sim_state_s_update_commentary(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_sim_state(_inst: any, _other: any): void;
declare namespace gml_Script_sim_state {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_skip_time_active(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_s_check_skip_time_button(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_skip_time(_inst: any, _other: any): void;
declare function gml_Script_s_no_ties_allowed(_inst: any, _other: any): boolean;
declare function gml_Script_roster_short_desc(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_roster_short_desc_tag(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_slog_roster(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_slog_master_roster(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_GlobalScript_s_update_contracts(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_contracts(_inst: any, _other: any): void;
declare function gml_Script_s_check_staff_exist(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_update_draft_page(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_draft_page(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_update_freeagents_page(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_freeagents_page(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_update_game_clock(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_game_clock(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_update_game_timer(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_game_timer(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_update_gamepad(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_gamepad(_inst: any, _other: any): void;
declare function gml_Script_s_gamepad_async(_inst: any, _other: any): void;
declare function gml_Script_s_gamepad_activity(_inst: any, _other: any): any;
declare function gml_Script_s_clear_last_selected_history(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_overwrite_last_selected(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___201_s_save_last_selected_s_update_gamepad(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___201_s_save_last_selected_s_update_gamepad {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_save_last_selected(_inst: any, _other: any): void;
declare function gml_Script_s_get_last_selected(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script____struct___202_s_reset_gamepad_s_update_gamepad(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___202_s_reset_gamepad_s_update_gamepad {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_reset_gamepad(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Script_s_update_gamepad_data(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_update_ui_selected(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script____struct___203_s_multiplayer_init_s_update_gamepad(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___203_s_multiplayer_init_s_update_gamepad {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_multiplayer_init(_inst: any, _other: any): void;
declare function gml_Script_s_is_multicon_wanted(_inst: any, _other: any): any;
declare function gml_Script_s_toggle_multicon_wanted(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_multicon_reset(_inst: any, _other: any): void;
declare function gml_Script_s_multicon_init(_inst: any, _other: any): void;
declare function gml_Script_s_refresh_gamepads(_inst: any, _other: any): number;
declare function gml_Script_s_gamepad_lv_dir(
	_inst: any,
	_other: any,
	argument0: any,
): 1 | -1;
declare function gml_Script_s_set_multicon_active(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_set_multicon_turn(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_multicon_save_turn(_inst: any, _other: any): void;
declare function gml_Script_s_multicon_restore_turn(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_is_turn(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_is_multicon(_inst: any, _other: any): boolean;
declare function gml_Script_s_is_pad_used_in_multicon(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_Script_s_get_multicon_current_pad(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_s_set_multicon_touch(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_is_touch_allowed(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_s_is_ui_selected(_inst: any, _other: any): boolean;
declare function gml_Script_s_ui_selected_color(
	_inst: any,
	_other: any,
): 255 | 16777215 | 65535 | 65280;
declare function gml_GlobalScript_s_update_history_finish(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_update_history_playoffs(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_update_history(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_update_human_playoff_fixtures(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_human_playoff_fixtures(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_check_rearranged_human_playoff(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_update_human_fixtures(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_fixturelist_fix_extra_data(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_GlobalScript_s_update_job_offer_buttons(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_job_offer_buttons(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_update_manual_gestures(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_manual_gestures(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_update_maplist_from_file(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_s_update_maplist_from_file(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_GlobalScript_s_update_music(_inst: any, _other: any): void;
declare function gml_Script_s_update_music(_inst: any, _other: any): void;
declare function gml_Script_s_update_music_safe(_inst: any, _other: any): void;
declare function gml_Script_s_is_audio_safe(_inst: any, _other: any): boolean;
declare function gml_GlobalScript_s_update_my_shadow(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_my_shadow(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_update_options(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_options(_inst: any, _other: any): void;
declare function gml_Script_s_get_op_invert_throw(_inst: any, _other: any): any;
declare function gml_Script_s_get_op_autorun(_inst: any, _other: any): any;
declare function gml_Script_btn_click_CollegeToggleColor(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_get_gm_version(_inst: any, _other: any): string;
declare function gml_Script_s_update_options_if_present(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_update_poki_scaling(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_poki_scaling(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_update_rest_all_button(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_rest_all_button(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_update_shopping_buttons(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_shopping_buttons(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_shopping_next(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_click_shopping_prev(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_btn_shopping_purchase(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_confirm_purchase(_inst: any, _other: any): void;
declare function gml_Script_s_count_shop_items_by_type(
	_inst: any,
	_other: any,
	argument0: any,
): number;
declare function gml_Script_s_degrade_shop_items(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_update_stats(_inst: any, _other: any): void;
declare function gml_Script_s_update_stats(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_update_team_buttons(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_team_buttons(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_update_team_edit_buttons(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_team_edit_buttons(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_update_uniform_name(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_uniform_name(
	_inst: any,
	_other: any,
): void;
declare function gml_GlobalScript_s_update_xdead(_inst: any, _other: any): void;
declare function gml_Script_s_update_xdead(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_update_yard_gain(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_update_yard_gain(_inst: any, _other: any): void;
declare function gml_GlobalScript_s_y_on_myside(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_s_y_on_myside(
	_inst: any,
	_other: any,
	argument0: any,
): boolean;
declare function gml_GlobalScript_scale_canvas(_inst: any, _other: any): void;
declare function gml_Script_scale_canvas(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
): void;
declare function gml_GlobalScript_season_tally_scripts(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___204_s_obj_season_tally_create_season_tally_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___204_s_obj_season_tally_create_season_tally_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script____struct___205_s_obj_season_tally_create_season_tally_scripts(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___205_s_obj_season_tally_create_season_tally_scripts {
	var __yyg__is_constructor: boolean;
}
declare function gml_Script_s_obj_season_tally_create(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_maps_array_sort_week(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_get_human_opponent_sla_prefix(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_s_obj_season_tally_step(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_obj_season_tally_draw_gui(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_obj_season_tally_draw_gui_begin(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_draw_season_tally_header(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
): void;
declare function gml_GlobalScript_slog(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_slog(_inst: any, _other: any, argument0: any): any;
declare function gml_Script_slog2(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_slogf(
	_inst: any,
	_other: any,
	argument0: any,
): void;
declare function gml_Script_slog_map(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_Script_slog_struct(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): void;
declare function gml_GlobalScript_title_scripts(_inst: any, _other: any): void;
declare function gml_Script_s_title_goto(_inst: any, _other: any): void;
declare function gml_Script_s_title_create(_inst: any, _other: any): void;
declare function gml_Script_s_title_exit(_inst: any, _other: any): void;
declare function gml_Script_s_title_check_any_button(
	_inst: any,
	_other: any,
): boolean;
declare function gml_Script_s_title_create_image(_inst: any, _other: any): void;
declare function gml_Script_s_title_step_image(_inst: any, _other: any): void;
declare function gml_Script_s_title_draw_gui_image(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_f_almost_same(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): boolean;
declare function gml_Script_s_title_create_video(_inst: any, _other: any): void;
declare function gml_Script_s_title_async_social_video(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_title_do_video_end(_inst: any, _other: any): void;
declare function gml_Script_s_title_step_video(_inst: any, _other: any): void;
declare function gml_Script_s_title_draw_gui_video(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_title_create_fadeinout_splash(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_title_step_fadeinout_splash(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_title_draw_fadeinout_splash(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_poki_init(_inst: any, _other: any): void;
declare function gml_Script_poki_commercial_break(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_poki_rewarded_break(_inst: any, _other: any): void;
declare function gml_Script_poki_script_closure(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
): any;
declare function gml_Script_gmcallback_poki_closure(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
): void;
declare var gmcallback_poki_closure: typeof gml_Script_gmcallback_poki_closure;
declare function gml_Script_poki_get_team(_inst: any, _other: any): any;
declare function gml_Script_poki_set_team(
	_inst: any,
	_other: any,
	argument0: any,
): any;
declare function gml_Object_obj_ad_retrogoal_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_ad_retrogoal_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_appstore_btn_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_appstore_btn_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_appstore_btn_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_attribute_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_attribute_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_attribute_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_ball_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_ball_Alarm_0(_inst: any, _other: any): void;
declare function gml_Object_obj_ball_Alarm_1(_inst: any, _other: any): void;
declare function gml_Object_obj_ball_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_ball_Step_2(_inst: any, _other: any): void;
declare function gml_Object_obj_ball_Collision_obj_dummy(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_ball_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_ball_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_blank_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_blank_Destroy_0(_inst: any, _other: any): void;
declare function gml_Object_obj_blank_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_blank_Other_70(_inst: any, _other: any): void;
declare function gml_Object_obj_blank_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_blank_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_blank_Gesture_64(_inst: any, _other: any): void;
declare function gml_Object_obj_blank_Gesture_69(_inst: any, _other: any): void;
declare function gml_Object_obj_blank_Gesture_0(_inst: any, _other: any): void;
declare function gml_Object_obj_blank_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_bossprofile_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_bossprofile_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_bossprofile_KeyPress_90(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_boundary_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_boundary_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_boundary_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_coachcredit_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_coachcredit_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_coachcredit_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_coachcredit_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_coachcredit_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_defense_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_defense_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_defense_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_defense_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_morale_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_morale_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_morale_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_morale_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_morale_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_offense_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_offense_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_offense_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_offense_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_offense_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_recruitmentcredit_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_recruitmentcredit_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_recruitmentcredit_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_recruitmentcredit_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_recruitmentcredit_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_relationship_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_relationship_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_relationship_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_relationship_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_box_relationship_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_audible_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_audible_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_audible_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_audible_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_audible_Draw_75(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_audible_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_buy_Alarm_0(_inst: any, _other: any): void;
declare function gml_Object_obj_btn_buy_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_btn_buy_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_fieldgoal_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_fieldgoal_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_fieldgoal_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_fieldgoal_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_fieldgoal_Draw_75(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_fieldgoal_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_goforit_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_goforit_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_goforit_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_goforit_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_goforit_Draw_75(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_goforit_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_kickoff_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_kickoff_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_kickoff_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_kickoff_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_kickoff_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_pause_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_btn_pause_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_btn_pause_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_restore_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_restore_Alarm_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_restore_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_restore_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_skiptime_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_skiptime_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_skiptime_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_skiptime_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_skiptime_Draw_75(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_skiptime_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_store_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_store_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_btn_store_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_timeout_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_timeout_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_timeout_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_timeout_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_timeout_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_togglesim_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_togglesim_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_togglesim_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_togglesim_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_togglesim_Draw_75(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_btn_togglesim_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_9s_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_9s_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_button_9s_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_button_9s_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_9s_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_color_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_color_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_color_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_color_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_color_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_med_slim_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_med_slim_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_med_slim_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_med_slim_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_med_slim_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_med_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_med_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_med_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_med_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_med_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_small_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_small_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_sqr_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_sqr_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_team_Draw_75(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_team_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_thin_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_thin_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_button_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_button_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_button_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_button_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_button_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_camera_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_camera_Alarm_0(_inst: any, _other: any): void;
declare function gml_Object_obj_camera_Step_2(_inst: any, _other: any): void;
declare function gml_Object_obj_camera_Other_4(_inst: any, _other: any): void;
declare function gml_Object_obj_camera_Other_5(_inst: any, _other: any): void;
declare function gml_Object_obj_camera_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_checkbox_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_checkbox_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_checkbox_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_checkbox_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_checkbox012_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_checkbox012_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_checkbox012_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_checkbox012_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_choose_face_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_choose_team_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_choose_team_Other_4(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_choose_team_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_colbox_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_colbox_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_colbox_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_college_nfl_draft_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_college_nfl_draft_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_colpicker_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_colpicker_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_colpicker_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_conference_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_conference_Destroy_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_conference_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_conference_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_conference_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_controller_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_controller_Alarm_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_controller_Alarm_1(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_controller_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_controller_Step_2(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_controller_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_controller_Draw_72(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_controller_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_controller_KeyPress_13(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_controller_KeyPress_70(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_controller_KeyPress_80(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_controller_KeyPress_32(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_controller_KeyPress_84(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_controller_KeyPress_75(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_controller_Gesture_69(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_controller_Gesture_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_controller_Gesture_67(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_controller_Gesture_66(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_controller_Gesture_68(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_controller_Gesture_65(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_credit_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_credit_Destroy_0(_inst: any, _other: any): void;
declare function gml_Object_obj_credit_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_credit_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_credit_Draw_75(_inst: any, _other: any): void;
declare function gml_Object_obj_credit_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_details_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_details_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_difficulty_watermark_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_difficulty_watermark_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_division_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_division_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_division_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_division_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_draft_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_draft_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_dummy_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_dummy_Collision_obj_player(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_dummy_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_dummy_Draw_72(_inst: any, _other: any): void;
declare function gml_Object_obj_dummy_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_edit_team_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_edit_team_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_edit_team_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_exhibition_postmatch_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_exhibition_postmatch_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_facility_rehab_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_facility_stadium_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_facility_training_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_facility_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_facility_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_facility_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_fieldtxt_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_fieldtxt_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_fieldtxt_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_freeagents_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_freeagents_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_freeagents2_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_frontoffice_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Script____struct___206_gml_Object_obj_frontoffice_Create_0(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___206_gml_Object_obj_frontoffice_Create_0 {
	var __yyg__is_constructor: boolean;
}
declare function gml_Object_obj_goal_post_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_goal_post_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_goal_stand_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_goal_stand_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_halloffame_pr_rm_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_halloffame_rm_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_headshot_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_headshot_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_headshot_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_headshot_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_headshot_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_helmet_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_helmet_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_helmet_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_helmet_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_achievements_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_achievements_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_achievements_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_achievements_Gesture_69(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_achievements_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_btn_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_hof_btn_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_hof_btn_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_history_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_history_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_history_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_draw_history_line_gml_Object_obj_hof_history_Draw_64(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
): void;
declare function gml_Script_s_draw_history_lines_college_gml_Object_obj_hof_history_Draw_64(
	_inst: any,
	_other: any,
	argument0: any,
	argument1: any,
	argument2: any,
	argument3: any,
	argument4: any,
	argument5: any,
): number;
declare function gml_Object_obj_hof_history_Gesture_69(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_history_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_players_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_records_coach_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_records_conf_only_games_gml_Object_obj_hof_records_coach_Create_0(
	_inst: any,
	_other: any,
): any;
declare function gml_Script_s_records_conf_only_pct_gml_Object_obj_hof_records_coach_Create_0(
	_inst: any,
	_other: any,
): any;
declare function gml_Object_obj_hof_records_coach_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_records_coach_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_records_coach_Gesture_69(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_records_coach_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_records_player_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_records_player_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_records_player_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_records_player_Gesture_69(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_records_player_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_retrobowl_history_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_retrobowl_history_Destroy_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_retrobowl_history_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_retrobowl_history_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_retrobowl_history_Gesture_69(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_retrobowl_history_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_retrobowl_wins_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_hof_retrobowl_wins_franchise_create_gml_Object_obj_hof_retrobowl_wins_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_academic_gpa_limits_create_gml_Object_obj_hof_retrobowl_wins_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_retrobowl_wins_Destroy_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_hof_retrobowl_wins_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_hof_retrobowl_wins_franchise_draw_gml_Object_obj_hof_retrobowl_wins_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Script_s_academic_gpa_limits_draw_gml_Object_obj_hof_retrobowl_wins_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_home_Create_0(_inst: any, _other: any): void;
declare function gml_Script____struct___207_gml_Object_obj_home_Create_0(
	_inst: any,
	_other: any,
): void;
declare namespace gml_Script____struct___207_gml_Object_obj_home_Create_0 {
	var __yyg__is_constructor: boolean;
}
declare function gml_Object_obj_home_Alarm_0(_inst: any, _other: any): void;
declare function gml_Object_obj_home_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_home_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_info_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_info_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_info_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_info_PreCreate_0(_inst: any, _other: any): void;
declare function gml_Object_obj_infobox_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_infobox_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_infobox_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_input_box_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_input_box_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_input_box_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_input_box_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_intercept_point_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_kb_key_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_kb_key_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_kb_key_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_kb_key_Gesture_0(_inst: any, _other: any): void;
declare function gml_Object_obj_kongregate_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_league_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_league_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_life_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_link_btn_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_link_btn_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_link_btn_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_master_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_master_Alarm_0(_inst: any, _other: any): void;
declare function gml_Object_obj_master_Alarm_1(_inst: any, _other: any): void;
declare function gml_Object_obj_master_Alarm_2(_inst: any, _other: any): void;
declare function gml_Object_obj_master_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_master_Other_75(_inst: any, _other: any): void;
declare function gml_Object_obj_master_Other_4(_inst: any, _other: any): void;
declare function gml_Object_obj_master_KeyPress_67(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_master_KeyPress_83(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_master_KeyPress_48(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_master_KeyPress_66(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_master_KeyPress_78(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_master_KeyPress_68(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_master_KeyPress_82(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_match_msg_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_match_msg_Alarm_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_match_msg_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_match_msg_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_matchline_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_matchline_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_matchline_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_matchline_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_matchline_Gesture_69(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_matchline_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_matchob_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_matchob_CleanUp_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_meeting_player_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_meeting_player_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_messagebox_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_messagebox_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_messagebox_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_metaball_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_metaball_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_metaball_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_metaball_Draw_73(_inst: any, _other: any): void;
declare function gml_Object_obj_meter_coach_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_meter_coach_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_meter_condition_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_meter_condition_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_meter_conditionQB_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_meter_conditionQB_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_meter_fans_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_meter_fans_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_meter_fans_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_meter_happiness_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_meter_happiness_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_meter_lifestyle_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_meter_lifestyle_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_meter_starrating_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_meter_starrating_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_meter_team_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_meter_team_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_meter_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_meter_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_meter_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_msgbg_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_msgbg_Alarm_0(_inst: any, _other: any): void;
declare function gml_Object_obj_msgbg_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_msgbg_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_msgbg_KeyPress_27(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_msgbg_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_negotiate_num_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_negotiate_num_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_negotiate_num_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_negotiate_num_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_negotiate_num_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_news_dyn_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_news_dyn_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_news_dyn_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_news_dyn_KeyPress_27(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_news_dyn_CleanUp_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_news_dyn_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_notification_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_notification_Alarm_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_notification_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_notification_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_notification_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_nx_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_options_controls_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_options_exh_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_options_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_options_Alarm_0(_inst: any, _other: any): void;
declare function gml_Object_obj_options_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_options2_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_picks_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_picks_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_player_image_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_player_image_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_player_image_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_player_image_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_player_profile_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_player_profile_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_player_profile_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_player_profile_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_player_profile_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_player_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_player_Destroy_0(_inst: any, _other: any): void;
declare function gml_Object_obj_player_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_player_Step_2(_inst: any, _other: any): void;
declare function gml_Object_obj_player_Other_7(_inst: any, _other: any): void;
declare function gml_Object_obj_player_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_player_Draw_72(_inst: any, _other: any): void;
declare function gml_Object_obj_playerDF_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_playerOF_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_playerprofile_rm_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_playerprofile_rm_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_playerprofile_rm_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_playerprofile_rm_KeyPress_88(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_playerprofile_rm_KeyPress_73(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_playerprofile_rm_KeyPress_77(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_playerprofile_rm_KeyPress_68(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_playerprofile_rm_KeyPress_79(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_playerprofile_rm_KeyPress_82(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_playerprofile_rm_KeyPress_90(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_playoffs_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_playoffs_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_playoffs2_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_playoffs2_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_postmatch_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_postmatch_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_postmatch_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_prematch_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_prematch_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_raindrop_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_raindrop_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_raindrop_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_reddit_btn_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_reddit_btn_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_reddit_btn_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_rm_exhibition_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_rm_exhibition_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_rm_qb_contract_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_rm_qb_negotiate_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_rm_qb_postmatch_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_rm_qb_postmatch_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_rm_qb_shopping_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_rm_qb_shopping_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_roomtitle_special_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_roomtitle_special_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_roomtitle_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_roomtitle_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_roomtitle_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_roster_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_roster_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_salarycap_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_salarycap_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_salarycap_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_salarycap_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_scanlines_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_scanlines_Draw_75(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_scanlines_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_schedulebox_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_schedulebox_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_schedulebox_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_schedulebox_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_scoreboard_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_scoreboard_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_scoreboard_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_season_tally_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_season_tally_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_season_tally_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_season_tally_Draw_74(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_smallbox_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_smallbox_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_smallbox_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_snowflake_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_snowflake_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_snowflake_Draw_73(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_snowflake_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_splash_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_splash_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_staffprofile_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_staffprofile_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_staffprofile_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_staffprofile_KeyPress_88(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_staffprofile_KeyPress_90(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_stats_player_rm_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_stats_player_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_stats_player_Destroy_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_stats_player_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_stats_player_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_stats_player_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_store_async_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_store_async_Other_66(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_tag_kr_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_tag_kr_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_team_editor_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_team_editor_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_text_exp_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_text_exp_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_text_exp_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_text_watermark_Mouse_4(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_text_watermark_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_text_watermark_Draw_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_text_watermark_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_text_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_text_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_text_PreCreate_0(_inst: any, _other: any): void;
declare function gml_Object_obj_txt_credit_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_txt_credit_Step_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_txt_credit_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_uniform_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_uniform_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_uniform_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_uniform_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_vbox_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_vbox_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_vbox_PreCreate_0(_inst: any, _other: any): void;
declare function gml_Object_obj_viewhires_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_watermark_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_watermark_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_watermark_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_watermark_Draw_74(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_weather_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_weather_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_weather_Draw_64(_inst: any, _other: any): void;
declare function gml_Object_obj_weather_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_winners_Create_0(_inst: any, _other: any): void;
declare function gml_Object_obj_winners_Alarm_0(_inst: any, _other: any): void;
declare function gml_Object_obj_winners_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_winners_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_xp_player_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_xp_player_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_xp_player_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_xp_update_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_xp_update_Destroy_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_xp_update_Step_0(_inst: any, _other: any): void;
declare function gml_Object_obj_xp_update_Draw_0(_inst: any, _other: any): void;
declare function gml_Object_obj_xp_update_Draw_64(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_obj_xp_update_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_ui_selectable_Create_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_ui_selectable_Alarm_0(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_ui_selectable_Draw_75(
	_inst: any,
	_other: any,
): void;
declare function gml_Object_ui_selectable_PreCreate_0(
	_inst: any,
	_other: any,
): void;
declare function gmlInitGlobal(): void;
declare function gmlGameEndScripts(): void;
declare const kgml_GlobalScript__poki_gameplay_start = 100000;
declare const kgml_Script__poki_gameplay_start = 100001;
declare const kgml_GlobalScript__poki_gameplay_stop = 100002;
declare const kgml_Script__poki_gameplay_stop = 100003;
declare const kgml_GlobalScript__poki_is_mobile = 100004;
declare const kgml_Script__poki_is_mobile = 100005;
declare const kgml_GlobalScript__poki_rewarded_ad = 100006;
declare const kgml_Script__poki_rewarded_ad = 100007;
declare const kgml_Script_browser_rewarded_ad_success = 100008;
declare const kgml_GlobalScript_ads_scripts = 100009;
declare const kgml_Script_s_interstitial_create = 100010;
declare const kgml_Script_s_interstitial_step = 100011;
declare const kgml_Script_anon_2053_adpool_ads_scripts = 100012;
declare const kgml_Script_anon_2256_adpool_ads_scripts = 100013;
declare const kgml_Script_anon_2498_adpool_ads_scripts = 100014;
declare const kgml_Script_anon_2663_adpool_ads_scripts = 100015;
declare const kgml_Script_adpool = 100016;
declare const kgml_Script_anon_3037_ad_ads_scripts = 100017;
declare const kgml_Script_ad = 100018;
declare const kgml_GlobalScript_age_scripts = 100019;
declare const kgml_Script_s_rookie_age_internal = 100020;
declare const kgml_Script_s_max_age_player_internal = 100021;
declare const kgml_Script_s_max_age_qb_internal = 100022;
declare const kgml_Script_s_get_max_age = 100023;
declare const kgml_GlobalScript_btn_click_AddSkill = 100024;
declare const kgml_Script_btn_click_AddSkill = 100025;
declare const kgml_GlobalScript_btn_click_AddSpeed = 100026;
declare const kgml_Script_btn_click_AddSpeed = 100027;
declare const kgml_GlobalScript_btn_click_AddStamina = 100028;
declare const kgml_Script_btn_click_AddStamina = 100029;
declare const kgml_GlobalScript_btn_click_AddStrength = 100030;
declare const kgml_Script_btn_click_AddStrength = 100031;
declare const kgml_GlobalScript_btn_click_BallStyle = 100032;
declare const kgml_Script_btn_click_BallStyle = 100033;
declare const kgml_GlobalScript_btn_click_BengRams = 100034;
declare const kgml_Script_btn_click_BengRams = 100035;
declare const kgml_Script_s_update_btn_bengrams = 100036;
declare const kgml_Script_s_set_ui_colours = 100037;
declare const kgml_GlobalScript_btn_click_Boost_Condition = 100038;
declare const kgml_Script_btn_click_Boost_Condition = 100039;
declare const kgml_GlobalScript_btn_click_Boost_Morale = 100040;
declare const kgml_Script_btn_click_Boost_Morale = 100041;
declare const kgml_GlobalScript_btn_click_Boost_Salary_Cap = 100042;
declare const kgml_Script_btn_click_Boost_Salary_Cap = 100043;
declare const kgml_GlobalScript_btn_click_Change_Favourite = 100044;
declare const kgml_Script____struct___0_btn_click_Change_Favourite_btn_click_Change_Favourite = 100045;
declare const kgml_Script_btn_click_Change_Favourite = 100046;
declare const kgml_GlobalScript_btn_click_ChooseAFC = 100047;
declare const kgml_Script_btn_click_ChooseAFC = 100048;
declare const kgml_GlobalScript_btn_click_ChooseFace = 100049;
declare const kgml_Script_btn_click_ChooseFace = 100050;
declare const kgml_Script_s_goto_rm_choose_face = 100051;
declare const kgml_GlobalScript_btn_click_ChooseFaceDone = 100052;
declare const kgml_Script_btn_click_ChooseFaceDone = 100053;
declare const kgml_Script_btn_click_cancel_chooseface = 100054;
declare const kgml_GlobalScript_btn_click_ChooseFaceNext = 100055;
declare const kgml_Script_btn_click_ChooseFaceNext = 100056;
declare const kgml_GlobalScript_btn_click_ChooseFacePrev = 100057;
declare const kgml_Script_btn_click_ChooseFacePrev = 100058;
declare const kgml_GlobalScript_btn_click_ChooseNFC = 100059;
declare const kgml_Script_btn_click_ChooseNFC = 100060;
declare const kgml_GlobalScript_btn_click_ChooseReject = 100061;
declare const kgml_Script_btn_click_ChooseReject_loading = 100062;
declare const kgml_Script_btn_click_ChooseReject = 100063;
declare const kgml_GlobalScript_btn_click_ChooseTeam = 100064;
declare const kgml_Script_btn_click_ChooseTeam = 100065;
declare const kgml_Script_btn_click_ChooseTeamExhibition = 100066;
declare const kgml_Script_btn_click_ChoosePlayerExhibition = 100067;
declare const kgml_Script_btn_click_ChoosePlayerExhibition_confirm = 100068;
declare const kgml_Script_btn_click_ChoosePlayerExhibition_cancel = 100069;
declare const kgml_GlobalScript_btn_click_ChooseTeamNew = 100070;
declare const kgml_Script_btn_click_ChooseTeamNew = 100071;
declare const kgml_Script_btn_click_qb_mode_ChooseTeamNew = 100072;
declare const kgml_GlobalScript_btn_click_Continue = 100073;
declare const kgml_Script_btn_click_Continue = 100074;
declare const kgml_Script_btn_click_SimGame = 100075;
declare const kgml_GlobalScript_btn_click_DeleteSlot1 = 100076;
declare const kgml_Script_btn_click_DeleteSlot1 = 100077;
declare const kgml_GlobalScript_btn_click_DeleteSlot2 = 100078;
declare const kgml_Script_btn_click_DeleteSlot2 = 100079;
declare const kgml_GlobalScript_btn_click_DeleteSlot3 = 100080;
declare const kgml_Script_btn_click_DeleteSlot3 = 100081;
declare const kgml_GlobalScript_btn_click_DeleteSlot4 = 100082;
declare const kgml_Script_btn_click_DeleteSlot4 = 100083;
declare const kgml_GlobalScript_btn_click_DeleteSlot5 = 100084;
declare const kgml_Script_btn_click_DeleteSlot5 = 100085;
declare const kgml_GlobalScript_btn_click_Details_Back = 100086;
declare const kgml_Script_btn_click_Details_Back = 100087;
declare const kgml_GlobalScript_btn_click_Details_Continue = 100088;
declare const kgml_Script_btn_click_Details_Continue = 100089;
declare const kgml_GlobalScript_btn_click_DraftDone = 100090;
declare const kgml_Script_btn_click_DraftDone = 100091;
declare const kgml_GlobalScript_btn_click_DraftNext = 100092;
declare const kgml_Script_btn_click_DraftNext = 100093;
declare const kgml_GlobalScript_btn_click_DraftPrev = 100094;
declare const kgml_Script_btn_click_DraftPrev = 100095;
declare const kgml_GlobalScript_btn_click_edit_conf1 = 100096;
declare const kgml_Script_btn_click_edit_conf1 = 100097;
declare const kgml_GlobalScript_btn_click_edit_conf2 = 100098;
declare const kgml_Script_btn_click_edit_conf2 = 100099;
declare const kgml_GlobalScript_btn_click_edit_div1 = 100100;
declare const kgml_Script_btn_click_edit_div1 = 100101;
declare const kgml_GlobalScript_btn_click_edit_div2 = 100102;
declare const kgml_Script_btn_click_edit_div2 = 100103;
declare const kgml_GlobalScript_btn_click_edit_div3 = 100104;
declare const kgml_Script_btn_click_edit_div3 = 100105;
declare const kgml_GlobalScript_btn_click_edit_div4 = 100106;
declare const kgml_Script_btn_click_edit_div4 = 100107;
declare const kgml_GlobalScript_btn_click_EditAFC = 100108;
declare const kgml_Script_btn_click_EditAFC = 100109;
declare const kgml_GlobalScript_btn_click_EditCopySlotA = 100110;
declare const kgml_Script_btn_click_EditCopySlotA = 100111;
declare const kgml_GlobalScript_btn_click_EditCopySlotB = 100112;
declare const kgml_Script_btn_click_EditCopySlotB = 100113;
declare const kgml_GlobalScript_btn_click_EditCopySlotC = 100114;
declare const kgml_Script_btn_click_EditCopySlotC = 100115;
declare const kgml_GlobalScript_btn_click_EditCopySlotD = 100116;
declare const kgml_Script_btn_click_EditCopySlotD = 100117;
declare const kgml_GlobalScript_btn_click_EditCopySlotE = 100118;
declare const kgml_Script_btn_click_EditCopySlotE = 100119;
declare const kgml_GlobalScript_btn_click_EditEndzone = 100120;
declare const kgml_Script_btn_click_EditEndzone = 100121;
declare const kgml_GlobalScript_btn_click_EditHelmet = 100122;
declare const kgml_Script_btn_click_EditHelmet = 100123;
declare const kgml_GlobalScript_btn_click_EditLogo = 100124;
declare const kgml_Script_btn_click_EditLogo = 100125;
declare const kgml_GlobalScript_btn_click_EditNFC = 100126;
declare const kgml_Script_btn_click_EditNFC = 100127;
declare const kgml_GlobalScript_btn_click_EditPants = 100128;
declare const kgml_Script_btn_click_EditPants = 100129;
declare const kgml_GlobalScript_btn_click_EditProfile = 100130;
declare const kgml_Script_btn_click_EditProfile = 100131;
declare const kgml_GlobalScript_btn_click_EditShirt = 100132;
declare const kgml_Script_btn_click_EditShirt = 100133;
declare const kgml_GlobalScript_btn_click_EditSleeve = 100134;
declare const kgml_Script_btn_click_EditSleeve = 100135;
declare const kgml_GlobalScript_btn_click_EditSocks1 = 100136;
declare const kgml_Script_btn_click_EditSocks1 = 100137;
declare const kgml_GlobalScript_btn_click_EditSocks2 = 100138;
declare const kgml_Script_btn_click_EditSocks2 = 100139;
declare const kgml_GlobalScript_btn_click_EditStripe = 100140;
declare const kgml_Script_btn_click_EditStripe = 100141;
declare const kgml_GlobalScript_btn_click_EditTeam = 100142;
declare const kgml_Script_btn_click_EditTeam = 100143;
declare const kgml_GlobalScript_btn_click_external_links = 100144;
declare const kgml_Script_btn_click_BuyMerch = 100145;
declare const kgml_Script_btn_click_MusicBy = 100146;
declare const kgml_Script_btn_click_YouTube = 100147;
declare const kgml_Script_btn_click_RecordBook = 100148;
declare const kgml_Script_btn_click_Leagues = 100149;
declare const kgml_Script_btn_click_ad_NSS = 100150;
declare const kgml_Script_btn_click_ad_NSM = 100151;
declare const kgml_Script_btn_click_ad_RG = 100152;
declare const kgml_Script_btn_click_ad_NSB = 100153;
declare const kgml_Script_btn_click_ad_RB = 100154;
declare const kgml_Script_btn_click_ad_RBC = 100155;
declare const kgml_Script_btn_click_ad_NSGP = 100156;
declare const kgml_Script_btn_click_NewStarGames = 100157;
declare const kgml_GlobalScript_btn_click_FacilityStadium = 100158;
declare const kgml_Script_btn_click_FacilityStadium = 100159;
declare const kgml_GlobalScript_btn_click_FacilityStaff = 100160;
declare const kgml_Script_btn_click_FacilityStaff = 100161;
declare const kgml_GlobalScript_btn_click_FacilityTraining = 100162;
declare const kgml_Script_btn_click_FacilityTraining = 100163;
declare const kgml_GlobalScript_btn_click_FieldGoal = 100164;
declare const kgml_Script_btn_click_FieldGoal = 100165;
declare const kgml_GlobalScript_btn_click_FreeAgents = 100166;
declare const kgml_Script_btn_click_FreeAgents = 100167;
declare const kgml_GlobalScript_btn_click_FreeAgents2 = 100168;
declare const kgml_Script_btn_click_FreeAgents2 = 100169;
declare const kgml_GlobalScript_btn_click_FreeAgentsBack = 100170;
declare const kgml_Script_btn_click_FreeAgentsBack = 100171;
declare const kgml_GlobalScript_btn_click_FreeAgentsNext = 100172;
declare const kgml_Script_btn_click_FreeAgentsNext = 100173;
declare const kgml_GlobalScript_btn_click_FreeAgentsPrev = 100174;
declare const kgml_Script_btn_click_FreeAgentsPrev = 100175;
declare const kgml_GlobalScript_btn_click_FreeAgentsReset = 100176;
declare const kgml_Script_btn_click_FreeAgentsReset = 100177;
declare const kgml_GlobalScript_btn_click_FrontOffice = 100178;
declare const kgml_Script_btn_click_FrontOffice = 100179;
declare const kgml_GlobalScript_btn_click_GenerateCharacter = 100180;
declare const kgml_Script_btn_click_GenerateCharacter = 100181;
declare const kgml_GlobalScript_btn_click_HallOfFame = 100182;
declare const kgml_Script_btn_click_HallOfFame = 100183;
declare const kgml_GlobalScript_btn_click_HireStaff = 100184;
declare const kgml_Script_btn_click_HireStaff = 100185;
declare const kgml_GlobalScript_btn_click_HOF_Coach = 100186;
declare const kgml_Script_btn_click_HOF_Coach = 100187;
declare const kgml_GlobalScript_btn_click_HOF_player_records = 100188;
declare const kgml_Script_btn_click_HOF_player_records = 100189;
declare const kgml_GlobalScript_btn_click_HOF_players = 100190;
declare const kgml_Script_btn_click_HOF_players = 100191;
declare const kgml_GlobalScript_btn_click_HOF_Select = 100192;
declare const kgml_Script_btn_click_HOF_Select = 100193;
declare const kgml_GlobalScript_btn_click_HofNext = 100194;
declare const kgml_Script_btn_click_HofNext = 100195;
declare const kgml_GlobalScript_btn_click_HofPrev = 100196;
declare const kgml_Script_btn_click_HofPrev = 100197;
declare const kgml_GlobalScript_btn_click_Home = 100198;
declare const kgml_Script_btn_click_Home = 100199;
declare const kgml_Script_btn_click_Play1 = 100200;
declare const kgml_Script_btn_click_Options_Exit = 100201;
declare const kgml_Script_btn_click_Home_rm_winners = 100202;
declare const kgml_GlobalScript_btn_click_InputEndzone = 100203;
declare const kgml_Script_btn_click_InputEndzone = 100204;
declare const kgml_GlobalScript_btn_click_InputHelmet = 100205;
declare const kgml_Script_btn_click_InputHelmet = 100206;
declare const kgml_GlobalScript_btn_click_InputLogo = 100207;
declare const kgml_Script_btn_click_InputLogo = 100208;
declare const kgml_GlobalScript_btn_click_InputPants = 100209;
declare const kgml_Script_btn_click_InputPants = 100210;
declare const kgml_GlobalScript_btn_click_InputShirt = 100211;
declare const kgml_Script_btn_click_InputShirt = 100212;
declare const kgml_GlobalScript_btn_click_InputSleeve = 100213;
declare const kgml_Script_btn_click_InputSleeve = 100214;
declare const kgml_GlobalScript_btn_click_InputSocks1 = 100215;
declare const kgml_Script_btn_click_InputSocks1 = 100216;
declare const kgml_GlobalScript_btn_click_InputSocks2 = 100217;
declare const kgml_Script_btn_click_InputSocks2 = 100218;
declare const kgml_GlobalScript_btn_click_InputStripe = 100219;
declare const kgml_Script_btn_click_InputStripe = 100220;
declare const kgml_GlobalScript_btn_click_InvertedThrowing = 100221;
declare const kgml_Script_btn_click_InvertedThrowing = 100222;
declare const kgml_GlobalScript_btn_click_Kit1 = 100223;
declare const kgml_Script_btn_click_Kit1 = 100224;
declare const kgml_GlobalScript_btn_click_Kit2 = 100225;
declare const kgml_Script_btn_click_Kit2 = 100226;
declare const kgml_GlobalScript_btn_click_Kit3 = 100227;
declare const kgml_Script_btn_click_Kit3 = 100228;
declare const kgml_GlobalScript_btn_click_Kit4 = 100229;
declare const kgml_Script_btn_click_Kit4 = 100230;
declare const kgml_GlobalScript_btn_click_KR_Select = 100231;
declare const kgml_Script_btn_click_KR_Select = 100232;
declare const kgml_GlobalScript_btn_click_League_Back = 100233;
declare const kgml_Script_btn_click_League_Back = 100234;
declare const kgml_GlobalScript_btn_click_League = 100235;
declare const kgml_Script____struct___1_btn_click_League_btn_click_League = 100236;
declare const kgml_Script_btn_click_League = 100237;
declare const kgml_GlobalScript_btn_click_LeagueAFC = 100238;
declare const kgml_Script_btn_click_LeagueAFC = 100239;
declare const kgml_GlobalScript_btn_click_LeagueMode = 100240;
declare const kgml_Script_btn_click_LeagueMode = 100241;
declare const kgml_GlobalScript_btn_click_LeagueNFC = 100242;
declare const kgml_Script_btn_click_LeagueNFC = 100243;
declare const kgml_GlobalScript_btn_click_LeaguePanel = 100244;
declare const kgml_Script_btn_click_LeaguePanel = 100245;
declare const kgml_GlobalScript_btn_click_LeagueReportNext = 100246;
declare const kgml_Script_btn_click_LeagueReportNext = 100247;
declare const kgml_GlobalScript_btn_click_LeagueReportPrev = 100248;
declare const kgml_Script_btn_click_LeagueReportPrev = 100249;
declare const kgml_GlobalScript_btn_click_LeagueSchedule = 100250;
declare const kgml_Script_btn_click_LeagueSchedule = 100251;
declare const kgml_GlobalScript_btn_click_Meeting_Condition = 100252;
declare const kgml_Script_btn_click_Meeting_Condition = 100253;
declare const kgml_GlobalScript_btn_click_Meeting_ExtendContract = 100254;
declare const kgml_Script_btn_click_Meeting_ExtendContract = 100255;
declare const kgml_GlobalScript_btn_click_Meeting_LevelUp = 100256;
declare const kgml_Script_btn_click_Meeting_LevelUp = 100257;
declare const kgml_GlobalScript_btn_click_Meeting_Morale = 100258;
declare const kgml_Script_btn_click_Meeting_Morale = 100259;
declare const kgml_GlobalScript_btn_click_MeetingNext = 100260;
declare const kgml_Script_btn_click_MeetingNext = 100261;
declare const kgml_GlobalScript_btn_click_MeetingPrev = 100262;
declare const kgml_Script_btn_click_MeetingPrev = 100263;
declare const kgml_GlobalScript_btn_click_Options = 100264;
declare const kgml_Script_btn_click_Options = 100265;
declare const kgml_GlobalScript_btn_click_OptionsAutoRun = 100266;
declare const kgml_Script_btn_click_OptionsAutoRun = 100267;
declare const kgml_GlobalScript_btn_click_OptionsControls = 100268;
declare const kgml_Script_btn_click_OptionsControls = 100269;
declare const kgml_Script_btn_click_OptionsControls1 = 100270;
declare const kgml_Script_btn_click_OptionsControls2 = 100271;
declare const kgml_Script_btn_click_OptionsControls3 = 100272;
declare const kgml_Script_s_update_control_screen = 100273;
declare const kgml_GlobalScript_btn_click_OptionsDifficulty = 100274;
declare const kgml_Script_btn_click_OptionsDifficulty = 100275;
declare const kgml_GlobalScript_btn_click_OptionsDriveBoth = 100276;
declare const kgml_Script_btn_click_OptionsDriveBoth = 100277;
declare const kgml_GlobalScript_btn_click_OptionsDriveLeft = 100278;
declare const kgml_Script_btn_click_OptionsDriveLeft = 100279;
declare const kgml_Script_btn_click_OptionsDriveLeft_Exh = 100280;
declare const kgml_GlobalScript_btn_click_OptionsDriveRight = 100281;
declare const kgml_Script_btn_click_OptionsDriveRight = 100282;
declare const kgml_GlobalScript_btn_click_OptionsKickReturns = 100283;
declare const kgml_Script_btn_click_OptionsKickReturns = 100284;
declare const kgml_Script_btn_click_OptionsKickReturns_Exh = 100285;
declare const kgml_GlobalScript_btn_click_OptionsMatchLength = 100286;
declare const kgml_Script_btn_click_OptionsMatchLength = 100287;
declare const kgml_Script_btn_click_OptionsMatchLength_Exh = 100288;
declare const kgml_GlobalScript_btn_click_OptionsNewGame = 100289;
declare const kgml_Script_btn_click_OptionsNewGame = 100290;
declare const kgml_GlobalScript_btn_click_OptionsReplays = 100291;
declare const kgml_Script_btn_click_OptionsReplays = 100292;
declare const kgml_GlobalScript_btn_click_OptionsSalaryCap = 100293;
declare const kgml_Script_btn_click_OptionsSalaryCap = 100294;
declare const kgml_Script_salary_cap_toggle_roster_size = 100295;
declare const kgml_Script_s_get_roster_cap = 100296;
declare const kgml_GlobalScript_btn_click_OptionsScanlines = 100297;
declare const kgml_Script_btn_click_OptionsScanlines = 100298;
declare const kgml_GlobalScript_btn_click_OptionsSoundFX = 100299;
declare const kgml_Script_btn_click_OptionsSoundFX = 100300;
declare const kgml_GlobalScript_btn_click_OptionsTeamEditor = 100301;
declare const kgml_Script_btn_click_OptionsTeamEditor = 100302;
declare const kgml_GlobalScript_btn_click_OptionsWeather = 100303;
declare const kgml_Script_btn_click_OptionsWeather = 100304;
declare const kgml_Script_btn_click_OptionsWeather_Exh = 100305;
declare const kgml_GlobalScript_btn_click_OptionsZoom = 100306;
declare const kgml_Script_btn_click_OptionsZoom = 100307;
declare const kgml_GlobalScript_btn_click_Passing = 100308;
declare const kgml_Script_btn_click_Passing = 100309;
declare const kgml_GlobalScript_btn_click_PlayerProfile_Back = 100310;
declare const kgml_Script_btn_click_PlayerProfile_Back = 100311;
declare const kgml_GlobalScript_btn_click_PlayerProfile = 100312;
declare const kgml_Script_btn_click_PlayerProfile = 100313;
declare const kgml_GlobalScript_btn_click_PlayOffs_Back = 100314;
declare const kgml_Script_btn_click_PlayOffs_Back = 100315;
declare const kgml_GlobalScript_btn_click_PlayOffs = 100316;
declare const kgml_Script_btn_click_PlayOffs = 100317;
declare const kgml_GlobalScript_btn_click_PlayOffsPlay = 100318;
declare const kgml_Script_btn_click_PlayOffsPlay = 100319;
declare const kgml_GlobalScript_btn_click_PlayOffsSkip = 100320;
declare const kgml_Script_btn_click_PlayOffsSkip = 100321;
declare const kgml_GlobalScript_btn_click_Profile_Back = 100322;
declare const kgml_Script_btn_click_Profile_Back = 100323;
declare const kgml_GlobalScript_btn_click_Profile_Cut = 100324;
declare const kgml_Script_btn_click_Profile_Cut = 100325;
declare const kgml_Script_btn_click_Profile_JefeBoost = 100326;
declare const kgml_Script_btn_click_Profile_JefeBoostAge = 100327;
declare const kgml_Script_btn_click_Profile_JefeBoostAge_Ancient = 100328;
declare const kgml_Script_btn_click_Profile_JefeBoostAge_Max = 100329;
declare const kgml_Script_btn_click_Profile_JefeBoostStats = 100330;
declare const kgml_Script_s_JefeBoost_Skill = 100331;
declare const kgml_Script_s_JefeBoost_Speed = 100332;
declare const kgml_Script_s_JefeBoost_Strength = 100333;
declare const kgml_Script_s_JefeBoost_Stamina = 100334;
declare const kgml_Script_s_JefeBoost = 100335;
declare const kgml_Script_btn_click_Profile_JefeOutOfRetirement = 100336;
declare const kgml_Script_s_JefeOutOfRetirement = 100337;
declare const kgml_GlobalScript_btn_click_Profile_Not_Interested = 100338;
declare const kgml_Script_btn_click_Profile_Not_Interested = 100339;
declare const kgml_GlobalScript_btn_click_Profile_Pick = 100340;
declare const kgml_Script_btn_click_Profile_Pick = 100341;
declare const kgml_GlobalScript_btn_click_Profile_Rest = 100342;
declare const kgml_Script_btn_click_Profile_Rest = 100343;
declare const kgml_GlobalScript_btn_click_Profile_ScoutPlayer = 100344;
declare const kgml_Script_btn_click_Profile_ScoutPlayer = 100345;
declare const kgml_GlobalScript_btn_click_Profile_Stats = 100346;
declare const kgml_Script_btn_click_Profile_Stats = 100347;
declare const kgml_GlobalScript_btn_click_Profile_Trade = 100348;
declare const kgml_Script_btn_click_Profile_Trade = 100349;
declare const kgml_GlobalScript_btn_click_Profile = 100350;
declare const kgml_Script_btn_click_Profile = 100351;
declare const kgml_GlobalScript_btn_click_ProfileNext = 100352;
declare const kgml_Script_btn_click_ProfileNext = 100353;
declare const kgml_GlobalScript_btn_click_ProfilePrev = 100354;
declare const kgml_Script_btn_click_ProfilePrev = 100355;
declare const kgml_GlobalScript_btn_click_qb_items = 100356;
declare const kgml_Script_btn_click_qb_items = 100357;
declare const kgml_Script_btn_click_qb_vehicles = 100358;
declare const kgml_Script_btn_click_qb_property = 100359;
declare const kgml_GlobalScript_btn_click_qb_training = 100360;
declare const kgml_Script_btn_click_qb_training = 100361;
declare const kgml_Script_s_do_qb_training = 100362;
declare const kgml_GlobalScript_btn_click_Records_Reset = 100363;
declare const kgml_Script_btn_click_Records_Reset = 100364;
declare const kgml_GlobalScript_btn_click_RestAll = 100365;
declare const kgml_Script_btn_click_RestAll = 100366;
declare const kgml_GlobalScript_btn_click_RestoreAllTeams = 100367;
declare const kgml_Script_btn_click_RestoreAllTeams = 100368;
declare const kgml_GlobalScript_btn_click_Roster_Back = 100369;
declare const kgml_Script_btn_click_Roster_Back = 100370;
declare const kgml_Script_btn_click_Profile_Back_To_Draft = 100371;
declare const kgml_Script_btn_click_Profile_Back_To_Draft_Continue = 100372;
declare const kgml_GlobalScript_btn_click_Roster_List = 100373;
declare const kgml_Script_btn_click_Roster_List = 100374;
declare const kgml_GlobalScript_btn_click_Roster = 100375;
declare const kgml_Script_btn_click_Roster = 100376;
declare const kgml_GlobalScript_btn_click_Running = 100377;
declare const kgml_Script_btn_click_Running = 100378;
declare const kgml_GlobalScript_btn_click_ScheduleNext = 100379;
declare const kgml_Script_btn_click_ScheduleNext = 100380;
declare const kgml_GlobalScript_btn_click_SchedulePrev = 100381;
declare const kgml_Script_btn_click_SchedulePrev = 100382;
declare const kgml_GlobalScript_btn_click_SeasonReview = 100383;
declare const kgml_Script_btn_click_SeasonReview = 100384;
declare const kgml_GlobalScript_btn_click_SeasonReviewBack = 100385;
declare const kgml_Script____struct___2_btn_click_SeasonReviewBack_btn_click_SeasonReviewBack = 100386;
declare const kgml_Script_btn_click_SeasonReviewBack = 100387;
declare const kgml_GlobalScript_btn_click_StaffProfile = 100388;
declare const kgml_Script_btn_click_StaffProfile = 100389;
declare const kgml_GlobalScript_btn_click_StaffProfileBack = 100390;
declare const kgml_Script_btn_click_StaffProfileBack = 100391;
declare const kgml_GlobalScript_btn_click_StaffProfileNext = 100392;
declare const kgml_Script_btn_click_StaffProfileNext = 100393;
declare const kgml_GlobalScript_btn_click_StaffProfilePrev = 100394;
declare const kgml_Script_btn_click_StaffProfilePrev = 100395;
declare const kgml_GlobalScript_btn_click_StatsNext = 100396;
declare const kgml_Script_btn_click_StatsNext = 100397;
declare const kgml_GlobalScript_btn_click_StatsPrev = 100398;
declare const kgml_Script_btn_click_StatsPrev = 100399;
declare const kgml_GlobalScript_btn_click_StatsView1 = 100400;
declare const kgml_Script_btn_click_StatsView1 = 100401;
declare const kgml_GlobalScript_btn_click_StatsView2 = 100402;
declare const kgml_Script_btn_click_StatsView2 = 100403;
declare const kgml_GlobalScript_btn_click_TeamEditCancel = 100404;
declare const kgml_Script_btn_click_TeamEditCancel = 100405;
declare const kgml_GlobalScript_btn_click_TeamEditDone = 100406;
declare const kgml_Script_btn_click_TeamEditDone = 100407;
declare const kgml_GlobalScript_btn_click_TeamEditMore = 100408;
declare const kgml_Script_btn_click_TeamEditMore = 100409;
declare const kgml_GlobalScript_btn_click_TeamEditMoreDone = 100410;
declare const kgml_Script_btn_click_TeamEditMoreDone = 100411;
declare const kgml_GlobalScript_btn_click_TeamEditRestore = 100412;
declare const kgml_Script_btn_click_TeamEditRestore = 100413;
declare const kgml_GlobalScript_btn_click_Training = 100414;
declare const kgml_Script_btn_click_Training = 100415;
declare const kgml_GlobalScript_btn_click_TrainingHard = 100416;
declare const kgml_Script_btn_click_TrainingHard = 100417;
declare const kgml_GlobalScript_btn_click_TrainingLight = 100418;
declare const kgml_Script_btn_click_TrainingLight = 100419;
declare const kgml_GlobalScript_btn_click_TrainingNormal = 100420;
declare const kgml_Script_btn_click_TrainingNormal = 100421;
declare const kgml_GlobalScript_btn_click_Uniform_Away = 100422;
declare const kgml_Script_btn_click_Uniform_Away = 100423;
declare const kgml_GlobalScript_btn_click_Uniform_Home = 100424;
declare const kgml_Script_btn_click_Uniform_Home = 100425;
declare const kgml_GlobalScript_btn_click_Uniforms = 100426;
declare const kgml_Script_btn_click_Uniforms = 100427;
declare const kgml_GlobalScript_btn_click_ViewHires = 100428;
declare const kgml_Script_btn_click_ViewHires = 100429;
declare const kgml_GlobalScript_btn_click_ViewHiresBack = 100430;
declare const kgml_Script_btn_click_ViewHiresBack = 100431;
declare const kgml_GlobalScript_btn_click_ViewHiresProfile = 100432;
declare const kgml_Script_btn_click_ViewHiresProfile = 100433;
declare const kgml_GlobalScript_btn_click_ViewHiresReset = 100434;
declare const kgml_Script_btn_click_ViewHiresReset = 100435;
declare const kgml_GlobalScript_btn_click_XP_Back = 100436;
declare const kgml_Script_btn_click_XP_Back = 100437;
declare const kgml_GlobalScript_btn_click_XP_Continue = 100438;
declare const kgml_Script_btn_click_XP_Continue = 100439;
declare const kgml_GlobalScript_btn_match_kick = 100440;
declare const kgml_Script_btn_match_kick = 100441;
declare const kgml_Script_btn_match_goforit = 100442;
declare const kgml_Script_btn_match_gofor1pt = 100443;
declare const kgml_GlobalScript_btn_meet_teammate = 100444;
declare const kgml_Script_btn_meet_teammate = 100445;
declare const kgml_Script_s_confirm_teammate_meeting = 100446;
declare const kgml_GlobalScript_btn_response_1pt = 100447;
declare const kgml_Script_btn_response_1pt = 100448;
declare const kgml_GlobalScript_btn_response_2pt = 100449;
declare const kgml_Script_btn_response_2pt = 100450;
declare const kgml_GlobalScript_btn_response_boost_condition = 100451;
declare const kgml_Script_btn_response_boost_condition = 100452;
declare const kgml_GlobalScript_btn_response_boost_morale = 100453;
declare const kgml_Script_btn_response_boost_morale = 100454;
declare const kgml_GlobalScript_btn_response_boost_salary_cap = 100455;
declare const kgml_Script_btn_response_boost_salary_cap = 100456;
declare const kgml_GlobalScript_btn_response_clearfreeagents = 100457;
declare const kgml_Script_btn_response_clearfreeagents = 100458;
declare const kgml_GlobalScript_btn_response_cointoss_kick = 100459;
declare const kgml_Script_btn_response_cointoss_kick = 100460;
declare const kgml_GlobalScript_btn_response_cointoss_receive = 100461;
declare const kgml_Script_btn_response_cointoss_receive = 100462;
declare const kgml_GlobalScript_btn_response_confirm_new_team = 100463;
declare const kgml_Script_btn_response_confirm_new_team_loading = 100464;
declare const kgml_Script_btn_response_confirm_new_team = 100465;
declare const kgml_GlobalScript_btn_response_cut_player_yes = 100466;
declare const kgml_Script_btn_response_cut_player_yes = 100467;
declare const kgml_GlobalScript_btn_response_deletegame1 = 100468;
declare const kgml_Script_btn_response_deletegame1 = 100469;
declare const kgml_GlobalScript_btn_response_deletegame2 = 100470;
declare const kgml_Script_btn_response_deletegame2 = 100471;
declare const kgml_GlobalScript_btn_response_deletegame3 = 100472;
declare const kgml_Script_btn_response_deletegame3 = 100473;
declare const kgml_GlobalScript_btn_response_deletegame4 = 100474;
declare const kgml_Script_btn_response_deletegame4 = 100475;
declare const kgml_GlobalScript_btn_response_deletegame5 = 100476;
declare const kgml_Script_btn_response_deletegame5 = 100477;
declare const kgml_GlobalScript_btn_response_fg_yes = 100478;
declare const kgml_Script_btn_response_fg_yes = 100479;
declare const kgml_GlobalScript_btn_response_hirestaff = 100480;
declare const kgml_Script_btn_response_hirestaff = 100481;
declare const kgml_GlobalScript_btn_response_hof_select = 100482;
declare const kgml_Script_btn_response_hof_select = 100483;
declare const kgml_GlobalScript_btn_response_in_trade_player_yes = 100484;
declare const kgml_Script_btn_response_in_trade_player_yes = 100485;
declare const kgml_GlobalScript_btn_response_kick_no = 100486;
declare const kgml_Script_btn_response_kick_no = 100487;
declare const kgml_GlobalScript_btn_response_newgame_commit = 100488;
declare const kgml_Script_btn_response_newgame_commit = 100489;
declare const kgml_GlobalScript_btn_response_onsidekick_no = 100490;
declare const kgml_Script_btn_response_onsidekick_no = 100491;
declare const kgml_GlobalScript_btn_response_onsidekick_yes = 100492;
declare const kgml_Script_btn_response_onsidekick_yes = 100493;
declare const kgml_GlobalScript_btn_response_out_trade_player_no = 100494;
declare const kgml_Script_btn_response_out_trade_player_no = 100495;
declare const kgml_GlobalScript_btn_response_out_trade_player_yes = 100496;
declare const kgml_Script_btn_response_out_trade_player_yes = 100497;
declare const kgml_GlobalScript_btn_response_pick_player_yes = 100498;
declare const kgml_Script_btn_response_pick_player_yes = 100499;
declare const kgml_GlobalScript_btn_response_player_meeting_condition_yes = 100500;
declare const kgml_Script_btn_response_player_meeting_condition_yes = 100501;
declare const kgml_GlobalScript_btn_response_player_meeting_extend_contract = 100502;
declare const kgml_Script_btn_response_player_meeting_extend_contract = 100503;
declare const kgml_GlobalScript_btn_response_player_meeting_levelup_yes = 100504;
declare const kgml_Script_btn_response_player_meeting_levelup_yes = 100505;
declare const kgml_GlobalScript_btn_response_player_meeting_morale_yes = 100506;
declare const kgml_Script_btn_response_player_meeting_morale_yes = 100507;
declare const kgml_GlobalScript_btn_response_punt_yes = 100508;
declare const kgml_Script_btn_response_punt_yes = 100509;
declare const kgml_GlobalScript_btn_response_quit_yes = 100510;
declare const kgml_Script_btn_response_quit_yes = 100511;
declare const kgml_GlobalScript_btn_response_records_reset = 100512;
declare const kgml_Script_btn_response_records_reset = 100513;
declare const kgml_GlobalScript_btn_response_rest_player_yes = 100514;
declare const kgml_Script_btn_response_rest_player_yes = 100515;
declare const kgml_GlobalScript_btn_response_review_yes = 100516;
declare const kgml_Script_btn_response_review_yes = 100517;
declare const kgml_Script_btn_response_review_no = 100518;
declare const kgml_GlobalScript_btn_response_skip_draft_yes = 100519;
declare const kgml_Script_btn_response_skip_draft_yes = 100520;
declare const kgml_GlobalScript_btn_response_skip_tutorial = 100521;
declare const kgml_Script_btn_response_skip_tutorial = 100522;
declare const kgml_GlobalScript_btn_step_check_fullversion = 100523;
declare const kgml_Script_btn_step_check_fullversion = 100524;
declare const kgml_GlobalScript_btn_step_check_iaps = 100525;
declare const kgml_Script_btn_step_check_iaps = 100526;
declare const kgml_GlobalScript_chk_click_gamepad = 100527;
declare const kgml_Script_chk_click_gamepad = 100528;
declare const kgml_GlobalScript_debug_scripts = 100529;
declare const kgml_Script_s_debug_window_size = 100530;
declare const kgml_Script_s_is_debug_desktop = 100531;
declare const kgml_Script_s_set_desktop_dev_window_size = 100532;
declare const kgml_Script____struct___3_s_co_debug_access_debug_scripts = 100533;
declare const kgml_Script_s_co_debug_access = 100534;
declare const kgml_Script_s_debug_bypass = 100535;
declare const kgml_Script_s_debug_room_init = 100536;
declare const kgml_Script____struct___4_s_debug_init_menu_debug_scripts = 100537;
declare const kgml_Script____struct___5_s_debug_init_menu_debug_scripts = 100538;
declare const kgml_Script____struct___6_s_debug_init_menu_debug_scripts = 100539;
declare const kgml_Script____struct___7_s_debug_init_menu_debug_scripts = 100540;
declare const kgml_Script____struct___8_s_debug_init_menu_debug_scripts = 100541;
declare const kgml_Script____struct___9_s_debug_init_menu_debug_scripts = 100542;
declare const kgml_Script____struct___10_s_debug_init_menu_debug_scripts = 100543;
declare const kgml_Script____struct___11_s_debug_init_menu_debug_scripts = 100544;
declare const kgml_Script____struct___12_s_debug_init_menu_debug_scripts = 100545;
declare const kgml_Script____struct___13_s_debug_init_menu_debug_scripts = 100546;
declare const kgml_Script____struct___14_s_debug_init_menu_debug_scripts = 100547;
declare const kgml_Script____struct___15_s_debug_init_menu_debug_scripts = 100548;
declare const kgml_Script____struct___16_s_debug_init_menu_debug_scripts = 100549;
declare const kgml_Script____struct___17_s_debug_init_menu_debug_scripts = 100550;
declare const kgml_Script____struct___18_s_debug_init_menu_debug_scripts = 100551;
declare const kgml_Script____struct___19_s_debug_init_menu_debug_scripts = 100552;
declare const kgml_Script_s_debug_init_menu = 100553;
declare const kgml_Script_s_give_debug_cc = 100554;
declare const kgml_Script_btn_click_debug_main = 100555;
declare const kgml_Script____struct___20_btn_click_debug_team_ranking_debug_scripts = 100556;
declare const kgml_Script_btn_click_debug_team_ranking = 100557;
declare const kgml_Script_btn_click_debug_test_screen = 100558;
declare const kgml_Script_btn_click_debug_review_screen = 100559;
declare const kgml_Script_btn_click_debug_skip_regular_season = 100560;
declare const kgml_Script_btn_click_debug_skip_next_match = 100561;
declare const kgml_Script_btn_click_debug_force_skip_result = 100562;
declare const kgml_Script_s_get_forced_skip_result_readout = 100563;
declare const kgml_Script_btn_click_debug_test_pool_creation = 100564;
declare const kgml_Script_btn_click_debug_team_editor_franchise_screen = 100565;
declare const kgml_Script_btn_click_debug_editor_screen = 100566;
declare const kgml_Script_btn_click_debug_switch_data_version = 100567;
declare const kgml_Script_s_get_alternative_data_version = 100568;
declare const kgml_Script____struct___21_s_debug_init_team_ranking_debug_scripts = 100569;
declare const kgml_Script____struct___22_s_debug_init_team_ranking_debug_scripts = 100570;
declare const kgml_Script____struct___23_s_debug_init_team_ranking_debug_scripts = 100571;
declare const kgml_Script____struct___24_s_debug_init_team_ranking_debug_scripts = 100572;
declare const kgml_Script_anon_7817_s_debug_init_team_ranking_debug_scripts = 100573;
declare const kgml_Script_s_debug_init_team_ranking = 100574;
declare const kgml_Script_btn_dbg_list_prev_conference = 100575;
declare const kgml_Script_btn_dbg_list_next_conference = 100576;
declare const kgml_Script_s_clamp_conference_id = 100577;
declare const kgml_Script_s_dbg_team_ranking_draw_gui = 100578;
declare const kgml_Script_btn_click_debug_test_sim_odds = 100579;
declare const kgml_Script_s_debug_list_bracketed_fixtures = 100580;
declare const kgml_Script_s_debug_start_time = 100581;
declare const kgml_Script_s_debug_show_time = 100582;
declare const kgml_Script_s_set_exception_reporter = 100583;
declare const kgml_Script_s_fake_crash = 100584;
declare const kgml_Script_s_fake_crash_safe = 100585;
declare const kgml_Script_s_safe_run = 100586;
declare const kgml_Script_s_safe_run_catch = 100587;
declare const kgml_Script_s_safe_run_msg = 100588;
declare const kgml_Script_s_safe_run_crash_report = 100589;
declare const kgml_Script_s_safe_run_crash_save = 100590;
declare const kgml_GlobalScript_exhibition_scripts = 100591;
declare const kgml_Script_btn_click_exhibition_start = 100592;
declare const kgml_Script_btn_click_exhibition_exit = 100593;
declare const kgml_Script_s_exhibition_exit = 100594;
declare const kgml_Script_s_exhibition_lost_two_controllers = 100595;
declare const kgml_Script_s_exhibition_assign_lost_controller = 100596;
declare const kgml_Script_s_exhibition_abandon = 100597;
declare const kgml_Script_s_set_up_uniforms_exhibition = 100598;
declare const kgml_Script_s_create_exhibition_fixture = 100599;
declare const kgml_Script_btn_click_exhibition_controller_0 = 100600;
declare const kgml_Script_btn_click_exhibition_controller_1 = 100601;
declare const kgml_Script_s_update_exhibition_controllers = 100602;
declare const kgml_Script_btn_click_ChangeTeamAway = 100603;
declare const kgml_Script_btn_click_ChangeTeamHome = 100604;
declare const kgml_Script_btn_click_Exhibition_Play = 100605;
declare const kgml_Script_s_update_options_exh = 100606;
declare const kgml_Script_s_force_kick_direction = 100607;
declare const kgml_Script_s_count_audibles = 100608;
declare const kgml_Script_s_update_audibles = 100609;
declare const kgml_Script_s_set_audibles = 100610;
declare const kgml_Script_s_count_timeouts = 100611;
declare const kgml_Script_s_update_timeouts = 100612;
declare const kgml_Script_s_set_timeouts = 100613;
declare const kgml_Script_s_set_exhibition_buttons = 100614;
declare const kgml_Script_btn_click_exhibition_switch_start = 100615;
declare const kgml_Script_s_exhibition_controller_check_continue = 100616;
declare const kgml_Script_btn_click_exhibition_controllers = 100617;
declare const kgml_Script_btn_exhibition_controllers_refresh = 100618;
declare const kgml_Script_rm_exhibition_options_create = 100619;
declare const kgml_Script_s_exh_teamswap_allowed = 100620;
declare const kgml_Script_get_ex_teamset_0 = 100621;
declare const kgml_Script_get_ex_teamset_1 = 100622;
declare const kgml_Script_get_ex_uniform_file = 100623;
declare const kgml_Script_btn_click_ExhibitionLoadUniformsA = 100624;
declare const kgml_Script_btn_click_ExhibitionLoadUniformsB = 100625;
declare const kgml_Script_btn_click_ExhibitionLoadUniformsC = 100626;
declare const kgml_Script_btn_click_ExhibitionLoadUniformsD = 100627;
declare const kgml_Script_btn_click_ExhibitionLoadUniformsE = 100628;
declare const kgml_Script_btn_click_ExhibitionLoadUniforms = 100629;
declare const kgml_Script_s_get_save_from_number = 100630;
declare const kgml_Script_s_load_save_team_exhibitionA = 100631;
declare const kgml_Script_s_load_save_team_exhibitionB = 100632;
declare const kgml_Script_s_load_save_team_exhibitionC = 100633;
declare const kgml_Script_s_load_save_team_exhibitionD = 100634;
declare const kgml_Script_s_load_save_team_exhibitionE = 100635;
declare const kgml_Script_s_load_save_team_exhibition = 100636;
declare const kgml_Script_exh_refresh_roster_from_save = 100637;
declare const kgml_Script_s_load_html_save1_exhibition = 100638;
declare const kgml_Script_btn_click_RestoreAllTeams_ex = 100639;
declare const kgml_Script_s_restore_uniforms_all_ex = 100640;
declare const kgml_Script_s_exhibition_team_management_start = 100641;
declare const kgml_Script_s_exhibition_team_management_clear = 100642;
declare const kgml_Script_s_exhibition_wipe_list = 100643;
declare const kgml_Script_s_refresh_exhibition_team_load_buttons = 100644;
declare const kgml_Script_refresh_exh_roster_buttons = 100645;
declare const kgml_Script_btn_click_RosterTeamAway = 100646;
declare const kgml_Script_btn_click_RosterTeamHome = 100647;
declare const kgml_Script_btn_click_Profile_Back_To_Exhibition = 100648;
declare const kgml_Script_rm_player_profile_exhibition_create = 100649;
declare const kgml_Script_rm_roster_exhibition_create = 100650;
declare const kgml_Script_exhibition_handle_exit_match = 100651;
declare const kgml_GlobalScript_font_scripts = 100652;
declare const kgml_Script_s_data_path = 100653;
declare const kgml_Script_s_fonts_init = 100654;
declare const kgml_Script_s_erase_text_background = 100655;
declare const kgml_Script_draw_hd_text = 100656;
declare const kgml_Script_draw_hd_text_color = 100657;
declare const kgml_Script_draw_hd_text_ext = 100658;
declare const kgml_Script_draw_hd_text_ext_color = 100659;
declare const kgml_Script_draw_hd_text_transformed = 100660;
declare const kgml_Script_draw_hd_text_transformed_color = 100661;
declare const kgml_Script_draw_hd_text_ext_transformed = 100662;
declare const kgml_Script_string_hd_width = 100663;
declare const kgml_Script_string_hd_width_ext = 100664;
declare const kgml_Script_string_hd_height = 100665;
declare const kgml_Script_string_hd_height_ext = 100666;
declare const kgml_GlobalScript_gmcallback_poki_loadbar = 100667;
declare const kgml_Script_gmcallback_poki_loadbar = 100668;
declare const kgml_GlobalScript_is_defensiveback = 100669;
declare const kgml_Script_is_defensiveback = 100670;
declare const kgml_GlobalScript_keyboard_scripts = 100671;
declare const kgml_Script_s_keyboard_custom_enabled = 100672;
declare const kgml_Script____struct___25_s_keyboard_custom_init_keyboard_scripts = 100673;
declare const kgml_Script_s_keyboard_custom_init = 100674;
declare const kgml_Script_s_keyboard_custom_show = 100675;
declare const kgml_Script_s_keyboard_custom_hide = 100676;
declare const kgml_Script_s_keyboard_custom_layer = 100677;
declare const kgml_Script_s_keyboard_custom_create = 100678;
declare const kgml_Script_s_keyboard_custom_destroy = 100679;
declare const kgml_Script_s_keyboard_custom_create_button = 100680;
declare const kgml_Script_s_custkb_base_draw_gui = 100681;
declare const kgml_Script_s_custkb_base_step = 100682;
declare const kgml_Script_s_custkb_confirm = 100683;
declare const kgml_Script_s_custkb_delete = 100684;
declare const kgml_Script_s_custkb_shift_toggle = 100685;
declare const kgml_Script_s_custkb_add_text = 100686;
declare const kgml_Script_s_custkb_key_init = 100687;
declare const kgml_Script_s_custkb_key_draw_gui = 100688;
declare const kgml_Script_s_custkb_key_step = 100689;
declare const kgml_Script_s_custkb_key_tap = 100690;
declare const kgml_GlobalScript_nrg = 100691;
declare const kgml_Script_btn_click_nrg_buy = 100692;
declare const kgml_Script_btn_click_nrg_drink = 100693;
declare const kgml_Script_s_drink_nrg = 100694;
declare const kgml_Script_s_get_condition_colour = 100695;
declare const kgml_Script_s_get_condition_icon = 100696;
declare const kgml_GlobalScript_nx_scripts = 100697;
declare const kgml_Script_s_nx_init = 100698;
declare const kgml_Script_s_nx_commit = 100699;
declare const kgml_Script_s_nx_get_open_user = 100700;
declare const kgml_Script_s_is_switch = 100701;
declare const kgml_GlobalScript_pause_scripts = 100702;
declare const kgml_Script_s_pause_toggle = 100703;
declare const kgml_Script_s_pause_is_available = 100704;
declare const kgml_Script_s_pause_step = 100705;
declare const kgml_Script_s_is_paused_or_just_unpaused = 100706;
declare const kgml_Script_s_draw_pause = 100707;
declare const kgml_Script_s_pause_btn_init = 100708;
declare const kgml_Script_s_pause_btn_step = 100709;
declare const kgml_Script_s_pause_btn_draw_gui = 100710;
declare const kgml_Script_s_pause_btn_recenter = 100711;
declare const kgml_Script_s_pause_options_init = 100712;
declare const kgml_Script_s_pause_options_recenter = 100713;
declare const kgml_Script_s_pause_options_dismiss = 100714;
declare const kgml_Script_s_pause_options_draw_gui = 100715;
declare const kgml_Script_s_pause_options_layer = 100716;
declare const kgml_Script_s_pause_options_add_button = 100717;
declare const kgml_Script_s_pause_options_add_quit = 100718;
declare const kgml_Script_s_pause_options_update_buttons = 100719;
declare const kgml_Script_s_pause_options_button_action = 100720;
declare const kgml_Script_s_pause_options_quit_game = 100721;
declare const kgml_Script_btn_response_quit_exhibition_cancel = 100722;
declare const kgml_Script_btn_response_quit_exhibition_confirm = 100723;
declare const kgml_GlobalScript_poki_btn_click_CoinBoost = 100724;
declare const kgml_Script_poki_btn_click_CoinBoost = 100725;
declare const kgml_Script_poki_CoinBoost_No = 100726;
declare const kgml_Script_poki_CoinBoost_Yes = 100727;
declare const kgml_GlobalScript_poki_pause = 100728;
declare const kgml_Script_poki_pause = 100729;
declare const kgml_GlobalScript_poki_resume = 100730;
declare const kgml_Script_poki_resume = 100731;
declare const kgml_GlobalScript_qb_contract_scripts = 100732;
declare const kgml_Script_s_qb_mode_set_up_contract_screen = 100733;
declare const kgml_Script____struct___26_s_qb_mode_new_contract_qb_contract_scripts = 100734;
declare const kgml_Script_s_qb_mode_new_contract = 100735;
declare const kgml_Script_btn_contract_negotiate = 100736;
declare const kgml_Script_btn_contract_salary_minus = 100737;
declare const kgml_Script_btn_contract_salary_plus = 100738;
declare const kgml_Script_btn_contract_tdbonus_minus = 100739;
declare const kgml_Script_btn_contract_tdbonus_plus = 100740;
declare const kgml_Script_btn_contract_length_minus = 100741;
declare const kgml_Script_btn_contract_length_plus = 100742;
declare const kgml_Script_btn_negotiate_higher = 100743;
declare const kgml_Script_btn_negotiate_lower = 100744;
declare const kgml_Script_s_check_negotiate = 100745;
declare const kgml_Script_s_check_hilo_buttons = 100746;
declare const kgml_Script_s_accept_contract = 100747;
declare const kgml_Script_s_reject_contract = 100748;
declare const kgml_GlobalScript_s_achievements = 100749;
declare const kgml_Script_s_complete_achievement = 100750;
declare const kgml_Script_s_achievement_is_valid = 100751;
declare const kgml_Script_s_exists_in_list = 100752;
declare const kgml_Script_s_count_achievement = 100753;
declare const kgml_Script_s_get_achievement = 100754;
declare const kgml_Script_s_get_achievement_percentage = 100755;
declare const kgml_Script_s_get_filtered_achievements = 100756;
declare const kgml_Script_s_get_ach_desc = 100757;
declare const kgml_GlobalScript_s_action_result = 100758;
declare const kgml_Script_s_action_result = 100759;
declare const kgml_GlobalScript_s_add_news = 100760;
declare const kgml_Script_s_add_news = 100761;
declare const kgml_Script_s_add_news_if_new = 100762;
declare const kgml_Script_s_remove_news = 100763;
declare const kgml_Script_s_add_news_dyn = 100764;
declare const kgml_GlobalScript_s_add_to_human_fixtures = 100765;
declare const kgml_Script_s_add_to_human_fixtures = 100766;
declare const kgml_GlobalScript_s_add_xp_gain_all = 100767;
declare const kgml_Script_s_add_xp_gain_all = 100768;
declare const kgml_GlobalScript_s_adjust_team_morale = 100769;
declare const kgml_Script_s_adjust_team_morale = 100770;
declare const kgml_Script_s_adjust_team_morale_ignore_freshman = 100771;
declare const kgml_GlobalScript_s_aim_AI_defense = 100772;
declare const kgml_Script_s_aim_AI_defense = 100773;
declare const kgml_GlobalScript_s_aim_AI_kickoff = 100774;
declare const kgml_Script_s_aim_AI_kickoff = 100775;
declare const kgml_GlobalScript_s_aim_AI_offense = 100776;
declare const kgml_Script_s_aim_AI_offense = 100777;
declare const kgml_GlobalScript_s_aim_for_nearest_opponent = 100778;
declare const kgml_Script_s_aim_for_nearest_opponent = 100779;
declare const kgml_GlobalScript_s_aiming = 100780;
declare const kgml_Script_s_aiming = 100781;
declare const kgml_GlobalScript_s_all_players_resting = 100782;
declare const kgml_Script_s_all_players_resting = 100783;
declare const kgml_GlobalScript_s_apple_arcade_helpers = 100784;
declare const kgml_Script_s_aa_debug_give_cc = 100785;
declare const kgml_GlobalScript_s_award_sb_rings = 100786;
declare const kgml_Script_s_award_sb_rings = 100787;
declare const kgml_GlobalScript_s_ball_holder_goalside = 100788;
declare const kgml_Script_s_ball_holder_goalside = 100789;
declare const kgml_GlobalScript_s_benched = 100790;
declare const kgml_Script_s_player_benched = 100791;
declare const kgml_GlobalScript_s_can_run = 100792;
declare const kgml_Script_s_can_run = 100793;
declare const kgml_GlobalScript_s_can_throw = 100794;
declare const kgml_Script_s_can_throw = 100795;
declare const kgml_GlobalScript_s_can_touchback = 100796;
declare const kgml_Script_s_can_touchback = 100797;
declare const kgml_GlobalScript_s_canvas_fullscreen = 100798;
declare const kgml_Script_s_canvas_fullscreen = 100799;
declare const kgml_GlobalScript_s_change_possession = 100800;
declare const kgml_Script_s_change_possession = 100801;
declare const kgml_Script_s_force_possession = 100802;
declare const kgml_GlobalScript_s_change_wind = 100803;
declare const kgml_Script_s_change_wind = 100804;
declare const kgml_GlobalScript_s_check_ball_collision = 100805;
declare const kgml_Script_Debug_S_Log = 100806;
declare const kgml_Script_get_color_by_index = 100807;
declare const kgml_Script_s_check_ball_collision = 100808;
declare const kgml_GlobalScript_s_check_ball_position = 100809;
declare const kgml_Script_s_check_ball_position = 100810;
declare const kgml_GlobalScript_s_check_contracts_expiring = 100811;
declare const kgml_Script_s_check_contracts_expiring = 100812;
declare const kgml_GlobalScript_s_check_dive = 100813;
declare const kgml_Script_s_check_dive = 100814;
declare const kgml_GlobalScript_s_check_draft_qb = 100815;
declare const kgml_Script_s_check_draft_QB = 100816;
declare const kgml_Script_s_do_qb_draft_round = 100817;
declare const kgml_Script_s_get_weakest_player_by_position = 100818;
declare const kgml_Script_s_find_draft_player_by_position = 100819;
declare const kgml_Script_s_get_player_by_position_for_qb_draft = 100820;
declare const kgml_Script_s_do_contract_news = 100821;
declare const kgml_Script_s_goto_room_contract = 100822;
declare const kgml_Script_btn_qb_mode_interested_teams = 100823;
declare const kgml_GlobalScript_s_check_draft = 100824;
declare const kgml_Script_s_check_draft = 100825;
declare const kgml_GlobalScript_s_check_dummy_collision = 100826;
declare const kgml_Script_s_check_dummy_collision = 100827;
declare const kgml_Script_s_sound_training_success = 100828;
declare const kgml_GlobalScript_s_check_expired_contract_message = 100829;
declare const kgml_Script_s_check_expired_contract_message = 100830;
declare const kgml_GlobalScript_s_check_for_injury = 100831;
declare const kgml_Script_s_check_for_injury = 100832;
declare const kgml_GlobalScript_s_check_for_news = 100833;
declare const kgml_Script_s_check_for_news = 100834;
declare const kgml_Script_s_has_news = 100835;
declare const kgml_GlobalScript_s_check_human_control = 100836;
declare const kgml_Script_s_check_human_control = 100837;
declare const kgml_Script_s_do_dive = 100838;
declare const kgml_Script_s_do_stutterstep = 100839;
declare const kgml_GlobalScript_s_check_ingame_control_change = 100840;
declare const kgml_Script_s_check_ingame_control_change = 100841;
declare const kgml_GlobalScript_s_check_intro = 100842;
declare const kgml_Script_s_check_intro = 100843;
declare const kgml_Script_s_check_intro_college = 100844;
declare const kgml_Script_s_check_intro_rm_home = 100845;
declare const kgml_Script_s_check_intro_rm_home_college = 100846;
declare const kgml_Script_s_check_intro_rm_roster = 100847;
declare const kgml_Script_s_check_intro_rm_roster_college = 100848;
declare const kgml_Script_s_check_intro_rm_frontoffice = 100849;
declare const kgml_Script_s_check_intro_rm_frontoffice_college = 100850;
declare const kgml_Script_s_check_intro_rm_profile_staff = 100851;
declare const kgml_Script_s_check_intro_rm_profile_staff_college = 100852;
declare const kgml_Script_s_check_intro_rm_profile_boss = 100853;
declare const kgml_Script_s_check_intro_rm_profile_boss_college = 100854;
declare const kgml_Script_s_check_intro_case1 = 100855;
declare const kgml_Script_s_check_intro_case2 = 100856;
declare const kgml_Script_s_check_intro_case3 = 100857;
declare const kgml_Script_s_check_intro_case4 = 100858;
declare const kgml_Script_s_check_intro_case5 = 100859;
declare const kgml_Script_s_check_intro_case6 = 100860;
declare const kgml_Script_s_check_intro_case7 = 100861;
declare const kgml_Script_s_check_intro_case8 = 100862;
declare const kgml_Script_s_check_intro_case2_b = 100863;
declare const kgml_Script_s_check_intro_case2_c = 100864;
declare const kgml_Script_s_check_intro_case2_d = 100865;
declare const kgml_Script_s_check_intro_case2_e = 100866;
declare const kgml_Script_s_check_intro_case2_f = 100867;
declare const kgml_Script_s_check_intro_case2_g = 100868;
declare const kgml_Script_s_info_gpa_explanation_open = 100869;
declare const kgml_Script_btn_info_gpa_explanation_intro_close = 100870;
declare const kgml_Script_s_check_intro_case5_b = 100871;
declare const kgml_Script_s_check_intro_case5_second_msg = 100872;
declare const kgml_GlobalScript_s_check_qb_mode_benched = 100873;
declare const kgml_Script_s_qb_mode_benched_status = 100874;
declare const kgml_GlobalScript_s_check_record_text = 100875;
declare const kgml_Script_s_check_record_text = 100876;
declare const kgml_GlobalScript_s_check_record = 100877;
declare const kgml_Script_s_check_record = 100878;
declare const kgml_GlobalScript_s_check_repeat_retrobowls = 100879;
declare const kgml_Script_s_check_repeat_retrobowls = 100880;
declare const kgml_GlobalScript_s_check_tackling = 100881;
declare const kgml_Script_s_check_tackling = 100882;
declare const kgml_GlobalScript_s_check_tipped = 100883;
declare const kgml_Script_s_check_tipped = 100884;
declare const kgml_GlobalScript_s_check_win_after_turnover = 100885;
declare const kgml_Script_s_check_win_after_turnover = 100886;
declare const kgml_Script_s_both_teams_had_possession = 100887;
declare const kgml_GlobalScript_s_choose_defensive_formation = 100888;
declare const kgml_Script_s_choose_defensive_formation = 100889;
declare const kgml_GlobalScript_s_choose_dilemma = 100890;
declare const kgml_Script_s_choose_dilemma = 100891;
declare const kgml_Script_s_extract_dilemma_from_pool = 100892;
declare const kgml_Script_s_add_tag_matches_to_list = 100893;
declare const kgml_Script_s_reject_dilemma_not_enough_RC = 100894;
declare const kgml_GlobalScript_s_choose_face = 100895;
declare const kgml_Script_s_choose_face = 100896;
declare const kgml_Script_s_face_from_set = 100897;
declare const kgml_Script_s_face_from_set_direct = 100898;
declare const kgml_GlobalScript_s_choose_mode_hc = 100899;
declare const kgml_Script_s_choose_mode_HC = 100900;
declare const kgml_Script_s_choose_mode_QB = 100901;
declare const kgml_Script_s_choose_mode_CO_loading = 100902;
declare const kgml_Script_s_choose_mode_CO = 100903;
declare const kgml_Script_s_setup_for_mode_CO = 100904;
declare const kgml_Script_s_update_details_screen = 100905;
declare const kgml_GlobalScript_s_choose_random_face_for_me = 100906;
declare const kgml_Script_s_choose_random_face_for_me = 100907;
declare const kgml_GlobalScript_s_clear_clock = 100908;
declare const kgml_Script_s_clear_clock = 100909;
declare const kgml_GlobalScript_s_clear_freeagents = 100910;
declare const kgml_Script_s_clear_freeagents = 100911;
declare const kgml_GlobalScript_s_clear_playoff_fixtures = 100912;
declare const kgml_Script_s_clear_playoff_fixtures = 100913;
declare const kgml_GlobalScript_s_clear_storelist = 100914;
declare const kgml_Script_s_clear_storelist = 100915;
declare const kgml_GlobalScript_s_clear_trade_offers = 100916;
declare const kgml_Script_s_clear_trade_offers = 100917;
declare const kgml_GlobalScript_s_coach_trait_experience = 100918;
declare const kgml_Script_s_coach_trait_experience = 100919;
declare const kgml_GlobalScript_s_coach_trait_motivator = 100920;
declare const kgml_Script_s_coach_trait_motivator = 100921;
declare const kgml_GlobalScript_s_coach_trait_talentspotter = 100922;
declare const kgml_Script_s_coach_trait_talentspotter = 100923;
declare const kgml_GlobalScript_s_col_hex_to_b = 100924;
declare const kgml_Script_s_col_hex_to_b = 100925;
declare const kgml_GlobalScript_s_col_hex_to_g = 100926;
declare const kgml_Script_s_col_hex_to_g = 100927;
declare const kgml_GlobalScript_s_col_hex_to_r = 100928;
declare const kgml_Script_s_col_hex_to_r = 100929;
declare const kgml_GlobalScript_s_college_admissions_draft = 100930;
declare const kgml_Script_s_check_draft_CO = 100931;
declare const kgml_Script_s_college_free_agent_check = 100932;
declare const kgml_Script_btn_respose_college_free_agent_yes = 100933;
declare const kgml_Script_btn_respose_college_free_agent_no = 100934;
declare const kgml_Script_s_college_dilemma_check = 100935;
declare const kgml_Script_s_college_admissions_check_trigger = 100936;
declare const kgml_Script_s_college_admissions_pick_player = 100937;
declare const kgml_Script_s_college_admissions_players_lost_per_round = 100938;
declare const kgml_Script_s_college_admissions_draft_done = 100939;
declare const kgml_Script_btn_response_college_admissions_draft_done_yes = 100940;
declare const kgml_GlobalScript_s_college_balance = 100941;
declare const kgml_Script_s_college_balance_create_new_roster = 100942;
declare const kgml_GlobalScript_s_college_choose_team = 100943;
declare const kgml_Script____struct___27_s_rm_choose_team_co_init_s_college_choose_team = 100944;
declare const kgml_Script____struct___28_s_rm_choose_team_co_init_s_college_choose_team = 100945;
declare const kgml_Script____struct___29_s_rm_choose_team_co_init_s_college_choose_team = 100946;
declare const kgml_Script____struct___30_s_rm_choose_team_co_init_s_college_choose_team = 100947;
declare const kgml_Script____struct___31_s_rm_choose_team_co_init_s_college_choose_team = 100948;
declare const kgml_Script_s_rm_choose_team_co_init = 100949;
declare const kgml_Script_s_btn_minor = 100950;
declare const kgml_Script_s_btn_major = 100951;
declare const kgml_Script_s_choose_team_refresh_subdivision = 100952;
declare const kgml_Script_s_choose_team_refresh_conference = 100953;
declare const kgml_Script____struct___32_s_choose_team_create_conference_buttons_s_college_choose_team = 100954;
declare const kgml_Script____struct___33_s_choose_team_create_conference_buttons_s_college_choose_team = 100955;
declare const kgml_Script____struct___34_s_choose_team_create_conference_buttons_s_college_choose_team = 100956;
declare const kgml_Script____struct___35_s_choose_team_create_conference_buttons_s_college_choose_team = 100957;
declare const kgml_Script_s_choose_team_create_conference_buttons = 100958;
declare const kgml_Script_s_choose_team_btn_conference = 100959;
declare const kgml_Script____struct___36_s_choose_team_create_team_buttons_s_college_choose_team = 100960;
declare const kgml_Script____struct___37_s_choose_team_create_team_buttons_s_college_choose_team = 100961;
declare const kgml_Script____struct___39_s_choose_team_create_team_buttons_s_college_choose_team = 100962;
declare const kgml_Script____struct___40_s_choose_team_create_team_buttons_s_college_choose_team = 100963;
declare const kgml_Script_s_choose_team_create_team_buttons = 100964;
declare const kgml_Script_s_choose_team_btn_fav_team = 100965;
declare const kgml_Script_s_choose_team_btn_new_team = 100966;
declare const kgml_Script_s_choose_team_btn_back = 100967;
declare const kgml_Script_s_choose_team_btn_reject = 100968;
declare const kgml_Script_s_choose_team_conference_mode = 100969;
declare const kgml_Script_s_choose_team_subdivision_mode = 100970;
declare const kgml_Script_s_refresh_main_sections_buttons = 100971;
declare const kgml_GlobalScript_s_college_competitions_seeding = 100972;
declare const kgml_Script_s_get_team_from_tag = 100973;
declare const kgml_Script_s_get_winner_by_cid = 100974;
declare const kgml_Script_s_get_winner_by_mid = 100975;
declare const kgml_Script_s_get_co_conference_winner = 100976;
declare const kgml_Script_s_get_co_division_winner = 100977;
declare const kgml_Script_s_get_co_conference_best = 100978;
declare const kgml_Script_s_get_co_subdivision_best = 100979;
declare const kgml_Script_s_get_co_bowl_seed = 100980;
declare const kgml_Script_s_get_co_prestige_bowl_seed = 100981;
declare const kgml_Script_s_create_prestige_pool = 100982;
declare const kgml_Script_s_prestige_pool_sort_order_ranking = 100983;
declare const kgml_Script_s_prestige_pool_list = 100984;
declare const kgml_Script____struct___41_s_prestige_pool_add_s_college_competitions_seeding = 100985;
declare const kgml_Script_s_prestige_pool_add = 100986;
declare const kgml_Script_s_get_prestige_pool = 100987;
declare const kgml_Script_s_get_team_in_prestige_pool = 100988;
declare const kgml_Script_s_prestige_pool_force_one_per_conf = 100989;
declare const kgml_Script_s_prestige_pool_fill_per_rank = 100990;
declare const kgml_Script_s_get_bowl_seed_first_loop_pool = 100991;
declare const kgml_Script_s_get_bowl_seed_second_loop_pool = 100992;
declare const kgml_Script_s_get_bowl_seed_third_loop_pool = 100993;
declare const kgml_Script_s_get_first_team_data = 100994;
declare const kgml_Script____struct___42_s_get_competition_pool_s_college_competitions_seeding = 100995;
declare const kgml_Script_s_get_competition_pool = 100996;
declare const kgml_Script_s_competition_pool_team = 100997;
declare const kgml_Script_s_get_competition_winner = 100998;
declare const kgml_Script_s_competition_pool_fill_from_rankings = 100999;
declare const kgml_Script_s_competition_pool_exclude_teams = 101000;
declare const kgml_Script_s_competition_pool_add_team = 101001;
declare const kgml_Script_s_competition_pool_rankings_exclude = 101002;
declare const kgml_Script____struct___43_s_get_tagged_source_s_college_competitions_seeding = 101003;
declare const kgml_Script_s_get_tagged_source = 101004;
declare const kgml_Script_s_get_pool_position = 101005;
declare const kgml_Script_s_competitions_debug_printout = 101006;
declare const kgml_GlobalScript_s_college_competitions = 101007;
declare const kgml_Script_s_get_competition_id_from_fix = 101008;
declare const kgml_Script_s_get_competition_by_conference_division = 101009;
declare const kgml_Script_s_get_competition = 101010;
declare const kgml_Script_s_get_competitions_in_editor_group = 101011;
declare const kgml_Script_s_get_last_schedule_week = 101012;
declare const kgml_Script_s_get_postseason_fixture_by_week = 101013;
declare const kgml_Script_s_get_player_schedule_fixture_by_week = 101014;
declare const kgml_Script____struct___44_s_get_competition_win_access_list_s_college_competitions = 101015;
declare const kgml_Script_s_get_competition_win_access_list = 101016;
declare const kgml_Script_s_schedule_generation = 101017;
declare const kgml_Script_s_is_cyclic_competition_year = 101018;
declare const kgml_Script_s_schedule_add_game = 101019;
declare const kgml_Script_s_schedule_add_championship = 101020;
declare const kgml_Script_s_get_schedule_fix_template = 101021;
declare const kgml_Script_s_fixture_victory_screen = 101022;
declare const kgml_Script_s_handle_fixture_notification = 101023;
declare const kgml_Script_s_fixture_notifications_roster_cv_entry = 101024;
declare const kgml_Script_s_handle_fixture_history_record = 101025;
declare const kgml_Script_s_handle_fixture_reward = 101026;
declare const kgml_Script____struct___45_s_reset_competitions_and_subdivisions_pools_and_rankings_s_college_competitions = 101027;
declare const kgml_Script____struct___46_s_reset_competitions_and_subdivisions_pools_and_rankings_s_college_competitions = 101028;
declare const kgml_Script____struct___47_s_reset_competitions_and_subdivisions_pools_and_rankings_s_college_competitions = 101029;
declare const kgml_Script_s_reset_competitions_and_subdivisions_pools_and_rankings = 101030;
declare const kgml_Script_s_competitions_status_update = 101031;
declare const kgml_Script_s_competitions_update_quick_standings = 101032;
declare const kgml_Script_s_resolve_non_champ_conferences = 101033;
declare const kgml_Script_s_schedule_advance_teams = 101034;
declare const kgml_Script_s_schedule_move_better_team_to_home_slot = 101035;
declare const kgml_Script____struct___48_s_schedule_add_fixtag_s_college_competitions = 101036;
declare const kgml_Script_s_schedule_add_fixtag = 101037;
declare const kgml_Script_s_get_fixtag_priority = 101038;
declare const kgml_Script_s_fixtag_sort_priority = 101039;
declare const kgml_Script_s_competition_update_standings = 101040;
declare const kgml_Script_s_competition_reset_standings = 101041;
declare const kgml_Script_s_conference_update_standings = 101042;
declare const kgml_Script_s_subdivision_update_rankings = 101043;
declare const kgml_Script_s_conference_reset_standings = 101044;
declare const kgml_Script_s_subdivision_get_player_ranking = 101045;
declare const kgml_Script_s_subdivision_get_team_ranking = 101046;
declare const kgml_Script_s_get_my_conference_current_place = 101047;
declare const kgml_Script_s_update_human_postseason_fixtures = 101048;
declare const kgml_GlobalScript_s_college_custom_data = 101049;
declare const kgml_Script_s_custom_data_file_exists_safe = 101050;
declare const kgml_Script_s_custom_data_load = 101051;
declare const kgml_Script_s_custom_data_file_delete = 101052;
declare const kgml_Script_s_custom_data_patch = 101053;
declare const kgml_Script_s_custom_data_update_from_editor = 101054;
declare const kgml_Script_s_custom_data_save = 101055;
declare const kgml_Script_s_custom_data_delete = 101056;
declare const kgml_Script_s_custom_data_reset = 101057;
declare const kgml_Script____struct___49_s_custom_data_template_s_college_custom_data = 101058;
declare const kgml_Script____struct___50_s_custom_data_template_s_college_custom_data = 101059;
declare const kgml_Script____struct___51_s_custom_data_template_s_college_custom_data = 101060;
declare const kgml_Script____struct___52_s_custom_data_template_s_college_custom_data = 101061;
declare const kgml_Script_s_custom_data_template = 101062;
declare const kgml_Script_s_custom_data_restore = 101063;
declare const kgml_Script_s_custom_data_copy_from = 101064;
declare const kgml_Script_s_copy_uniforms_from = 101065;
declare const kgml_Script_s_college_restore_all_uniforms = 101066;
declare const kgml_Script_s_custom_data_exists = 101067;
declare const kgml_Script_s_is_custom_data_active = 101068;
declare const kgml_Script_s_set_custom_data_active = 101069;
declare const kgml_Script_s_get_custom_data_subdivision = 101070;
declare const kgml_Script_s_get_custom_data_conference = 101071;
declare const kgml_Script_s_get_custom_data_competition = 101072;
declare const kgml_Script_s_get_custom_data_filename = 101073;
declare const kgml_Script____struct___53_s_get_or_create_custom_data_conference_s_college_custom_data = 101074;
declare const kgml_Script_s_get_or_create_custom_data_conference = 101075;
declare const kgml_Script____struct___54_s_get_or_create_custom_data_competition_s_college_custom_data = 101076;
declare const kgml_Script_s_get_or_create_custom_data_competition = 101077;
declare const kgml_Script_s_get_custom_data_suffix = 101078;
declare const kgml_Script_s_get_custom_data_comp_name_prefix = 101079;
declare const kgml_Script_s_get_custom_data_comp_name_suffix = 101080;
declare const kgml_Script_s_get_bowl_split_name = 101081;
declare const kgml_GlobalScript_s_college_data_versioning = 101082;
declare const kgml_Script_s_get_versioned_path = 101083;
declare const kgml_Script_s_is_newer_data_available = 101084;
declare const kgml_Script_s_is_team_active_in_new_data = 101085;
declare const kgml_Script_s_get_build_data_version = 101086;
declare const kgml_Script_s_get_build_year_offset = 101087;
declare const kgml_Script_s_get_data_version_string = 101088;
declare const kgml_Script____struct___55_s_reset_to_version_s_college_data_versioning = 101089;
declare const kgml_Script_s_reset_to_version = 101090;
declare const kgml_Script_s_data_upgrade_teams = 101091;
declare const kgml_Script_s_offer_data_upgrade = 101092;
declare const kgml_Script_s_data_upgrade_offer_deny = 101093;
declare const kgml_Script_s_data_upgrade_offer_accept = 101094;
declare const kgml_GlobalScript_s_college_details = 101095;
declare const kgml_Script____struct___56_s_college_details_init_s_college_details = 101096;
declare const kgml_Script____struct___57_s_college_details_init_s_college_details = 101097;
declare const kgml_Script_s_college_details_init = 101098;
declare const kgml_Script____struct___58_s_reset_team_selections_s_college_details = 101099;
declare const kgml_Script_s_reset_team_selections = 101100;
declare const kgml_Script_anon_2333_s_college_details_hide_s_college_details = 101101;
declare const kgml_Script_s_college_details_hide = 101102;
declare const kgml_Script_anon_2464_s_college_details_center_s_college_details = 101103;
declare const kgml_Script_s_college_details_center = 101104;
declare const kgml_Script____struct___59_s_college_details_bottom_panel_init_s_college_details = 101105;
declare const kgml_Script____struct___60_s_college_details_bottom_panel_init_s_college_details = 101106;
declare const kgml_Script____struct___61_s_college_details_bottom_panel_init_s_college_details = 101107;
declare const kgml_Script_s_college_details_bottom_panel_init = 101108;
declare const kgml_Script_s_college_details_bottom_panel_draw_gui = 101109;
declare const kgml_Script____struct___62_s_college_details_bottom_panel_create_buttons_s_college_details = 101110;
declare const kgml_Script____struct___63_s_college_details_bottom_panel_create_buttons_s_college_details = 101111;
declare const kgml_Script_s_college_details_bottom_panel_create_buttons = 101112;
declare const kgml_Script_s_college_details_favorite_btn_action = 101113;
declare const kgml_Script_s_college_details_starting_btn_action = 101114;
declare const kgml_Script_s_college_details_difficulty_btn_action = 101115;
declare const kgml_Script_s_get_college_details_favorite_label_text = 101116;
declare const kgml_Script_s_get_college_details_starting_label_text = 101117;
declare const kgml_Script_s_get_college_details_difficulty_label_text = 101118;
declare const kgml_Script_s_college_details_btn_draw = 101119;
declare const kgml_Script_s_create_starting_teams_list = 101120;
declare const kgml_Script_s_add_starting_team = 101121;
declare const kgml_Script_s_is_starting_team_selectable = 101122;
declare const kgml_Script_s_count_starting_team_selectable_conference = 101123;
declare const kgml_Script_s_get_random_non_rival_team = 101124;
declare const kgml_GlobalScript_s_college_draft = 101125;
declare const kgml_Script_s_college_draft_ranking = 101126;
declare const kgml_Script_s_college_draft_team_ranking = 101127;
declare const kgml_Script_s_college_draft_team_pick = 101128;
declare const kgml_Script_s_calculate_college_draft = 101129;
declare const kgml_Script_s_destroy_college_draft = 101130;
declare const kgml_Script____struct___64_s_display_college_draft_debug_s_college_draft = 101131;
declare const kgml_Script_s_display_college_draft_debug = 101132;
declare const kgml_Script_s_message_college_draft_pick = 101133;
declare const kgml_Script_s_college_draft_check_achievements = 101134;
declare const kgml_Script_s_message_college_draft_notpick = 101135;
declare const kgml_Script_s_message_college_draft_nottrydraft_y3 = 101136;
declare const kgml_Script_s_message_college_draft_early_y3 = 101137;
declare const kgml_Script_s_message_college_draft_pick_continue = 101138;
declare const kgml_Script_s_message_college_earyly_yes = 101139;
declare const kgml_Script_s_message_college_earyly_no = 101140;
declare const kgml_Script_s_message_college_earyly_info = 101141;
declare const kgml_Script_s_college_draft_earyly_info_return = 101142;
declare const kgml_Script_s_college_draft_refresh_current_attitude = 101143;
declare const kgml_Script_s_doing_college_draft = 101144;
declare const kgml_Script_s_check_college_draft_start = 101145;
declare const kgml_Script_s_start_college_draft = 101146;
declare const kgml_Script_s_draft_set_epilogue = 101147;
declare const kgml_Script_s_end_college_draft = 101148;
declare const kgml_Script_s_end_college_draft_late_msg_clear = 101149;
declare const kgml_Script____struct___65_s_end_college_draft_late_s_college_draft = 101150;
declare const kgml_Script_s_end_college_draft_late = 101151;
declare const kgml_Script_s_college_draft_new_season_loading = 101152;
declare const kgml_Script_s_college_draft_new_season = 101153;
declare const kgml_Script_btn_click_college_draft_next = 101154;
declare const kgml_Script_s_college_draft_refresh = 101155;
declare const kgml_Script_btn_click_college_draft_skip = 101156;
declare const kgml_Script_college_draft_do_skip = 101157;
declare const kgml_Script_s_college_draft_player_pick = 101158;
declare const kgml_Script____struct___66_s_display_college_draft_roster_s_college_draft = 101159;
declare const kgml_Script____struct___67_s_display_college_draft_roster_s_college_draft = 101160;
declare const kgml_Script____struct___68_s_display_college_draft_roster_s_college_draft = 101161;
declare const kgml_Script____struct___69_s_display_college_draft_roster_s_college_draft = 101162;
declare const kgml_Script____struct___70_s_display_college_draft_roster_s_college_draft = 101163;
declare const kgml_Script_s_display_college_draft_roster = 101164;
declare const kgml_Script____struct___71_s_card_layout_pos_s_college_draft = 101165;
declare const kgml_Script_s_card_layout_pos = 101166;
declare const kgml_Script_s_load_pro_teams = 101167;
declare const kgml_GlobalScript_s_college_edit_competition = 101168;
declare const kgml_Script____struct___72_s_rm_edit_competition_init_s_college_edit_competition = 101169;
declare const kgml_Script____struct___73_s_rm_edit_competition_init_s_college_edit_competition = 101170;
declare const kgml_Script____struct___74_s_rm_edit_competition_init_s_college_edit_competition = 101171;
declare const kgml_Script____struct___75_s_rm_edit_competition_init_s_college_edit_competition = 101172;
declare const kgml_Script_s_rm_edit_competition_init = 101173;
declare const kgml_Script_s_btn_edit_comp_confirm = 101174;
declare const kgml_Script_s_btn_edit_comp_cancel = 101175;
declare const kgml_Script____struct___76_s_editor_create_competition_fields_s_college_edit_competition = 101176;
declare const kgml_Script_s_editor_create_competition_fields = 101177;
declare const kgml_Script____struct___77_s_editor_create_text_field_s_college_edit_competition = 101178;
declare const kgml_Script_s_editor_create_text_field = 101179;
declare const kgml_Script____struct___78_s_editor_create_partial_text_field_s_college_edit_competition = 101180;
declare const kgml_Script____struct___79_s_editor_create_partial_text_field_s_college_edit_competition = 101181;
declare const kgml_Script____struct___80_s_editor_create_partial_text_field_s_college_edit_competition = 101182;
declare const kgml_Script____struct___81_s_editor_create_partial_text_field_s_college_edit_competition = 101183;
declare const kgml_Script_s_editor_create_partial_text_field = 101184;
declare const kgml_Script____struct___82_s_editor_create_location_field_s_college_edit_competition = 101185;
declare const kgml_Script____struct___83_s_editor_create_location_field_s_college_edit_competition = 101186;
declare const kgml_Script____struct___84_s_editor_create_location_field_s_college_edit_competition = 101187;
declare const kgml_Script_s_editor_create_location_field = 101188;
declare const kgml_Script____struct___85_s_editor_create_field_label_s_college_edit_competition = 101189;
declare const kgml_Script_s_editor_create_field_label = 101190;
declare const kgml_Script_s_ui_field_label_draw_gui = 101191;
declare const kgml_Script_s_editor_field_validate = 101192;
declare const kgml_Script_s_editor_location_is_neutral = 101193;
declare const kgml_Script_s_editor_location_toggle_neutral_state = 101194;
declare const kgml_Script____struct___86_s_get_editor_mode_data_s_college_edit_competition = 101195;
declare const kgml_Script_s_get_editor_mode_data = 101196;
declare const kgml_GlobalScript_s_college_editor = 101197;
declare const kgml_Script____struct___87_s_rm_editor_init_s_college_editor = 101198;
declare const kgml_Script____struct___88_s_rm_editor_init_s_college_editor = 101199;
declare const kgml_Script____struct___89_s_rm_editor_init_s_college_editor = 101200;
declare const kgml_Script____struct___90_s_rm_editor_init_s_college_editor = 101201;
declare const kgml_Script____struct___91_s_rm_editor_init_s_college_editor = 101202;
declare const kgml_Script____struct___92_s_rm_editor_init_s_college_editor = 101203;
declare const kgml_Script____struct___93_s_rm_editor_init_s_college_editor = 101204;
declare const kgml_Script____struct___94_s_rm_editor_init_s_college_editor = 101205;
declare const kgml_Script____struct___95_s_rm_editor_init_s_college_editor = 101206;
declare const kgml_Script____struct___96_s_rm_editor_init_s_college_editor = 101207;
declare const kgml_Script_s_rm_editor_init = 101208;
declare const kgml_Script_s_goto_editor = 101209;
declare const kgml_Script_s_btn_editor_done = 101210;
declare const kgml_Script_s_btn_editor_major = 101211;
declare const kgml_Script_s_btn_editor_minor = 101212;
declare const kgml_Script_s_btn_editor_bowls = 101213;
declare const kgml_Script_s_btn_editor_back = 101214;
declare const kgml_Script____struct___97_s_btn_editor_edit_subdivision_s_college_editor = 101215;
declare const kgml_Script_s_btn_editor_edit_subdivision = 101216;
declare const kgml_Script____struct___98_s_btn_editor_edit_conference_s_college_editor = 101217;
declare const kgml_Script_s_btn_editor_edit_conference = 101218;
declare const kgml_Script_s_btn_editor_conference = 101219;
declare const kgml_Script_s_btn_editor_select_team = 101220;
declare const kgml_Script_s_btn_editor_select_bowl_group = 101221;
declare const kgml_Script____struct___99_s_btn_editor_select_bowl_competition_s_college_editor = 101222;
declare const kgml_Script_s_btn_editor_select_bowl_competition = 101223;
declare const kgml_Script____struct___100_s_save_editor_status_s_college_editor = 101224;
declare const kgml_Script_s_save_editor_status = 101225;
declare const kgml_Script____struct___101_s_get_editor_status_s_college_editor = 101226;
declare const kgml_Script_s_get_editor_status = 101227;
declare const kgml_Script_s_reset_editor_status = 101228;
declare const kgml_Script_s_editor_subdivision_mode = 101229;
declare const kgml_Script_s_editor_conference_mode = 101230;
declare const kgml_Script_s_editor_bowls_group_mode = 101231;
declare const kgml_Script_s_editor_bowls_competition_mode = 101232;
declare const kgml_Script_s_editor_set_buttons = 101233;
declare const kgml_Script_s_editor_refresh_bowls_groups = 101234;
declare const kgml_Script____struct___102_s_editor_create_bowls_buttons_s_college_editor = 101235;
declare const kgml_Script____struct___103_s_editor_create_bowls_buttons_s_college_editor = 101236;
declare const kgml_Script_s_editor_create_bowls_buttons = 101237;
declare const kgml_Script____struct___104_s_create_slot_label_s_college_editor = 101238;
declare const kgml_Script_s_create_slot_label = 101239;
declare const kgml_Script_s_ui_label_draw_gui = 101240;
declare const kgml_Script_s_get_editor_bowl_group_name_by_tag = 101241;
declare const kgml_Script____struct___105_s_editor_copy_buttons_s_college_editor = 101242;
declare const kgml_Script____struct___106_s_editor_copy_buttons_s_college_editor = 101243;
declare const kgml_Script____struct___107_s_editor_copy_buttons_s_college_editor = 101244;
declare const kgml_Script____struct___108_s_editor_copy_buttons_s_college_editor = 101245;
declare const kgml_Script____struct___109_s_editor_copy_buttons_s_college_editor = 101246;
declare const kgml_Script_s_editor_copy_buttons = 101247;
declare const kgml_Script_s_init_btn_editor_copy = 101248;
declare const kgml_Script_s_btn_editor_copy = 101249;
declare const kgml_Script_s_btn_editor_confirm_copy = 101250;
declare const kgml_Script_s_btn_editor_restore_all = 101251;
declare const kgml_Script_s_btn_editor_confirm_restore_all = 101252;
declare const kgml_GlobalScript_s_college_gui_helpers = 101253;
declare const kgml_Script_buttons_college_custom = 101254;
declare const kgml_Script_draw_custom_increase_wallet = 101255;
declare const kgml_Script_draw_custom_recruitment_credits_display = 101256;
declare const kgml_Script_rm_player_profile_show_noncollege_elements = 101257;
declare const kgml_Script_rm_player_profile_show_more = 101258;
declare const kgml_Script____struct___110_rm_player_profile_college_create_p1_s_college_gui_helpers = 101259;
declare const kgml_Script____struct___111_rm_player_profile_college_create_p1_s_college_gui_helpers = 101260;
declare const kgml_Script____struct___112_rm_player_profile_college_create_p1_s_college_gui_helpers = 101261;
declare const kgml_Script____struct___113_rm_player_profile_college_create_p1_s_college_gui_helpers = 101262;
declare const kgml_Script____struct___114_rm_player_profile_college_create_p1_s_college_gui_helpers = 101263;
declare const kgml_Script____struct___115_rm_player_profile_college_create_p1_s_college_gui_helpers = 101264;
declare const kgml_Script____struct___116_rm_player_profile_college_create_p1_s_college_gui_helpers = 101265;
declare const kgml_Script____struct___118_rm_player_profile_college_create_p1_s_college_gui_helpers = 101266;
declare const kgml_Script____struct___119_rm_player_profile_college_create_p1_s_college_gui_helpers = 101267;
declare const kgml_Script_rm_player_profile_college_create_p1 = 101268;
declare const kgml_Script____struct___120_rm_player_profile_college_create_p2_s_college_gui_helpers = 101269;
declare const kgml_Script____struct___121_rm_player_profile_college_create_p2_s_college_gui_helpers = 101270;
declare const kgml_Script____struct___122_rm_player_profile_college_create_p2_s_college_gui_helpers = 101271;
declare const kgml_Script____struct___123_rm_player_profile_college_create_p2_s_college_gui_helpers = 101272;
declare const kgml_Script____struct___124_rm_player_profile_college_create_p2_s_college_gui_helpers = 101273;
declare const kgml_Script____struct___125_rm_player_profile_college_create_p2_s_college_gui_helpers = 101274;
declare const kgml_Script____struct___126_rm_player_profile_college_create_p2_s_college_gui_helpers = 101275;
declare const kgml_Script____struct___127_rm_player_profile_college_create_p2_s_college_gui_helpers = 101276;
declare const kgml_Script____struct___128_rm_player_profile_college_create_p2_s_college_gui_helpers = 101277;
declare const kgml_Script_rm_player_profile_college_create_p2 = 101278;
declare const kgml_Script_rm_player_profile_college_create = 101279;
declare const kgml_Script_btn_rm_player_profile_college_showP1 = 101280;
declare const kgml_Script_btn_rm_player_profile_college_showP2 = 101281;
declare const kgml_Script_rm_player_profile_college_step = 101282;
declare const kgml_Script_btn_click_Profile_College_Cut = 101283;
declare const kgml_Script_btn_click_Profile_College_Cut_During_Admission_Draft = 101284;
declare const kgml_Script_btn_response_cut_player_for_RC_yes = 101285;
declare const kgml_Script_s_get_college_player_cut_RC = 101286;
declare const kgml_Script_btn_rm_stats_player_showAwards = 101287;
declare const kgml_Script_btn_rm_stats_player_showEpilogue = 101288;
declare const kgml_Script____struct___129_stats_player_button_entry_s_college_gui_helpers = 101289;
declare const kgml_Script_stats_player_button_entry = 101290;
declare const kgml_Script____struct___130_rm_stats_player_configure_college_s_college_gui_helpers = 101291;
declare const kgml_Script____struct___131_rm_stats_player_configure_college_s_college_gui_helpers = 101292;
declare const kgml_Script_rm_stats_player_configure_college = 101293;
declare const kgml_Script_s_change_panel_division_mode = 101294;
declare const kgml_Script_s_panel_skip_independents_cnf_view = 101295;
declare const kgml_Script_s_panel_scroll_init = 101296;
declare const kgml_Script_s_panel_scroll_step = 101297;
declare const kgml_Script_s_panel_scroll_set_height = 101298;
declare const kgml_Script_s_panel_scroll_global_flick = 101299;
declare const kgml_Script_s_panel_scroll_draw_gui = 101300;
declare const kgml_Script_s_panel_scroll_is_inside = 101301;
declare const kgml_GlobalScript_s_college_gui_panels = 101302;
declare const kgml_Script____struct___132_s_co_subdivision_create_s_college_gui_panels = 101303;
declare const kgml_Script_s_co_subdivision_create = 101304;
declare const kgml_Script_s_co_subdivision_init = 101305;
declare const kgml_Script_s_co_subdivision_hidden_draw_gui = 101306;
declare const kgml_Script_s_co_division_create = 101307;
declare const kgml_Script_s_co_division_init = 101308;
declare const kgml_Script_s_co_division_step = 101309;
declare const kgml_Script_s_fit_string = 101310;
declare const kgml_Script_s_co_division_draw_gui = 101311;
declare const kgml_GlobalScript_s_college_league = 101312;
declare const kgml_Script____struct___133_s_rm_league_co_init_s_college_league = 101313;
declare const kgml_Script____struct___134_s_rm_league_co_init_s_college_league = 101314;
declare const kgml_Script____struct___135_s_rm_league_co_init_s_college_league = 101315;
declare const kgml_Script____struct___136_s_rm_league_co_init_s_college_league = 101316;
declare const kgml_Script____struct___137_s_rm_league_co_init_s_college_league = 101317;
declare const kgml_Script____struct___138_s_rm_league_co_init_s_college_league = 101318;
declare const kgml_Script____struct___139_s_rm_league_co_init_s_college_league = 101319;
declare const kgml_Script____struct___140_s_rm_league_co_init_s_college_league = 101320;
declare const kgml_Script____struct___141_s_rm_league_co_init_s_college_league = 101321;
declare const kgml_Script____struct___142_s_rm_league_co_init_s_college_league = 101322;
declare const kgml_Script____struct___143_s_rm_league_co_init_s_college_league = 101323;
declare const kgml_Script____struct___144_s_rm_league_co_init_s_college_league = 101324;
declare const kgml_Script____struct___145_s_rm_league_co_init_s_college_league = 101325;
declare const kgml_Script____struct___146_s_rm_league_co_init_s_college_league = 101326;
declare const kgml_Script____struct___147_s_rm_league_co_init_s_college_league = 101327;
declare const kgml_Script____struct___148_s_rm_league_co_init_s_college_league = 101328;
declare const kgml_Script____struct___149_s_rm_league_co_init_s_college_league = 101329;
declare const kgml_Script____struct___150_s_rm_league_co_init_s_college_league = 101330;
declare const kgml_Script_s_rm_league_co_init = 101331;
declare const kgml_Script_s_btn_league_view = 101332;
declare const kgml_Script____struct___151_s_btn_league_mode_s_college_league = 101333;
declare const kgml_Script_s_btn_league_mode = 101334;
declare const kgml_Script____struct___152_s_btn_league_subdivision_s_college_league = 101335;
declare const kgml_Script_s_btn_league_subdivision = 101336;
declare const kgml_Script_s_btn_division_home_view = 101337;
declare const kgml_Script_s_btn_division_postmatch_view = 101338;
declare const kgml_Script____struct___153_s_btn_league_next_conference_s_college_league = 101339;
declare const kgml_Script_s_btn_league_next_conference = 101340;
declare const kgml_Script_anon_5862_s_set_league_mode_btn_colour_s_college_league = 101341;
declare const kgml_Script_s_set_league_mode_btn_colour = 101342;
declare const kgml_Script_anon_6028_s_set_league_tier_btn_colour_s_college_league = 101343;
declare const kgml_Script_s_set_league_tier_btn_colour = 101344;
declare const kgml_Script_s_set_var_if_missing = 101345;
declare const kgml_Script_s_league_get_btn_back_image = 101346;
declare const kgml_Script_s_league_refresh_subdivision = 101347;
declare const kgml_Script____struct___154_s_league_create_conference_buttons_s_college_league = 101348;
declare const kgml_Script_s_league_create_conference_buttons = 101349;
declare const kgml_Script____struct___155_s_league_btn_conference_s_college_league = 101350;
declare const kgml_Script_s_league_btn_conference = 101351;
declare const kgml_Script_s_league_create_conference_panels = 101352;
declare const kgml_Script____struct___156_s_league_create_conference_division_s_college_league = 101353;
declare const kgml_Script____struct___157_s_league_create_conference_division_s_college_league = 101354;
declare const kgml_Script_s_league_create_conference_division = 101355;
declare const kgml_Script____struct___158_s_league_create_ranking_panels_s_college_league = 101356;
declare const kgml_Script____struct___159_s_league_create_ranking_panels_s_college_league = 101357;
declare const kgml_Script_s_league_create_ranking_panels = 101358;
declare const kgml_Script_s_is_prev_rank_visible = 101359;
declare const kgml_Script____struct___160_s_league_create_schedule_panels_s_college_league = 101360;
declare const kgml_Script____struct___161_s_league_create_schedule_panels_s_college_league = 101361;
declare const kgml_Script____struct___162_s_league_create_schedule_panels_s_college_league = 101362;
declare const kgml_Script_s_league_create_schedule_panels = 101363;
declare const kgml_Script_s_co_schedule_init = 101364;
declare const kgml_Script_s_league_btn_week = 101365;
declare const kgml_Script_s_league_btn_page = 101366;
declare const kgml_Script_s_co_schedule_sort_order = 101367;
declare const kgml_Script_s_league_get_own_bracket_page = 101368;
declare const kgml_Script_s_co_schedule_refresh = 101369;
declare const kgml_Script_s_co_schedule_step = 101370;
declare const kgml_Script____struct___163_s_co_schedule_filter_format_s_college_league = 101371;
declare const kgml_Script_s_co_schedule_filter_format = 101372;
declare const kgml_Script____struct___164_s_set_matchlist_bracket_coords_s_college_league = 101373;
declare const kgml_Script____struct___165_s_set_matchlist_bracket_coords_s_college_league = 101374;
declare const kgml_Script____struct___166_s_set_matchlist_bracket_coords_s_college_league = 101375;
declare const kgml_Script____struct___167_s_set_matchlist_bracket_coords_s_college_league = 101376;
declare const kgml_Script____struct___168_s_set_matchlist_bracket_coords_s_college_league = 101377;
declare const kgml_Script____struct___169_s_set_matchlist_bracket_coords_s_college_league = 101378;
declare const kgml_Script____struct___170_s_set_matchlist_bracket_coords_s_college_league = 101379;
declare const kgml_Script____struct___171_s_set_matchlist_bracket_coords_s_college_league = 101380;
declare const kgml_Script____struct___172_s_set_matchlist_bracket_coords_s_college_league = 101381;
declare const kgml_Script____struct___173_s_set_matchlist_bracket_coords_s_college_league = 101382;
declare const kgml_Script____struct___174_s_set_matchlist_bracket_coords_s_college_league = 101383;
declare const kgml_Script____struct___175_s_set_matchlist_bracket_coords_s_college_league = 101384;
declare const kgml_Script_s_set_matchlist_bracket_coords = 101385;
declare const kgml_Script_s_get_bracket_map_entry = 101386;
declare const kgml_Script_s_co_schedule_draw_gui = 101387;
declare const kgml_Script_s_draw_bracket_name_box = 101388;
declare const kgml_GlobalScript_s_college_overtime = 101389;
declare const kgml_Script_s_college_overtime_start = 101390;
declare const kgml_Script_s_college_overtime_handle_play_end = 101391;
declare const kgml_Script_s_college_overtime_setup_new_possesion = 101392;
declare const kgml_Script_s_college_overtime_offer_kick = 101393;
declare const kgml_Script_s_college_overtime_next_round = 101394;
declare const kgml_Script_s_college_overtime_possession_count = 101395;
declare const kgml_Script_s_college_overtime_one_team_won = 101396;
declare const kgml_Script_s_college_overtime_other_teams_turn = 101397;
declare const kgml_Script_s_college_overtime_trigger_point_conversion = 101398;
declare const kgml_Script_s_college_overtime_flip_possession = 101399;
declare const kgml_Script_s_college_overtime_score_hack = 101400;
declare const kgml_Script_s_co_poss_str = 101401;
declare const kgml_Script_btn_click_toggle_college_overtime_debug = 101402;
declare const kgml_Script_s_refresh_btn_overtime_text = 101403;
declare const kgml_GlobalScript_s_college_postseason = 101404;
declare const kgml_Script____struct___176_s_rm_postseason_init_s_college_postseason = 101405;
declare const kgml_Script____struct___177_s_rm_postseason_init_s_college_postseason = 101406;
declare const kgml_Script____struct___178_s_rm_postseason_init_s_college_postseason = 101407;
declare const kgml_Script____struct___179_s_rm_postseason_init_s_college_postseason = 101408;
declare const kgml_Script____struct___180_s_rm_postseason_init_s_college_postseason = 101409;
declare const kgml_Script____struct___181_s_rm_postseason_init_s_college_postseason = 101410;
declare const kgml_Script____struct___182_s_rm_postseason_init_s_college_postseason = 101411;
declare const kgml_Script_s_rm_postseason_init = 101412;
declare const kgml_Script_s_btn_postseason_skip_loading = 101413;
declare const kgml_Script_s_btn_postseason_skip = 101414;
declare const kgml_Script_s_btn_postseason_play = 101415;
declare const kgml_Script_s_postseason_goto_home = 101416;
declare const kgml_Script_s_btn_result_postseason_continue = 101417;
declare const kgml_Script_s_btn_postmatch_co_continue = 101418;
declare const kgml_Script_s_btn_postmatch_co_league = 101419;
declare const kgml_Script_s_postseason_show_news = 101420;
declare const kgml_Script_s_postseason_show_finals = 101421;
declare const kgml_Script_s_postseason_show_next_result = 101422;
declare const kgml_Script_s_postseason_show_finals_result = 101423;
declare const kgml_Script_s_btn_postseason_news_skip = 101424;
declare const kgml_Script_s_btn_postseason_news_continue = 101425;
declare const kgml_Script_s_postseason_results = 101426;
declare const kgml_Script____struct___183_s_create_postseason_result_s_college_postseason = 101427;
declare const kgml_Script____struct___184_s_create_postseason_result_s_college_postseason = 101428;
declare const kgml_Script_s_create_postseason_result = 101429;
declare const kgml_Script_s_postseason_results_data_sort = 101430;
declare const kgml_Script_s_get_postseason_result_by_cid = 101431;
declare const kgml_Script_s_get_competition_win_access = 101432;
declare const kgml_Script_s_get_fix_access_string = 101433;
declare const kgml_Script_s_get_fix_result_string = 101434;
declare const kgml_Script_s_skip_postseason_until_human_match = 101435;
declare const kgml_Script_s_skip_postseason_chunk = 101436;
declare const kgml_GlobalScript_s_college_ranking = 101437;
declare const kgml_Script_s_co_set_starting_rank = 101438;
declare const kgml_Script_s_co_set_ranking_points = 101439;
declare const kgml_Script_s_co_reset_teams_rank = 101440;
declare const kgml_Script_s_co_update_fix_rank = 101441;
declare const kgml_Script_s_get_prestige = 101442;
declare const kgml_Script_s_update_ranking_positions = 101443;
declare const kgml_Script_s_get_ranking_pos_data = 101444;
declare const kgml_Script_s_get_ranking_pos_data_prev = 101445;
declare const kgml_Script_s_get_ranking_pos_data_season = 101446;
declare const kgml_Script____struct___185_s_parse_ranking_pos_s_college_ranking = 101447;
declare const kgml_Script_s_parse_ranking_pos = 101448;
declare const kgml_Script_s_encode_ranking_pos = 101449;
declare const kgml_Script_s_save_ranking_pos_end_of_season = 101450;
declare const kgml_Script_s_get_ranking_pos_last_season = 101451;
declare const kgml_Script_s_is_preseason_for_ranking = 101452;
declare const kgml_Script_s_update_rank_after_admission_draft = 101453;
declare const kgml_Script_s_get_ranking_pct_last_season = 101454;
declare const kgml_GlobalScript_s_college_reputation = 101455;
declare const kgml_Script_s_get_team_offense_with_reputation_boost = 101456;
declare const kgml_Script_s_get_team_defense_with_reputation_boost = 101457;
declare const kgml_Script_s_get_strength_with_reputation_boost = 101458;
declare const kgml_Script_s_get_reputation_points = 101459;
declare const kgml_Script_s_update_fixture_teams_reputation = 101460;
declare const kgml_Script_s_has_reputation_point = 101461;
declare const kgml_Script_s_update_all_teams_reputation = 101462;
declare const kgml_Script_s_update_team_reputation_flag = 101463;
declare const kgml_Script_s_update_team_reputation = 101464;
declare const kgml_Script_s_get_team_reputation_data = 101465;
declare const kgml_Script_s_set_team_reputation_data = 101466;
declare const kgml_Script_s_convert_reputation_string_to_data = 101467;
declare const kgml_Script_s_convert_reputation_data_to_string = 101468;
declare const kgml_Script____struct___186_s_create_reputation_data_s_college_reputation = 101469;
declare const kgml_Script_s_create_reputation_data = 101470;
declare const kgml_Script_s_update_reputation_data = 101471;
declare const kgml_Script_s_is_reputation_string_updated = 101472;
declare const kgml_Script_s_is_reputation_data_updated = 101473;
declare const kgml_Script_s_get_reputation_string_points = 101474;
declare const kgml_Script_s_get_reputation_data_points = 101475;
declare const kgml_Script_s_reputation_data_test = 101476;
declare const kgml_GlobalScript_s_college_room_tools = 101477;
declare const kgml_Script____struct___187 = 101478;
declare const kgml_Script_s_goto_room = 101479;
declare const kgml_Script_anon_653_s_init_rm_s_college_room_tools = 101480;
declare const kgml_Script_s_init_rm = 101481;
declare const kgml_Script____struct___188_s_destroy_rm_s_college_room_tools = 101482;
declare const kgml_Script_s_destroy_rm = 101483;
declare const kgml_Script____struct___189_s_create_title_s_college_room_tools = 101484;
declare const kgml_Script_s_create_title = 101485;
declare const kgml_Script_s_create_button = 101486;
declare const kgml_Script_anon_1336_s_destroy_dynamic_buttons_s_college_room_tools = 101487;
declare const kgml_Script_s_destroy_dynamic_buttons = 101488;
declare const kgml_Script____struct___190_s_calc_grid_coords_s_college_room_tools = 101489;
declare const kgml_Script_s_calc_grid_coords = 101490;
declare const kgml_Script____struct___191_s_show_rm_winners_s_college_room_tools = 101491;
declare const kgml_Script_s_show_rm_winners = 101492;
declare const kgml_GlobalScript_s_college_sorting = 101493;
declare const kgml_Script_s_co_teams_data_sort_rank = 101494;
declare const kgml_Script_s_co_teams_data_sort_rank_season = 101495;
declare const kgml_Script_s_co_teams_data_sort_rank_common = 101496;
declare const kgml_Script_s_calc_rank_avgpts = 101497;
declare const kgml_Script_s_co_teams_data_sort_rank_pos = 101498;
declare const kgml_Script_s_co_teams_data_sort_pct = 101499;
declare const kgml_Script_s_co_teams_data_sort_pct_quick = 101500;
declare const kgml_Script_s_co_teams_data_sort_conf_wins_losses = 101501;
declare const kgml_Script_s_co_teams_data_sort_wins_rank = 101502;
declare const kgml_Script____struct___192_s_create_team_data_array_s_college_sorting = 101503;
declare const kgml_Script_s_create_team_data_array = 101504;
declare const kgml_Script_s_update_team_data_rank_pos = 101505;
declare const kgml_Script_s_team_data_array_add_formatted_data = 101506;
declare const kgml_Script_s_co_teams_tiebreak = 101507;
declare const kgml_Script_s_co_teams_tiebreak_record_next_best_placed_division = 101508;
declare const kgml_GlobalScript_s_college_tools = 101509;
declare const kgml_Script_s_college_set_up_globals = 101510;
declare const kgml_Script_s_college_age_index = 101511;
declare const kgml_Script_s_college_age_label = 101512;
declare const kgml_Script_s_college_age_simple = 101513;
declare const kgml_Script_s_college_age_simple_other = 101514;
declare const kgml_Script_s_college_age_simple_short = 101515;
declare const kgml_Script_s_college_shorter_season = 101516;
declare const kgml_Script_s_college_academics_type = 101517;
declare const kgml_Script_s_college_correct_new_player = 101518;
declare const kgml_Script_s_get_random_hobby = 101519;
declare const kgml_Script_s_get_hobby_name = 101520;
declare const kgml_Script_s_get_hobby_from_uid = 101521;
declare const kgml_Script_s_is_player_hobby_fraternity = 101522;
declare const kgml_Script_s_get_random_study_subject = 101523;
declare const kgml_Script_s_get_study_subject_from_uid = 101524;
declare const kgml_Script_s_get_study_subject_name_from_uid = 101525;
declare const kgml_Script_s_get_minor_name = 101526;
declare const kgml_Script_s_get_major_name = 101527;
declare const kgml_Script_s_get_study_info = 101528;
declare const kgml_Script_s_get_random_trait = 101529;
declare const kgml_Script_s_get_trait_name = 101530;
declare const kgml_Script_s_get_trait_from_uid = 101531;
declare const kgml_Script_s_get_random_hometown = 101532;
declare const kgml_Script_s_get_hometown_name = 101533;
declare const kgml_Script_s_get_only_hometown_name = 101534;
declare const kgml_Script_s_get_only_state_name = 101535;
declare const kgml_Script_s_get_hometown_from_uid = 101536;
declare const kgml_Script_s_pick_rand_epilogue_uid = 101537;
declare const kgml_Script_s_get_epilogue_name = 101538;
declare const kgml_Script_s_epilogue_tests = 101539;
declare const kgml_Script_s_pick_epilogue_story = 101540;
declare const kgml_Script_s_epilogue_story_to_str = 101541;
declare const kgml_Script_s_try_get_teamname_from_uid_or_name = 101542;
declare const kgml_Script_s_add_cv_entry_from_key = 101543;
declare const kgml_Script_s_add_cv_entry_direct = 101544;
declare const kgml_Script_s_get_random_cv_entry = 101545;
declare const kgml_Script_s_extract_cv_entry_from_pool = 101546;
declare const kgml_Script_s_set_cv_list_from_player = 101547;
declare const kgml_Script_s_add_cv_list_entry = 101548;
declare const kgml_Script_split_into_chunks = 101549;
declare const kgml_Script_btn_response_player_meeting_academic_coaching = 101550;
declare const kgml_Script_s_get_meeting_cost_academic_coaching = 101551;
declare const kgml_Script_s_is_co_mode = 101552;
declare const kgml_Script_s_is_co_postseason = 101553;
declare const kgml_Script_s_is_co_actual_postseason = 101554;
declare const kgml_Script_s_is_co_endseason_lastweek = 101555;
declare const kgml_Script_s_is_co_offseason = 101556;
declare const kgml_Script_s_get_postseason_chunk = 101557;
declare const kgml_Script_s_is_earlier_than = 101558;
declare const kgml_Script_s_get_skip_to_week = 101559;
declare const kgml_Script_s_is_co_team = 101560;
declare const kgml_Script_s_get_conference_list = 101561;
declare const kgml_Script_s_get_team_list_by_tier = 101562;
declare const kgml_Script_s_get_team_list = 101563;
declare const kgml_Script_s_count_joboffers_conference = 101564;
declare const kgml_Script_s_co_get_year = 101565;
declare const kgml_Script_s_get_this_year = 101566;
declare const kgml_Script_s_get_next_year = 101567;
declare const kgml_Script_s_get_my_conference_uid = 101568;
declare const kgml_Script_s_get_my_conference_data = 101569;
declare const kgml_Script_s_get_conference_data = 101570;
declare const kgml_Script_s_get_my_division = 101571;
declare const kgml_Script_s_get_subdivision = 101572;
declare const kgml_Script_s_get_teams_subdivision_diff = 101573;
declare const kgml_Script_s_get_team_pct_cnf = 101574;
declare const kgml_Script_s_is_independent_team = 101575;
declare const kgml_Script_s_is_independent_conference_id = 101576;
declare const kgml_Script_s_is_independent_conference = 101577;
declare const kgml_Script_s_co_set_strength_boost = 101578;
declare const kgml_Script_anon_32947_strength_boost_s_college_tools = 101579;
declare const kgml_Script_strength_boost = 101580;
declare const kgml_Script_s_is_co_bowl_week = 101581;
declare const kgml_Script_s_is_co_bowl_fix = 101582;
declare const kgml_Script_s_is_co_bowl_comp = 101583;
declare const kgml_Script____struct___193_s_get_object_data_s_college_tools = 101584;
declare const kgml_Script_s_get_object_data = 101585;
declare const kgml_Script_s_get_map = 101586;
declare const kgml_Script_s_get_map_real = 101587;
declare const kgml_Script_s_map_swap = 101588;
declare const kgml_Script_s_get_save_slot = 101589;
declare const kgml_Script_s_get_week_name = 101590;
declare const kgml_Script_s_get_my_conference_division_string = 101591;
declare const kgml_Script_s_get_fix_competition_string = 101592;
declare const kgml_Script_s_get_competition_string = 101593;
declare const kgml_Script_s_get_fix_location_string = 101594;
declare const kgml_Script_s_get_my_subdivision_string = 101595;
declare const kgml_Script_s_get_subdiv_name = 101596;
declare const kgml_Script_s_joboffers_string = 101597;
declare const kgml_Script_s_get_pct_string = 101598;
declare const kgml_Script_s_get_comp_level_str = 101599;
declare const kgml_Script_s_get_comp_level_str_plain = 101600;
declare const kgml_Script_s_get_difficulty_str = 101601;
declare const kgml_Script_s_is_ps_chunk_filled = 101602;
declare const kgml_Script_s_is_week_played = 101603;
declare const kgml_Script_s_is_human_in_week = 101604;
declare const kgml_Script_s_is_human_fix = 101605;
declare const kgml_Script_s_get_next_college_human_fixture = 101606;
declare const kgml_Script_s_update_week_done = 101607;
declare const kgml_Script_s_is_week_done = 101608;
declare const kgml_Script_s_is_fix_played = 101609;
declare const kgml_Script_s_is_fix_filled = 101610;
declare const kgml_Script_s_is_fix_on_neutral_ground = 101611;
declare const kgml_Script_s_season_competitions_done = 101612;
declare const kgml_Script_s_get_fix_away_team_id = 101613;
declare const kgml_Script_s_get_fix_home_team_id = 101614;
declare const kgml_Script_s_get_fix_by_competition_id = 101615;
declare const kgml_Script_s_get_fix_by_match_id = 101616;
declare const kgml_Script_s_get_fix_winner_id = 101617;
declare const kgml_Script_s_get_fix_by_week_and_teams = 101618;
declare const kgml_Script_s_is_southland = 101619;
declare const kgml_Script_s_sl_week_str = 101620;
declare const kgml_Script_s_sl_get_week_date = 101621;
declare const kgml_GlobalScript_s_color_picker = 101622;
declare const kgml_Script_s_color_picker = 101623;
declare const kgml_GlobalScript_s_color_to_hex = 101624;
declare const kgml_Script_s_color_to_hex = 101625;
declare const kgml_GlobalScript_s_complete_achievement = 101626;
declare const kgml_GlobalScript_s_confirm_freeagent_hire_reset = 101627;
declare const kgml_Script_s_confirm_freeagent_hire_reset = 101628;
declare const kgml_GlobalScript_s_confirm_staff_hire_reset = 101629;
declare const kgml_Script_s_confirm_staff_hire_reset = 101630;
declare const kgml_GlobalScript_s_confirm_upgrade_rehab = 101631;
declare const kgml_Script_s_confirm_upgrade_rehab = 101632;
declare const kgml_GlobalScript_s_confirm_upgrade_stadium = 101633;
declare const kgml_Script_s_confirm_upgrade_stadium = 101634;
declare const kgml_GlobalScript_s_confirm_upgrade_training = 101635;
declare const kgml_Script_s_confirm_upgrade_training = 101636;
declare const kgml_GlobalScript_s_convert_scrimmage_to_goal_distance = 101637;
declare const kgml_Script_s_convert_scrimmage_to_goal_distance = 101638;
declare const kgml_GlobalScript_s_convert_string_to_sprite = 101639;
declare const kgml_Script_s_convert_string_to_sprite = 101640;
declare const kgml_GlobalScript_s_convert_uniform_colour = 101641;
declare const kgml_Script_s_convert_uniform_colour = 101642;
declare const kgml_GlobalScript_s_convert_uniform_colours_all = 101643;
declare const kgml_Script_s_convert_uniform_colours_all = 101644;
declare const kgml_GlobalScript_s_copy_teamnames_from_uniform_file = 101645;
declare const kgml_Script_s_copy_teamnames_from_uniform_file = 101646;
declare const kgml_GlobalScript_s_copy_uniforms_slot_a = 101647;
declare const kgml_Script_s_copy_uniforms_slot_a = 101648;
declare const kgml_GlobalScript_s_copy_uniforms_slot_b = 101649;
declare const kgml_Script_s_copy_uniforms_slot_b = 101650;
declare const kgml_GlobalScript_s_copy_uniforms_slot_c = 101651;
declare const kgml_Script_s_copy_uniforms_slot_c = 101652;
declare const kgml_GlobalScript_s_copy_uniforms_slot_d = 101653;
declare const kgml_Script_s_copy_uniforms_slot_d = 101654;
declare const kgml_GlobalScript_s_copy_uniforms_slot_e = 101655;
declare const kgml_Script_s_copy_uniforms_slot_e = 101656;
declare const kgml_GlobalScript_s_count_achievement = 101657;
declare const kgml_GlobalScript_s_count_defenders = 101658;
declare const kgml_Script_s_count_defenders = 101659;
declare const kgml_GlobalScript_s_count_full_seasons = 101660;
declare const kgml_Script_s_count_full_seasons = 101661;
declare const kgml_Script_s_count_games_coached = 101662;
declare const kgml_Script_s_count_games_simmed = 101663;
declare const kgml_Script_s_count_fixtures_played = 101664;
declare const kgml_GlobalScript_s_count_hires_by_position = 101665;
declare const kgml_Script_s_count_hires_by_position = 101666;
declare const kgml_GlobalScript_s_count_hof_entries = 101667;
declare const kgml_Script_s_count_hof_entries = 101668;
declare const kgml_GlobalScript_s_count_injuries_weeks = 101669;
declare const kgml_Script_s_count_injuries_weeks = 101670;
declare const kgml_GlobalScript_s_count_injuries = 101671;
declare const kgml_Script_s_count_injuries = 101672;
declare const kgml_GlobalScript_s_count_joboffers = 101673;
declare const kgml_Script_s_count_joboffers = 101674;
declare const kgml_GlobalScript_s_count_players_by_position_store = 101675;
declare const kgml_Script_s_count_players_by_position_store = 101676;
declare const kgml_GlobalScript_s_count_players_by_position = 101677;
declare const kgml_Script_s_count_players_by_position = 101678;
declare const kgml_GlobalScript_s_count_players_onfield_by_position = 101679;
declare const kgml_Script_s_count_players_onfield_by_position = 101680;
declare const kgml_GlobalScript_s_count_remaining_fixtures = 101681;
declare const kgml_Script_s_count_remaining_fixtures = 101682;
declare const kgml_GlobalScript_s_count_simmed_games = 101683;
declare const kgml_Script_s_count_simmed_games = 101684;
declare const kgml_GlobalScript_s_count_trait_fanfavorite = 101685;
declare const kgml_Script_s_count_trait_fanfavorite = 101686;
declare const kgml_GlobalScript_s_count_trait_scout = 101687;
declare const kgml_Script_s_count_trait_scout = 101688;
declare const kgml_GlobalScript_s_cover_object = 101689;
declare const kgml_Script_s_cover_object = 101690;
declare const kgml_GlobalScript_s_cpu_is_kicking = 101691;
declare const kgml_Script_s_cpu_is_kicking_off = 101692;
declare const kgml_Script_s_is_kickoff = 101693;
declare const kgml_GlobalScript_s_crazygames = 101694;
declare const kgml_Script__crazygames_init = 101695;
declare const kgml_Script__crazygames_gameplay_start = 101696;
declare const kgml_Script__crazygames_gameplay_stop = 101697;
declare const kgml_Script__crazygames_pause = 101698;
declare const kgml_Script__crazygames_resume = 101699;
declare const kgml_Script__crazygames_rewarded_break = 101700;
declare const kgml_Script__crazygames_midgame_break = 101701;
declare const kgml_Script_gmcallback_crazy_callback = 101702;
declare const kgml_GlobalScript_s_create_boundary = 101703;
declare const kgml_Script_s_create_boundary = 101704;
declare const kgml_GlobalScript_s_create_camera = 101705;
declare const kgml_Script_s_create_camera = 101706;
declare const kgml_GlobalScript_s_create_credit = 101707;
declare const kgml_Script_s_create_credit = 101708;
declare const kgml_GlobalScript_s_create_dilemma = 101709;
declare const kgml_Script_s_create_dilemma = 101710;
declare const kgml_GlobalScript_s_create_draftlist = 101711;
declare const kgml_Script_s_create_draftlist = 101712;
declare const kgml_Script_s_co_get_player_admission_max_skill = 101713;
declare const kgml_GlobalScript_s_create_dummy = 101714;
declare const kgml_Script_s_create_dummy = 101715;
declare const kgml_GlobalScript_s_create_fixdata = 101716;
declare const kgml_Script_s_create_fixdata = 101717;
declare const kgml_GlobalScript_s_create_freeagent = 101718;
declare const kgml_Script_s_create_freeagent = 101719;
declare const kgml_GlobalScript_s_create_freeagentlist = 101720;
declare const kgml_Script_s_create_freeagentlist = 101721;
declare const kgml_GlobalScript_s_create_hirelist = 101722;
declare const kgml_Script_s_create_hirelist = 101723;
declare const kgml_GlobalScript_s_create_map_options = 101724;
declare const kgml_Script_s_create_map_options = 101725;
declare const kgml_GlobalScript_s_create_match_message = 101726;
declare const kgml_Script_s_create_match_message = 101727;
declare const kgml_Script_s_create_head2head_message = 101728;
declare const kgml_GlobalScript_s_create_message = 101729;
declare const kgml_Script_s_create_message = 101730;
declare const kgml_Script_s_message_recenter = 101731;
declare const kgml_Script_s_message_toggle = 101732;
declare const kgml_Script_s_create_message3 = 101733;
declare const kgml_Script_s_create_message4 = 101734;
declare const kgml_Script_s_do_message = 101735;
declare const kgml_Script_s_msg = 101736;
declare const kgml_Script_s_loading_button_hijack = 101737;
declare const kgml_Script_s_loading_trigger = 101738;
declare const kgml_Script____struct___194_s_loading_start_s_create_message = 101739;
declare const kgml_Script_s_loading_start = 101740;
declare const kgml_Script_s_loading_callback = 101741;
declare const kgml_GlobalScript_s_create_my_fixture_list = 101742;
declare const kgml_Script_s_create_my_fixture_list = 101743;
declare const kgml_GlobalScript_s_create_new_roster_newteam = 101744;
declare const kgml_Script_s_create_new_roster_newteam = 101745;
declare const kgml_Script_s_create_new_roster_cut_old_roster = 101746;
declare const kgml_GlobalScript_s_create_new_roster = 101747;
declare const kgml_Script_s_create_new_roster = 101748;
declare const kgml_GlobalScript_s_create_new_save = 101749;
declare const kgml_Script_s_create_new_save = 101750;
declare const kgml_Script_s_regen_clean_save_mode_dependent_data = 101751;
declare const kgml_Script_s_load_co_mode_files = 101752;
declare const kgml_GlobalScript_s_create_new_stafflist = 101753;
declare const kgml_Script_s_create_new_stafflist = 101754;
declare const kgml_GlobalScript_s_create_news_message = 101755;
declare const kgml_Script_s_create_news_dyn_message = 101756;
declare const kgml_GlobalScript_s_create_player_storelist = 101757;
declare const kgml_Script_s_create_player_storelist = 101758;
declare const kgml_GlobalScript_s_create_player = 101759;
declare const kgml_Script_s_create_player_get_RC_cost = 101760;
declare const kgml_Script_s_create_player = 101761;
declare const kgml_GlobalScript_s_create_playoffs = 101762;
declare const kgml_Script_s_create_playoffs = 101763;
declare const kgml_GlobalScript_s_create_playoffs2 = 101764;
declare const kgml_Script_s_create_playoffs2 = 101765;
declare const kgml_GlobalScript_s_create_staff = 101766;
declare const kgml_Script_s_create_staff = 101767;
declare const kgml_Script_s_create_headcoach_pmap = 101768;
declare const kgml_GlobalScript_s_create_storelist = 101769;
declare const kgml_Script_s_create_storelist = 101770;
declare const kgml_GlobalScript_s_create_tradelist = 101771;
declare const kgml_Script_s_create_tradelist = 101772;
declare const kgml_GlobalScript_s_crop_text = 101773;
declare const kgml_Script_s_crop_text = 101774;
declare const kgml_GlobalScript_s_dec_to_hex = 101775;
declare const kgml_Script_s_dec_to_hex = 101776;
declare const kgml_GlobalScript_s_decline_facilities = 101777;
declare const kgml_Script_s_decline_facilities = 101778;
declare const kgml_GlobalScript_s_destroy_master = 101779;
declare const kgml_Script_s_destroy_master = 101780;
declare const kgml_GlobalScript_s_destroy_match_objects = 101781;
declare const kgml_Script_s_destroy_match_objects = 101782;
declare const kgml_GlobalScript_s_dilemma_choice_1 = 101783;
declare const kgml_Script_s_dilemma_choice_1 = 101784;
declare const kgml_GlobalScript_s_dilemma_choice_2 = 101785;
declare const kgml_Script_s_dilemma_choice_2 = 101786;
declare const kgml_GlobalScript_s_dilemma_choice = 101787;
declare const kgml_Script_s_dilemma_choice = 101788;
declare const kgml_Script_s_cut_player_end = 101789;
declare const kgml_Script_s_cut_player_end_gpa = 101790;
declare const kgml_Script_s_cut_player_end_toxic = 101791;
declare const kgml_Script_s_cut_player_end_party = 101792;
declare const kgml_Script_s_cut_player_end_toxic_max = 101793;
declare const kgml_Script_s_cut_player_end_party_max = 101794;
declare const kgml_Script_s_dilemma_morecc_store = 101795;
declare const kgml_Script_s_dilemma_morecc_back = 101796;
declare const kgml_Script_s_dilemma_end = 101797;
declare const kgml_Script_s_dilemma_college_check_chained = 101798;
declare const kgml_Script_s_dilemma_college_check_pending_news = 101799;
declare const kgml_GlobalScript_s_do_audible = 101800;
declare const kgml_Script_s_do_audible = 101801;
declare const kgml_GlobalScript_s_do_banner_draft = 101802;
declare const kgml_Script_s_do_banner_draft = 101803;
declare const kgml_Script_s_do_banner_season_review = 101804;
declare const kgml_GlobalScript_s_do_bye_week = 101805;
declare const kgml_Script_s_do_bye_week = 101806;
declare const kgml_GlobalScript_s_do_info_coachtrait = 101807;
declare const kgml_Script_s_do_info_coachtrait = 101808;
declare const kgml_GlobalScript_s_do_info_draftpicks = 101809;
declare const kgml_Script_s_do_info_draftpicks = 101810;
declare const kgml_GlobalScript_s_do_info_position = 101811;
declare const kgml_Script_s_do_info_position = 101812;
declare const kgml_GlobalScript_s_do_info_skills = 101813;
declare const kgml_Script_s_do_info_skills = 101814;
declare const kgml_GlobalScript_s_do_info = 101815;
declare const kgml_Script_s_do_info = 101816;
declare const kgml_Script_s_info_draft_col1 = 101817;
declare const kgml_Script_s_info_draft_col2 = 101818;
declare const kgml_GlobalScript_s_do_nag_message = 101819;
declare const kgml_Script_s_do_nag_message = 101820;
declare const kgml_Script_s_do_ad_retrogoal = 101821;
declare const kgml_GlobalScript_s_do_next_week = 101822;
declare const kgml_Script_s_do_next_week = 101823;
declare const kgml_GlobalScript_s_do_player_awards = 101824;
declare const kgml_Script_s_do_player_awards = 101825;
declare const kgml_Script_s_do_player_awards_college = 101826;
declare const kgml_Script_s_Award_OutstandingPOTY = 101827;
declare const kgml_Script_s_Award_ExtraordinaryAcademicPOTY = 101828;
declare const kgml_Script_s_Award_OffensivePOTY = 101829;
declare const kgml_Script_s_Award_DefensivePOTY = 101830;
declare const kgml_Script_s_Award_PositionPOTY = 101831;
declare const kgml_Script_s_Award_AnyPositionPOTY = 101832;
declare const kgml_Script_s_Award_CommunityServicePOTY = 101833;
declare const kgml_Script_s_Award_WalkOnPOTY = 101834;
declare const kgml_Script_s_Award_FreshmanPOTY = 101835;
declare const kgml_Script_s_Award_AcademicPrize = 101836;
declare const kgml_GlobalScript_s_do_playoff_schedule = 101837;
declare const kgml_Script_s_do_playoff_schedule = 101838;
declare const kgml_Script_s_get_retrobowl_mvp_winner = 101839;
declare const kgml_GlobalScript_s_do_postmatch_dilemma = 101840;
declare const kgml_Script_s_do_postmatch_dilemma = 101841;
declare const kgml_GlobalScript_s_do_postmatch_effects = 101842;
declare const kgml_Script_s_do_postmatch_effects = 101843;
declare const kgml_GlobalScript_s_do_postmatch_fans = 101844;
declare const kgml_Script_s_do_postmatch_fans = 101845;
declare const kgml_Script_s_get_postmatch_fans_qb = 101846;
declare const kgml_GlobalScript_s_do_prematch_dilemma_qb = 101847;
declare const kgml_Script_s_do_prematch_dilemma_qb = 101848;
declare const kgml_GlobalScript_s_do_prematch_dilemma = 101849;
declare const kgml_Script_s_do_prematch_dilemma = 101850;
declare const kgml_Script_s_create_dilemma_news = 101851;
declare const kgml_Script_s_clear_msg_and_back = 101852;
declare const kgml_Script_s_get_standard_dilemmas = 101853;
declare const kgml_Script_s_dilemma_defend_player_cost = 101854;
declare const kgml_Script_s_can_afford_dilemma_cc = 101855;
declare const kgml_Script_s_get_college_dilemmas = 101856;
declare const kgml_GlobalScript_s_do_purchase_message = 101857;
declare const kgml_Script_s_do_purchase_message = 101858;
declare const kgml_GlobalScript_s_do_result_news_qb = 101859;
declare const kgml_Script_s_do_result_news_qb = 101860;
declare const kgml_Script_s_choose_news = 101861;
declare const kgml_GlobalScript_s_do_result_news = 101862;
declare const kgml_Script_s_do_result_news = 101863;
declare const kgml_GlobalScript_s_do_review_message = 101864;
declare const kgml_Script_s_do_review_message = 101865;
declare const kgml_GlobalScript_s_do_schedule = 101866;
declare const kgml_Script_s_do_schedule = 101867;
declare const kgml_Script____struct___195_s_co_get_sim_results_s_do_schedule = 101868;
declare const kgml_Script_s_co_get_sim_results = 101869;
declare const kgml_Script_s_co_conference_stats = 101870;
declare const kgml_GlobalScript_s_do_timeout = 101871;
declare const kgml_Script_s_do_timeout = 101872;
declare const kgml_GlobalScript_s_do_touchback = 101873;
declare const kgml_Script_s_do_touchback = 101874;
declare const kgml_GlobalScript_s_draw_commentary = 101875;
declare const kgml_Script_s_draw_commentary = 101876;
declare const kgml_GlobalScript_s_draw_gamepad_controls = 101877;
declare const kgml_Script_s_draw_gamepad_controls = 101878;
declare const kgml_GlobalScript_s_draw_kick_cone = 101879;
declare const kgml_Script_s_draw_kick_cone = 101880;
declare const kgml_GlobalScript_s_draw_kicking_power = 101881;
declare const kgml_Script_s_draw_kicking_power = 101882;
declare const kgml_GlobalScript_s_draw_my_route = 101883;
declare const kgml_Script_s_draw_my_route = 101884;
declare const kgml_GlobalScript_s_draw_player_image = 101885;
declare const kgml_Script_s_draw_player_image = 101886;
declare const kgml_GlobalScript_s_draw_scoreboard_qb_training = 101887;
declare const kgml_Script_s_draw_scoreboard_qb_training = 101888;
declare const kgml_GlobalScript_s_draw_scoreboard = 101889;
declare const kgml_Script_s_draw_scoreboard = 101890;
declare const kgml_Script_s_get_exhibition_turn_text = 101891;
declare const kgml_GlobalScript_s_draw_scrimmage = 101892;
declare const kgml_Script_s_draw_scrimmage = 101893;
declare const kgml_GlobalScript_s_draw_wind = 101894;
declare const kgml_Script_s_draw_wind = 101895;
declare const kgml_GlobalScript_s_drop_ball = 101896;
declare const kgml_Script_s_drop_ball = 101897;
declare const kgml_GlobalScript_s_edit_cancel = 101898;
declare const kgml_Script_s_edit_cancel = 101899;
declare const kgml_GlobalScript_s_edit_confirm_conf1 = 101900;
declare const kgml_Script_s_edit_confirm_conf1 = 101901;
declare const kgml_GlobalScript_s_edit_confirm_conf2 = 101902;
declare const kgml_Script_s_edit_confirm_conf2 = 101903;
declare const kgml_GlobalScript_s_edit_confirm_div1 = 101904;
declare const kgml_Script_s_edit_confirm_div1 = 101905;
declare const kgml_GlobalScript_s_edit_confirm_div2 = 101906;
declare const kgml_Script_s_edit_confirm_div2 = 101907;
declare const kgml_GlobalScript_s_edit_confirm_div3 = 101908;
declare const kgml_Script_s_edit_confirm_div3 = 101909;
declare const kgml_GlobalScript_s_edit_confirm_div4 = 101910;
declare const kgml_Script_s_edit_confirm_div4 = 101911;
declare const kgml_GlobalScript_s_edit_confirm_profile = 101912;
declare const kgml_Script_s_edit_confirm_profile = 101913;
declare const kgml_Script_s_update_boss_profile = 101914;
declare const kgml_GlobalScript_s_edit_field = 101915;
declare const kgml_Script_s_edit_field = 101916;
declare const kgml_GlobalScript_s_edit_name = 101917;
declare const kgml_Script_s_edit_name = 101918;
declare const kgml_GlobalScript_s_end_draft_round = 101919;
declare const kgml_Script_s_end_draft_round = 101920;
declare const kgml_Script_s_destroy_draftlist = 101921;
declare const kgml_GlobalScript_s_end_match = 101922;
declare const kgml_Script_s_end_match = 101923;
declare const kgml_GlobalScript_s_end_replay = 101924;
declare const kgml_Script_s_end_replay = 101925;
declare const kgml_GlobalScript_s_fieldtxt_yards = 101926;
declare const kgml_GlobalScript_s_fieldtxt = 101927;
declare const kgml_Script_s_fieldtxt = 101928;
declare const kgml_Script_s_fieldtxt_yards = 101929;
declare const kgml_Script_s_fieldimg = 101930;
declare const kgml_GlobalScript_s_find_default_button = 101931;
declare const kgml_Script_s_find_default_button = 101932;
declare const kgml_GlobalScript_s_find_gamepad = 101933;
declare const kgml_Script_s_find_gamepad = 101934;
declare const kgml_Script_s_gamepad_is_fingerprint_sensor = 101935;
declare const kgml_GlobalScript_s_fire_coach = 101936;
declare const kgml_Script_s_fire_coach = 101937;
declare const kgml_GlobalScript_s_force_quit = 101938;
declare const kgml_Script_s_force_quit = 101939;
declare const kgml_GlobalScript_s_format_hex_color = 101940;
declare const kgml_Script_s_format_hex_color = 101941;
declare const kgml_GlobalScript_s_freeze_purchase_buttons = 101942;
declare const kgml_Script_s_freeze_purchase_buttons = 101943;
declare const kgml_GlobalScript_s_generate_uid = 101944;
declare const kgml_Script_s_generate_uid = 101945;
declare const kgml_GlobalScript_s_get_achievement_percentage = 101946;
declare const kgml_GlobalScript_s_get_achievement = 101947;
declare const kgml_GlobalScript_s_get_aim_direction = 101948;
declare const kgml_Script_s_get_aim_direction = 101949;
declare const kgml_GlobalScript_s_get_attitude_icon = 101950;
declare const kgml_Script_s_get_attitude_icon = 101951;
declare const kgml_Script_s_attitude_reduce_step = 101952;
declare const kgml_GlobalScript_s_get_average_yards = 101953;
declare const kgml_Script_s_get_average_yards = 101954;
declare const kgml_GlobalScript_s_get_coach_cost = 101955;
declare const kgml_Script_s_get_coach_cost = 101956;
declare const kgml_GlobalScript_s_get_condition_squad = 101957;
declare const kgml_Script_s_get_condition_squad = 101958;
declare const kgml_Script_s_get_condition_squad_from_roster = 101959;
declare const kgml_GlobalScript_s_get_credit = 101960;
declare const kgml_Script_s_get_credit = 101961;
declare const kgml_GlobalScript_s_get_defense_attribute = 101962;
declare const kgml_Script_s_get_defense_attribute = 101963;
declare const kgml_Script_s_get_attribute = 101964;
declare const kgml_Script_s_attribute_buff = 101965;
declare const kgml_GlobalScript_s_get_destination = 101966;
declare const kgml_Script_s_get_destination = 101967;
declare const kgml_GlobalScript_s_get_distance_to_furthest_teammate = 101968;
declare const kgml_Script_s_get_distance_to_furthest_teammate = 101969;
declare const kgml_GlobalScript_s_get_distance_to_nearest_opponent = 101970;
declare const kgml_Script_s_get_distance_to_nearest_opponent = 101971;
declare const kgml_GlobalScript_s_get_division_winner_by_seed = 101972;
declare const kgml_Script_s_get_division_winner_by_seed = 101973;
declare const kgml_GlobalScript_s_get_division_winner_name_by_seed = 101974;
declare const kgml_Script_s_get_division_winner_name_by_seed = 101975;
declare const kgml_GlobalScript_s_get_division_winner_name = 101976;
declare const kgml_Script_s_get_division_winner_name = 101977;
declare const kgml_GlobalScript_s_get_division_winner = 101978;
declare const kgml_Script_s_get_division_winner = 101979;
declare const kgml_GlobalScript_s_get_happiness = 101980;
declare const kgml_Script_s_get_happiness = 101981;
declare const kgml_GlobalScript_s_get_hire_shortlist = 101982;
declare const kgml_Script_s_get_hire_shortlist = 101983;
declare const kgml_GlobalScript_s_get_history_by_year = 101984;
declare const kgml_GlobalScript_s_get_holder_name = 101985;
declare const kgml_Script_s_get_holder_name = 101986;
declare const kgml_GlobalScript_s_get_human_fixture_by_week = 101987;
declare const kgml_Script_s_get_human_fixture_by_week = 101988;
declare const kgml_GlobalScript_s_get_human_fixture_next = 101989;
declare const kgml_Script_s_get_human_fixture_next = 101990;
declare const kgml_GlobalScript_s_get_human_fixture_previous = 101991;
declare const kgml_Script_s_get_human_fixture_previous = 101992;
declare const kgml_GlobalScript_s_get_kick_direction = 101993;
declare const kgml_Script_s_get_kick_direction = 101994;
declare const kgml_GlobalScript_s_get_kicker_name = 101995;
declare const kgml_Script_s_get_kicker_name = 101996;
declare const kgml_GlobalScript_s_get_kicker = 101997;
declare const kgml_Script_s_get_kicker = 101998;
declare const kgml_GlobalScript_s_get_lifestyle = 101999;
declare const kgml_Script_s_get_lifestyle = 102000;
declare const kgml_GlobalScript_s_get_match_rating = 102001;
declare const kgml_Script_s_get_match_rating = 102002;
declare const kgml_GlobalScript_s_get_max_age_normal = 102003;
declare const kgml_Script_s_get_max_age_normal = 102004;
declare const kgml_GlobalScript_s_get_max_age = 102005;
declare const kgml_GlobalScript_s_get_meeting_cost_condition = 102006;
declare const kgml_Script_s_get_meeting_cost_condition = 102007;
declare const kgml_GlobalScript_s_get_meeting_cost_delay_retirement = 102008;
declare const kgml_Script_s_get_meeting_cost_delay_retirement = 102009;
declare const kgml_GlobalScript_s_get_meeting_cost_extend_contract = 102010;
declare const kgml_Script_s_get_meeting_cost_extend_contract = 102011;
declare const kgml_GlobalScript_s_get_meeting_cost_levelup = 102012;
declare const kgml_Script_s_get_meeting_cost_levelup = 102013;
declare const kgml_GlobalScript_s_get_meeting_cost_morale = 102014;
declare const kgml_Script_s_get_meeting_cost_morale = 102015;
declare const kgml_GlobalScript_s_get_morale = 102016;
declare const kgml_Script_s_get_morale = 102017;
declare const kgml_Script_s_get_morale_from_roster = 102018;
declare const kgml_GlobalScript_s_get_nearest_opponent_by_position = 102019;
declare const kgml_Script_s_get_nearest_opponent_by_position = 102020;
declare const kgml_GlobalScript_s_get_nearest_opponent = 102021;
declare const kgml_Script_s_get_nearest_opponent = 102022;
declare const kgml_GlobalScript_s_get_new_salary = 102023;
declare const kgml_Script_s_get_new_salary = 102024;
declare const kgml_GlobalScript_s_get_num_audibles = 102025;
declare const kgml_Script_s_get_num_audibles = 102026;
declare const kgml_GlobalScript_s_get_offer_team = 102027;
declare const kgml_Script_s_get_offer_team = 102028;
declare const kgml_GlobalScript_s_get_opponent_team_tla = 102029;
declare const kgml_Script_s_get_opponent_team_tla = 102030;
declare const kgml_GlobalScript_s_get_player_body_type = 102031;
declare const kgml_Script_s_get_player_body_type = 102032;
declare const kgml_Script_s_spr_from_bt = 102033;
declare const kgml_Script_s_is_spr_bodytype = 102034;
declare const kgml_Script_s_get_team_body_type = 102035;
declare const kgml_GlobalScript_s_get_player_by_lname = 102036;
declare const kgml_Script_s_get_player_by_lname = 102037;
declare const kgml_GlobalScript_s_get_player_by_position = 102038;
declare const kgml_Script_s_get_player_by_position = 102039;
declare const kgml_Script_s_get_player_by_position_from_roster = 102040;
declare const kgml_Script_s_get_player_kick_returner = 102041;
declare const kgml_GlobalScript_s_get_player_name_for_record = 102042;
declare const kgml_Script_s_get_player_name_for_record = 102043;
declare const kgml_GlobalScript_s_get_player_name = 102044;
declare const kgml_Script_s_get_player_name = 102045;
declare const kgml_GlobalScript_s_get_player_potential = 102046;
declare const kgml_Script_s_get_player_potential = 102047;
declare const kgml_GlobalScript_s_get_player_rating = 102048;
declare const kgml_Script_s_get_player_rating = 102049;
declare const kgml_GlobalScript_s_get_playoff_fixture_by_week = 102050;
declare const kgml_Script_s_get_playoff_fixture_by_week = 102051;
declare const kgml_GlobalScript_s_get_point_swing = 102052;
declare const kgml_Script_s_get_point_swing = 102053;
declare const kgml_Script_s_get_head_to_head = 102054;
declare const kgml_Script_s_get_win_pecentage_by_confdiv = 102055;
declare const kgml_GlobalScript_s_get_points_season = 102056;
declare const kgml_Script_s_get_points_season = 102057;
declare const kgml_GlobalScript_s_get_points_versus = 102058;
declare const kgml_Script_s_get_points_versus = 102059;
declare const kgml_GlobalScript_s_get_position_colour = 102060;
declare const kgml_Script_s_get_position_colour = 102061;
declare const kgml_GlobalScript_s_get_qb_energy = 102062;
declare const kgml_Script_s_get_qb_energy = 102063;
declare const kgml_GlobalScript_s_get_qb_name = 102064;
declare const kgml_Script_s_get_qb_name = 102065;
declare const kgml_GlobalScript_s_get_qb_pmap = 102066;
declare const kgml_Script_s_get_qb_pmap = 102067;
declare const kgml_GlobalScript_s_get_quarterback = 102068;
declare const kgml_Script_s_get_quarterback = 102069;
declare const kgml_GlobalScript_s_get_random_charity = 102070;
declare const kgml_Script_s_get_random_charity = 102071;
declare const kgml_GlobalScript_s_get_random_coach = 102072;
declare const kgml_Script_s_get_random_coach = 102073;
declare const kgml_GlobalScript_s_get_random_college_name = 102074;
declare const kgml_Script_s_get_random_college_name = 102075;
declare const kgml_GlobalScript_s_get_random_first_name = 102076;
declare const kgml_Script_s_get_random_first_name = 102077;
declare const kgml_GlobalScript_s_get_random_last_name = 102078;
declare const kgml_Script_s_get_random_last_name = 102079;
declare const kgml_GlobalScript_s_get_random_player_by_position = 102080;
declare const kgml_Script_s_get_random_player_by_position = 102081;
declare const kgml_Script_s_get_random_player_by_position_from_roster = 102082;
declare const kgml_GlobalScript_s_get_random_player_defensive = 102083;
declare const kgml_Script_s_get_random_player_defensive = 102084;
declare const kgml_GlobalScript_s_get_random_player_offensive = 102085;
declare const kgml_Script_s_get_random_player_offensive = 102086;
declare const kgml_GlobalScript_s_get_random_player = 102087;
declare const kgml_Script_s_get_random_player = 102088;
declare const kgml_GlobalScript_s_get_random_scoredata = 102089;
declare const kgml_Script_s_get_random_scoredata = 102090;
declare const kgml_Script_s_co_get_random_scoredata = 102091;
declare const kgml_GlobalScript_s_get_random_teamname = 102092;
declare const kgml_Script_s_get_random_teamname = 102093;
declare const kgml_Script_s_get_random_team_id = 102094;
declare const kgml_GlobalScript_s_get_record = 102095;
declare const kgml_Script_s_get_record = 102096;
declare const kgml_GlobalScript_s_get_required_position = 102097;
declare const kgml_Script_s_get_required_position = 102098;
declare const kgml_Script_s_get_required_position_no_QB_RB = 102099;
declare const kgml_GlobalScript_s_get_salary_cap_space = 102100;
declare const kgml_Script_s_get_salary_cap_space = 102101;
declare const kgml_GlobalScript_s_get_salary_total = 102102;
declare const kgml_Script_s_get_salary_total = 102103;
declare const kgml_GlobalScript_s_get_savename = 102104;
declare const kgml_Script_s_get_savename = 102105;
declare const kgml_GlobalScript_s_get_skin_colour_by_index = 102106;
declare const kgml_Script_s_get_skin_colour_by_index = 102107;
declare const kgml_GlobalScript_s_get_staff = 102108;
declare const kgml_Script_s_get_staff = 102109;
declare const kgml_GlobalScript_s_get_store_player_by_position = 102110;
declare const kgml_Script_s_get_store_player_by_position = 102111;
declare const kgml_GlobalScript_s_get_string_action_result = 102112;
declare const kgml_Script_s_get_string_action_result = 102113;
declare const kgml_GlobalScript_s_get_string_anim = 102114;
declare const kgml_Script_s_get_string_anim = 102115;
declare const kgml_GlobalScript_s_get_string_attitude = 102116;
declare const kgml_Script_s_get_string_attitude = 102117;
declare const kgml_GlobalScript_s_get_string_ball_state = 102118;
declare const kgml_Script_s_get_string_ball_state = 102119;
declare const kgml_GlobalScript_s_get_string_commstage = 102120;
declare const kgml_Script_s_get_string_commstage = 102121;
declare const kgml_GlobalScript_s_get_string_condition = 102122;
declare const kgml_Script_s_get_string_condition = 102123;
declare const kgml_GlobalScript_s_get_string_conference = 102124;
declare const kgml_Script_s_get_string_conference = 102125;
declare const kgml_GlobalScript_s_get_string_division = 102126;
declare const kgml_Script_s_get_string_division = 102127;
declare const kgml_GlobalScript_s_get_string_downand = 102128;
declare const kgml_Script_s_get_string_downand = 102129;
declare const kgml_GlobalScript_s_get_string_float = 102130;
declare const kgml_Script_s_get_string_float = 102131;
declare const kgml_GlobalScript_s_get_string_heshe = 102132;
declare const kgml_Script_s_get_string_heshe = 102133;
declare const kgml_GlobalScript_s_get_string_performance = 102134;
declare const kgml_Script_s_get_string_performance = 102135;
declare const kgml_GlobalScript_s_get_string_picks = 102136;
declare const kgml_Script_s_get_string_picks = 102137;
declare const kgml_GlobalScript_s_get_string_position_full = 102138;
declare const kgml_Script_s_get_string_position_full = 102139;
declare const kgml_GlobalScript_s_get_string_position = 102140;
declare const kgml_Script_s_get_string_position = 102141;
declare const kgml_GlobalScript_s_get_string_record = 102142;
declare const kgml_Script_s_get_string_record = 102143;
declare const kgml_Script_s_get_string_record_co_extended = 102144;
declare const kgml_Script_s_get_string_conf_tag = 102145;
declare const kgml_GlobalScript_s_get_string_save_details = 102146;
declare const kgml_Script_s_get_string_save_details = 102147;
declare const kgml_GlobalScript_s_get_string_sex = 102148;
declare const kgml_Script_s_get_string_sex = 102149;
declare const kgml_GlobalScript_s_get_string_state = 102150;
declare const kgml_Script_s_get_string_state = 102151;
declare const kgml_GlobalScript_s_get_string_time = 102152;
declare const kgml_Script_s_get_string_time = 102153;
declare const kgml_GlobalScript_s_get_string_trade_value = 102154;
declare const kgml_Script_s_get_string_trade_value = 102155;
declare const kgml_GlobalScript_s_get_string_trait = 102156;
declare const kgml_Script_s_get_string_trait = 102157;
declare const kgml_GlobalScript_s_get_string_week_short = 102158;
declare const kgml_Script_s_get_string_week_short = 102159;
declare const kgml_GlobalScript_s_get_string_week = 102160;
declare const kgml_Script_s_get_string_week = 102161;
declare const kgml_GlobalScript_s_get_string_year = 102162;
declare const kgml_Script_s_get_string_year = 102163;
declare const kgml_GlobalScript_s_get_team_by_id = 102164;
declare const kgml_Script_s_get_team_by_id = 102165;
declare const kgml_Script_s_get_team_by_id_internal = 102166;
declare const kgml_GlobalScript_s_get_team_by_seed = 102167;
declare const kgml_Script_s_get_team_by_seed = 102168;
declare const kgml_Script_s_get_team_by_seed_co = 102169;
declare const kgml_Script_s_get_team_seeding = 102170;
declare const kgml_GlobalScript_s_get_team_defense = 102171;
declare const kgml_Script_s_get_team_defense = 102172;
declare const kgml_Script_s_get_team_defense_exh = 102173;
declare const kgml_Script_s_get_team_defense_from_roster = 102174;
declare const kgml_GlobalScript_s_get_team_id_by_seed = 102175;
declare const kgml_Script_s_get_team_id_by_seed = 102176;
declare const kgml_GlobalScript_s_get_team_name_by_id = 102177;
declare const kgml_Script_s_get_team_name_by_id = 102178;
declare const kgml_GlobalScript_s_get_team_name_by_seed = 102179;
declare const kgml_Script_s_get_team_name_by_seed = 102180;
declare const kgml_GlobalScript_s_get_team_net_points = 102181;
declare const kgml_Script_s_get_team_net_points = 102182;
declare const kgml_GlobalScript_s_get_team_offense = 102183;
declare const kgml_Script_s_get_team_offense = 102184;
declare const kgml_Script_s_get_team_offense_exh = 102185;
declare const kgml_Script_s_get_team_offense_from_roster = 102186;
declare const kgml_Script_s_debug_up_team_offense = 102187;
declare const kgml_GlobalScript_s_get_team_position_by_id = 102188;
declare const kgml_Script_s_get_team_position_by_id = 102189;
declare const kgml_GlobalScript_s_get_team_tla_by_id = 102190;
declare const kgml_Script_s_get_team_tla_by_id = 102191;
declare const kgml_GlobalScript_s_get_team_winpct = 102192;
declare const kgml_Script_s_get_team_winpct = 102193;
declare const kgml_GlobalScript_s_get_ticker_text = 102194;
declare const kgml_Script_s_get_ticker_text = 102195;
declare const kgml_GlobalScript_s_get_trade_value_by_rating = 102196;
declare const kgml_Script_s_get_trade_value_by_rating = 102197;
declare const kgml_GlobalScript_s_get_trade_value = 102198;
declare const kgml_Script_s_get_trade_value = 102199;
declare const kgml_GlobalScript_s_get_watermark_color = 102200;
declare const kgml_Script_s_get_watermark_color = 102201;
declare const kgml_GlobalScript_s_get_watermarked_stats = 102202;
declare const kgml_Script_s_get_watermarked_stats = 102203;
declare const kgml_GlobalScript_s_get_week_superbowl = 102204;
declare const kgml_Script_s_get_week_superbowl = 102205;
declare const kgml_GlobalScript_s_get_wins_versus = 102206;
declare const kgml_Script_s_get_wins_versus = 102207;
declare const kgml_GlobalScript_s_gui_helpers = 102208;
declare const kgml_Script_s_create_label = 102209;
declare const kgml_Script_s_is_new_shadow = 102210;
declare const kgml_GlobalScript_s_gui_matchline = 102211;
declare const kgml_Script____struct___196_s_obj_matchLine_create_s_gui_matchline = 102212;
declare const kgml_Script_s_obj_matchLine_create = 102213;
declare const kgml_Script_s_obj_matchLine_step = 102214;
declare const kgml_Script_s_obj_matchLine_global_flick = 102215;
declare const kgml_Script_s_obj_matchLine_draw = 102216;
declare const kgml_Script_s_obj_matchLine_draw_gui = 102217;
declare const kgml_GlobalScript_s_has_xp_gain = 102218;
declare const kgml_Script_s_has_xp_gain = 102219;
declare const kgml_GlobalScript_s_hex_string_to_col = 102220;
declare const kgml_Script_s_hex_string_to_col = 102221;
declare const kgml_GlobalScript_s_history = 102222;
declare const kgml_Script_s_get_history_by_year = 102223;
declare const kgml_Script_s_create_history_for_current_year = 102224;
declare const kgml_Script_s_log_this_year_history = 102225;
declare const kgml_Script_s_log_full_history = 102226;
declare const kgml_Script_s_update_history = 102227;
declare const kgml_Script_s_update_history_playoffs = 102228;
declare const kgml_Script_s_update_history_finish = 102229;
declare const kgml_Script_s_update_history_season_end = 102230;
declare const kgml_Script_s_update_history_won_championship = 102231;
declare const kgml_Script_s_update_history_reached_playoffs_round = 102232;
declare const kgml_Script_s_update_history_won_bowl = 102233;
declare const kgml_Script_s_update_history_subdivisional_champ_finals = 102234;
declare const kgml_Script_s_history_display_lines_count = 102235;
declare const kgml_Script_s_history_display_lines_count_yearindex = 102236;
declare const kgml_GlobalScript_s_html5_helpers = 102237;
declare const kgml_Script_file_exists_safe = 102238;
declare const kgml_GlobalScript_s_iap_async_android = 102239;
declare const kgml_Script_s_debug_purge_all_android_iap = 102240;
declare const kgml_Script_s_iap_async_android = 102241;
declare const kgml_GlobalScript_s_iap_async_ios = 102242;
declare const kgml_Script_s_iap_async_ios = 102243;
declare const kgml_GlobalScript_s_iap_init = 102244;
declare const kgml_Script_s_iap_init = 102245;
declare const kgml_GlobalScript_s_iap_purchase_Credits_100 = 102246;
declare const kgml_GlobalScript_s_iap_purchase_Credits_20 = 102247;
declare const kgml_GlobalScript_s_iap_purchase_Credits_250 = 102248;
declare const kgml_GlobalScript_s_iap_purchase_Credits_50 = 102249;
declare const kgml_GlobalScript_s_iap_purchase_FullVersion = 102250;
declare const kgml_Script_s_iap_purchase_FullVersion = 102251;
declare const kgml_GlobalScript_s_iap_restore = 102252;
declare const kgml_Script_s_iap_restore = 102253;
declare const kgml_GlobalScript_s_increase_player_attribute = 102254;
declare const kgml_Script_s_increase_player_attribute = 102255;
declare const kgml_GlobalScript_s_injury_effect_on_attitude = 102256;
declare const kgml_Script_s_injury_effect_on_attitude = 102257;
declare const kgml_GlobalScript_s_intercept_object = 102258;
declare const kgml_Script_s_intercept_object = 102259;
declare const kgml_GlobalScript_s_is_backup = 102260;
declare const kgml_Script_s_is_backup = 102261;
declare const kgml_GlobalScript_s_is_ball_dead = 102262;
declare const kgml_Script_s_is_ball_dead = 102263;
declare const kgml_GlobalScript_s_is_bye_week = 102264;
declare const kgml_Script_s_is_bye_week = 102265;
declare const kgml_Script_s_get_bye_week = 102266;
declare const kgml_GlobalScript_s_is_defensive_player = 102267;
declare const kgml_Script_s_is_defensive_player = 102268;
declare const kgml_GlobalScript_s_is_falling = 102269;
declare const kgml_Script_s_is_falling = 102270;
declare const kgml_GlobalScript_s_is_in_the_clear = 102271;
declare const kgml_Script_s_is_in_the_clear = 102272;
declare const kgml_GlobalScript_s_is_offensive_player = 102273;
declare const kgml_Script_s_is_offensive_player = 102274;
declare const kgml_Script_s_get_training_reg = 102275;
declare const kgml_GlobalScript_s_is_on_pitch_xy = 102276;
declare const kgml_Script_s_is_on_pitch_xy = 102277;
declare const kgml_GlobalScript_s_is_on_pitch = 102278;
declare const kgml_Script_s_is_on_pitch = 102279;
declare const kgml_GlobalScript_s_is_quarter_over = 102280;
declare const kgml_Script_s_is_quarter_over = 102281;
declare const kgml_GlobalScript_s_is_staff = 102282;
declare const kgml_Script_s_is_staff = 102283;
declare const kgml_GlobalScript_s_kick_ball = 102284;
declare const kgml_Script_s_kick_ball = 102285;
declare const kgml_GlobalScript_s_kick_off = 102286;
declare const kgml_Script_s_kick_off = 102287;
declare const kgml_GlobalScript_s_last_secs_of_half = 102288;
declare const kgml_Script_s_last_secs_of_half = 102289;
declare const kgml_Script_s_seconds_remaining = 102290;
declare const kgml_GlobalScript_s_lastname_already_on_roster = 102291;
declare const kgml_Script_s_lastname_already_on_roster = 102292;
declare const kgml_GlobalScript_s_lines_intersect = 102293;
declare const kgml_Script_s_lines_intersect = 102294;
declare const kgml_GlobalScript_s_load_endzone_from_uniform_file = 102295;
declare const kgml_Script_s_load_endzone_from_uniform_file = 102296;
declare const kgml_GlobalScript_s_load_map_file = 102297;
declare const kgml_Script_s_load_map_file = 102298;
declare const kgml_Script_s_destroy_map_file = 102299;
declare const kgml_GlobalScript_s_load_options = 102300;
declare const kgml_Script_s_load_options = 102301;
declare const kgml_GlobalScript_s_load_profile_uni = 102302;
declare const kgml_Script_s_load_profile_uni = 102303;
declare const kgml_GlobalScript_s_load_retrobowl_history = 102304;
declare const kgml_Script_s_load_retrobowl_history = 102305;
declare const kgml_Script_is_string_real = 102306;
declare const kgml_GlobalScript_s_load_retrobowl_hof = 102307;
declare const kgml_Script_s_load_retrobowl_hof = 102308;
declare const kgml_GlobalScript_s_load_schedule = 102309;
declare const kgml_Script_s_load_schedule = 102310;
declare const kgml_Script_s_load_college_schedule = 102311;
declare const kgml_Script_s_get_schedule_data_years = 102312;
declare const kgml_Script_s_get_schedule_year_stagger = 102313;
declare const kgml_Script_s_get_fix_type = 102314;
declare const kgml_Script____struct___197_s_calc_fix_type_s_load_schedule = 102315;
declare const kgml_Script_s_calc_fix_type = 102316;
declare const kgml_Script_s_get_fix_type_string = 102317;
declare const kgml_Script_s_get_fix_type_string_by_values = 102318;
declare const kgml_Script_s_create_fix_type_string = 102319;
declare const kgml_Script_s_list_schedule_fix_type = 102320;
declare const kgml_GlobalScript_s_load_strings = 102321;
declare const kgml_Script_s_refresh_strings = 102322;
declare const kgml_Script_s_load_strings = 102323;
declare const kgml_Script_s_select_lang = 102324;
declare const kgml_Script_s_select_lang_file = 102325;
declare const kgml_Script_s_select_override_lang_file = 102326;
declare const kgml_Script_s_select_institution_lang_file = 102327;
declare const kgml_Script_s_add_file_to_lang_strings = 102328;
declare const kgml_Script____struct___198_s_co_refresh_strings_s_load_strings = 102329;
declare const kgml_Script_s_co_refresh_strings = 102330;
declare const kgml_Script_s_co_load_strings = 102331;
declare const kgml_Script_s_load_language_file = 102332;
declare const kgml_GlobalScript_s_load_team_detail = 102333;
declare const kgml_Script_s_load_team_detail = 102334;
declare const kgml_GlobalScript_s_load_teamname_from_uniform_file = 102335;
declare const kgml_Script_s_load_teamname_from_uniform_file = 102336;
declare const kgml_GlobalScript_s_load_teams = 102337;
declare const kgml_Script_s_load_teams = 102338;
declare const kgml_Script_s_load_teams_data = 102339;
declare const kgml_Script_s_reset_co_team_data = 102340;
declare const kgml_Script_s_set_teams_min_max_ids = 102341;
declare const kgml_Script_s_get_struct_in_array_by_uid = 102342;
declare const kgml_Script____struct___199_load_data_to_struct_array_s_load_teams = 102343;
declare const kgml_Script_load_data_to_struct_array = 102344;
declare const kgml_Script____struct___200_s_load_json_s_load_teams = 102345;
declare const kgml_Script_s_load_json = 102346;
declare const kgml_Script_s_save_json = 102347;
declare const kgml_Script_anon_4747_keys_rows_data_s_load_teams = 102348;
declare const kgml_Script_anon_5285_keys_rows_data_s_load_teams = 102349;
declare const kgml_Script_anon_5654_keys_rows_data_s_load_teams = 102350;
declare const kgml_Script_anon_5724_keys_rows_data_s_load_teams = 102351;
declare const kgml_Script_anon_5792_keys_rows_data_s_load_teams = 102352;
declare const kgml_Script_keys_rows_data = 102353;
declare const kgml_GlobalScript_s_load_uniform_file2 = 102354;
declare const kgml_Script_s_load_uniform_file2 = 102355;
declare const kgml_Script_s_verify_restore_uniform_file = 102356;
declare const kgml_GlobalScript_s_loadgame = 102357;
declare const kgml_Script_btn_click_LoadSlot1 = 102358;
declare const kgml_Script_btn_click_LoadSlot2 = 102359;
declare const kgml_Script_btn_click_LoadSlot3 = 102360;
declare const kgml_Script_btn_click_LoadSlot4 = 102361;
declare const kgml_Script_btn_click_LoadSlot5 = 102362;
declare const kgml_Script_btn_click_slot = 102363;
declare const kgml_Script_s_master_load = 102364;
declare const kgml_Script_s_master_load_from_backup = 102365;
declare const kgml_Script_s_loadgame = 102366;
declare const kgml_Script_s_cap_breach_refresh = 102367;
declare const kgml_Script_s_cap_breach_str = 102368;
declare const kgml_Script_s_is_player_pmap_corrupt = 102369;
declare const kgml_Script_s_check_for_return_stats = 102370;
declare const kgml_Script_s_check_longest_records = 102371;
declare const kgml_Script_s_fix_poki_browser_max_percent_grade = 102372;
declare const kgml_Script_s_update_ui_colours = 102373;
declare const kgml_Script_s_get_college_primary_col = 102374;
declare const kgml_Script_s_update_game_title = 102375;
declare const kgml_Script_s_reset_subdivision_names = 102376;
declare const kgml_GlobalScript_s_log_player = 102377;
declare const kgml_Script_s_log_player = 102378;
declare const kgml_GlobalScript_s_make_random_colour = 102379;
declare const kgml_Script_s_make_random_colour = 102380;
declare const kgml_GlobalScript_s_match_rating_effect_on_morale = 102381;
declare const kgml_Script_s_match_rating_effect_on_morale = 102382;
declare const kgml_GlobalScript_s_meter_change_end = 102383;
declare const kgml_Script_s_meter_change_end = 102384;
declare const kgml_GlobalScript_s_meter_change = 102385;
declare const kgml_Script_s_meter_change = 102386;
declare const kgml_GlobalScript_s_msg_clear_info_draft = 102387;
declare const kgml_Script_s_msg_clear_info_draft = 102388;
declare const kgml_GlobalScript_s_msg_clear = 102389;
declare const kgml_Script_s_msg_clear = 102390;
declare const kgml_GlobalScript_s_msg_timeouts = 102391;
declare const kgml_Script_s_msg_timeouts = 102392;
declare const kgml_GlobalScript_s_news_clear = 102393;
declare const kgml_Script_s_news_clear = 102394;
declare const kgml_GlobalScript_s_notification = 102395;
declare const kgml_Script_s_notification = 102396;
declare const kgml_GlobalScript_s_obj_controller_draw_begin = 102397;
declare const kgml_Script_s_obj_controller_draw_begin = 102398;
declare const kgml_GlobalScript_s_obj_controller_helpers = 102399;
declare const kgml_Script_s_obj_controller_step2 = 102400;
declare const kgml_Script_s_obj_controller_step = 102401;
declare const kgml_GlobalScript_s_obj_player_draw_begin = 102402;
declare const kgml_Script_s_obj_player_draw_begin = 102403;
declare const kgml_GlobalScript_s_obj_player_helpers = 102404;
declare const kgml_Script_s_obj_player_step2 = 102405;
declare const kgml_Script_s_obj_player_step = 102406;
declare const kgml_GlobalScript_s_open_store_nag = 102407;
declare const kgml_Script_s_open_store_nag = 102408;
declare const kgml_GlobalScript_s_open_store = 102409;
declare const kgml_Script_s_open_store = 102410;
declare const kgml_Script_s_btn_store_exit = 102411;
declare const kgml_Script_s_iap_purchase_credits = 102412;
declare const kgml_Script_s_iap_purchase_Credits_100 = 102413;
declare const kgml_Script_s_iap_purchase_Credits_20 = 102414;
declare const kgml_Script_s_iap_purchase_Credits_250 = 102415;
declare const kgml_Script_s_iap_purchase_Credits_50 = 102416;
declare const kgml_Script_s_iap_purchase_Credits_2000 = 102417;
declare const kgml_Script_s_is_consumable_pruchase = 102418;
declare const kgml_Script_s_award_shop_credits = 102419;
declare const kgml_Script_s_do_info_unlimited_info = 102420;
declare const kgml_Script_s_do_info_unlimited_info_continue = 102421;
declare const kgml_GlobalScript_s_opponent_goalside = 102422;
declare const kgml_Script_s_opponent_goalside = 102423;
declare const kgml_GlobalScript_s_opposite_aim = 102424;
declare const kgml_Script_s_opposite_aim = 102425;
declare const kgml_GlobalScript_s_parse_dilemma = 102426;
declare const kgml_Script_s_parse_dilemma = 102427;
declare const kgml_GlobalScript_s_parse_intro = 102428;
declare const kgml_Script_s_parse_intro = 102429;
declare const kgml_GlobalScript_s_parse_news = 102430;
declare const kgml_Script_s_parse_news = 102431;
declare const kgml_GlobalScript_s_parse_player_message = 102432;
declare const kgml_Script_s_parse_player_message = 102433;
declare const kgml_GlobalScript_s_parse_string = 102434;
declare const kgml_Script_s_parse_string = 102435;
declare const kgml_GlobalScript_s_play = 102436;
declare const kgml_Script_s_play = 102437;
declare const kgml_Script_s_play_endweek = 102438;
declare const kgml_GlobalScript_s_player_at_max_potential = 102439;
declare const kgml_Script_s_player_at_max_potential = 102440;
declare const kgml_GlobalScript_s_player_gpa = 102441;
declare const kgml_Script_s_gpa_from_percent_grade = 102442;
declare const kgml_Script_s_gpa_string = 102443;
declare const kgml_Script_s_gpa_string_direct = 102444;
declare const kgml_Script_s_decay_percent_grade = 102445;
declare const kgml_Script_s_debug_recover_percent_grade = 102446;
declare const kgml_Script_s_post_match_gpa_refresh = 102447;
declare const kgml_Script_s_add_percent_grade = 102448;
declare const kgml_Script_s_get_decay = 102449;
declare const kgml_Script_s_get_decay_info = 102450;
declare const kgml_Script_s_refresh_suspended = 102451;
declare const kgml_Script_s_get_percent_grade_squad = 102452;
declare const kgml_Script_btn_click_Boost_GPA = 102453;
declare const kgml_Script_btn_response_boost_gpa = 102454;
declare const kgml_Script_s_post_season_gpa_boost = 102455;
declare const kgml_Script_s_my_team_academics = 102456;
declare const kgml_Script_s_player_grade_suspend = 102457;
declare const kgml_Script_s_player_grade_suspend_from_age = 102458;
declare const kgml_Script_s_player_grade_lift_suspension = 102459;
declare const kgml_Script_s_gpa_step_from_percent_grade = 102460;
declare const kgml_Script_s_percent_grade_from_gpa_step_UPPER = 102461;
declare const kgml_Script_s_player_gpa_color = 102462;
declare const kgml_Script_s_player_gpa_colors_info = 102463;
declare const kgml_GlobalScript_s_player_party = 102464;
declare const kgml_Script_s_update_party_meter = 102465;
declare const kgml_Script_s_get_party_info = 102466;
declare const kgml_Script_s_add_to_party_meter = 102467;
declare const kgml_Script_s_clear_party_meter = 102468;
declare const kgml_Script_s_team_halve_all_party_meters = 102469;
declare const kgml_Script_s_team_clear_all_party_meters = 102470;
declare const kgml_GlobalScript_s_player_profile_qb_mode = 102471;
declare const kgml_Script_s_player_profile_qb_mode = 102472;
declare const kgml_GlobalScript_s_playoffs_12 = 102473;
declare const kgml_Script_s_playoffs_12 = 102474;
declare const kgml_GlobalScript_s_point_to_path = 102475;
declare const kgml_Script_s_point_to_path = 102476;
declare const kgml_GlobalScript_s_populate_division = 102477;
declare const kgml_Script_s_populate_division = 102478;
declare const kgml_GlobalScript_s_populate_schedulebox = 102479;
declare const kgml_Script_s_populate_schedulebox = 102480;
declare const kgml_GlobalScript_s_position_already_on_roster = 102481;
declare const kgml_Script_s_position_already_on_roster = 102482;
declare const kgml_GlobalScript_s_position_edit_name_btn = 102483;
declare const kgml_Script_s_position_edit_name_btn = 102484;
declare const kgml_GlobalScript_s_practice_passing = 102485;
declare const kgml_Script_s_practice_passing = 102486;
declare const kgml_GlobalScript_s_practice_qb_mode = 102487;
declare const kgml_Script_s_practice_qb_mode = 102488;
declare const kgml_Script_s_end_qb_mode_practice = 102489;
declare const kgml_Script_s_quit_qb_mode_practice = 102490;
declare const kgml_GlobalScript_s_practice_running_qb = 102491;
declare const kgml_Script_s_practice_running_qb = 102492;
declare const kgml_GlobalScript_s_practice_running = 102493;
declare const kgml_Script_s_practice_running = 102494;
declare const kgml_GlobalScript_s_pre_match = 102495;
declare const kgml_Script_s_pre_match = 102496;
declare const kgml_Script_s_continue_time_for_draft_msg = 102497;
declare const kgml_Script_s_co_pre_match = 102498;
declare const kgml_Script_s_rm_winners_notice = 102499;
declare const kgml_GlobalScript_s_promote_playoff_winner = 102500;
declare const kgml_Script_s_promote_playoff_winner = 102501;
declare const kgml_Script_s_seed_divisional_round = 102502;
declare const kgml_GlobalScript_s_punt = 102503;
declare const kgml_Script_s_punt = 102504;
declare const kgml_GlobalScript_s_qb_mode_auto_xp = 102505;
declare const kgml_Script_s_qb_mode_auto_xp = 102506;
declare const kgml_GlobalScript_s_qb_mode_update_resting = 102507;
declare const kgml_Script_s_qb_mode_update_resting = 102508;
declare const kgml_GlobalScript_s_qb_run = 102509;
declare const kgml_Script_s_qb_run = 102510;
declare const kgml_Script_s_qb_revert_throw = 102511;
declare const kgml_GlobalScript_s_receive_ball = 102512;
declare const kgml_Script_s_receive_ball = 102513;
declare const kgml_GlobalScript_s_received_AI_kickoff = 102514;
declare const kgml_Script_s_received_AI_kickoff = 102515;
declare const kgml_GlobalScript_s_received_AI_new = 102516;
declare const kgml_Script_s_received_AI_new = 102517;
declare const kgml_GlobalScript_s_record_frame = 102518;
declare const kgml_Script_s_record_frame = 102519;
declare const kgml_GlobalScript_s_recruitment_credits = 102520;
declare const kgml_Script_recruitment_credits_cap_total = 102521;
declare const kgml_Script_s_validate_recruitment_credits_cap = 102522;
declare const kgml_Script_can_fit_recruitment_credits = 102523;
declare const kgml_Script_recruitment_credits_space = 102524;
declare const kgml_Script_recruitment_credits_add = 102525;
declare const kgml_Script_recruitment_credits_toggle_roster_size = 102526;
declare const kgml_Script_recruitment_credits_button_click_boost = 102527;
declare const kgml_Script_btn_response_boost_recruitment_credits = 102528;
declare const kgml_GlobalScript_s_refactor_team_strengths = 102529;
declare const kgml_Script_s_refactor_team_strengths = 102530;
declare const kgml_Script_s_refactor_co_team_strengths = 102531;
declare const kgml_GlobalScript_s_refresh_save_slots = 102532;
declare const kgml_Script_s_refresh_save_slots = 102533;
declare const kgml_GlobalScript_s_rehab_effect = 102534;
declare const kgml_Script_s_rehab_effect = 102535;
declare const kgml_GlobalScript_s_reinstate_hof_player = 102536;
declare const kgml_Script_s_reinstate_hof_player = 102537;
declare const kgml_GlobalScript_s_remaining_picks_by_round = 102538;
declare const kgml_Script_s_remaining_picks_by_round = 102539;
declare const kgml_GlobalScript_s_remaining_picks = 102540;
declare const kgml_Script_s_remaining_picks = 102541;
declare const kgml_GlobalScript_s_remove_player = 102542;
declare const kgml_Script_s_remove_player = 102543;
declare const kgml_GlobalScript_s_replay_controls = 102544;
declare const kgml_Script_s_replay_controls = 102545;
declare const kgml_GlobalScript_s_replay_frame = 102546;
declare const kgml_Script_s_replay_frame = 102547;
declare const kgml_GlobalScript_s_reset_draft_picks = 102548;
declare const kgml_Script_s_reset_draft_picks = 102549;
declare const kgml_GlobalScript_s_reset_match_stats = 102550;
declare const kgml_Script_s_reset_match_stats = 102551;
declare const kgml_GlobalScript_s_reset_player_meetings = 102552;
declare const kgml_Script_s_reset_player_meetings = 102553;
declare const kgml_GlobalScript_s_reset_staff_hire_list = 102554;
declare const kgml_Script_s_reset_staff_hire_list = 102555;
declare const kgml_GlobalScript_s_reset_wind = 102556;
declare const kgml_Script_s_reset_wind = 102557;
declare const kgml_GlobalScript_s_rest_all_players = 102558;
declare const kgml_Script_s_rest_all_players = 102559;
declare const kgml_GlobalScript_s_restore_uniforms_all = 102560;
declare const kgml_Script_s_restore_uniforms_all = 102561;
declare const kgml_GlobalScript_s_rgb_to_bgr = 102562;
declare const kgml_Script_s_rgb_to_bgr = 102563;
declare const kgml_GlobalScript_s_roman_numerals = 102564;
declare const kgml_Script_s_roman_numerals = 102565;
declare const kgml_GlobalScript_s_round_player_attributes = 102566;
declare const kgml_Script_s_round_player_attributes = 102567;
declare const kgml_GlobalScript_s_round_to_decimal = 102568;
declare const kgml_Script_s_round_to_decimal = 102569;
declare const kgml_GlobalScript_s_save_backup = 102570;
declare const kgml_Script_s_save_backup = 102571;
declare const kgml_GlobalScript_s_save_options = 102572;
declare const kgml_Script_s_save_options = 102573;
declare const kgml_GlobalScript_s_save_uniform_file2 = 102574;
declare const kgml_Script_s_save_uniform_file2 = 102575;
declare const kgml_GlobalScript_s_savegame = 102576;
declare const kgml_Script_s_savegame = 102577;
declare const kgml_GlobalScript_s_set_anim = 102578;
declare const kgml_Script_s_set_anim = 102579;
declare const kgml_GlobalScript_s_set_ball_down = 102580;
declare const kgml_Script_s_set_ball_down = 102581;
declare const kgml_GlobalScript_s_set_position_defense_fg = 102582;
declare const kgml_Script_s_set_position_defense_fg = 102583;
declare const kgml_GlobalScript_s_set_position_defense = 102584;
declare const kgml_Script_s_set_position_defense = 102585;
declare const kgml_GlobalScript_s_set_position_kickoff = 102586;
declare const kgml_Script_s_set_position_return_ko = 102587;
declare const kgml_Script_s_set_position_take_ko = 102588;
declare const kgml_GlobalScript_s_set_position_offense_fg = 102589;
declare const kgml_Script_s_set_position_offense_fg = 102590;
declare const kgml_GlobalScript_s_set_position_offense = 102591;
declare const kgml_Script_s_set_position_offense = 102592;
declare const kgml_GlobalScript_s_set_rewarded_route = 102593;
declare const kgml_Script_s_set_rewarded_route = 102594;
declare const kgml_GlobalScript_s_set_skills_and_skin = 102595;
declare const kgml_Script_s_set_skills_and_skin = 102596;
declare const kgml_Script_ssss_pick_defense_player_pmap = 102597;
declare const kgml_Script_ssss_pick_offense_player_pmap = 102598;
declare const kgml_Script_s_set_skills_and_skin_new = 102599;
declare const kgml_Script_s_set_skills_and_skin_old = 102600;
declare const kgml_GlobalScript_s_set_team_morale = 102601;
declare const kgml_Script_s_set_team_morale = 102602;
declare const kgml_GlobalScript_s_set_up_button_kickoff = 102603;
declare const kgml_Script_s_set_up_button_kickoff = 102604;
declare const kgml_Script_btn_kick_off = 102605;
declare const kgml_Script_s_btn_kickoff_recenter = 102606;
declare const kgml_GlobalScript_s_set_up_edit_screen = 102607;
declare const kgml_Script_s_set_up_edit_screen = 102608;
declare const kgml_GlobalScript_s_set_up_fieldgoal = 102609;
declare const kgml_Script_s_set_up_fieldgoal = 102610;
declare const kgml_GlobalScript_s_set_up_globals = 102611;
declare const kgml_Script_s_set_up_globals = 102612;
declare const kgml_Script_s_set_up_temp_variables = 102613;
declare const kgml_GlobalScript_s_set_up_hof_players_screen = 102614;
declare const kgml_Script_s_set_up_hof_players_screen = 102615;
declare const kgml_GlobalScript_s_set_up_kickoff = 102616;
declare const kgml_Script_s_set_up_kickoff = 102617;
declare const kgml_GlobalScript_s_set_up_play = 102618;
declare const kgml_Script_s_set_up_play = 102619;
declare const kgml_Script_s_btn_audible_reposition = 102620;
declare const kgml_Script_s_btn_fieldgoal_reposition = 102621;
declare const kgml_GlobalScript_s_set_up_practice = 102622;
declare const kgml_Script_s_set_up_practice = 102623;
declare const kgml_GlobalScript_s_set_up_purchase_ids = 102624;
declare const kgml_Script_s_set_up_purchase_ids = 102625;
declare const kgml_GlobalScript_s_set_up_qb_pmap = 102626;
declare const kgml_Script_s_set_up_qb_pmap = 102627;
declare const kgml_GlobalScript_s_set_up_uniform_profile = 102628;
declare const kgml_Script_s_set_up_uniform_profile = 102629;
declare const kgml_GlobalScript_s_set_up_uniforms_training = 102630;
declare const kgml_Script_s_set_up_uniforms_training = 102631;
declare const kgml_GlobalScript_s_set_up_uniforms = 102632;
declare const kgml_Script_s_set_up_uniforms = 102633;
declare const kgml_GlobalScript_s_set_up_xp_headers = 102634;
declare const kgml_Script_s_set_up_xp_headers = 102635;
declare const kgml_GlobalScript_s_shader_get_uniforms = 102636;
declare const kgml_Script_s_shader_get_uniforms = 102637;
declare const kgml_GlobalScript_s_shader_set_uniforms = 102638;
declare const kgml_Script_s_shader_set_uniforms = 102639;
declare const kgml_Script_s_blackwhite_colour_hack = 102640;
declare const kgml_GlobalScript_s_show_backups = 102641;
declare const kgml_Script_s_show_backups = 102642;
declare const kgml_Script_s_restore_backup1 = 102643;
declare const kgml_Script_s_restore_backup2 = 102644;
declare const kgml_Script_s_restore_backup3 = 102645;
declare const kgml_Script_s_restore_backup4 = 102646;
declare const kgml_Script_s_restore_backup5 = 102647;
declare const kgml_GlobalScript_s_sim_stat_increment = 102648;
declare const kgml_Script_s_sim_stat_increment = 102649;
declare const kgml_Script_s_sim_stat_update = 102650;
declare const kgml_Script_s_sim_stat_touchdown = 102651;
declare const kgml_Script_s_sim_stat_pass = 102652;
declare const kgml_Script_s_sim_stat_run = 102653;
declare const kgml_Script_s_sim_stat_fumble = 102654;
declare const kgml_Script_s_sim_stat_interception = 102655;
declare const kgml_Script_s_sim_stat_sack = 102656;
declare const kgml_GlobalScript_s_simming_action = 102657;
declare const kgml_Script_s_simming_action = 102658;
declare const kgml_GlobalScript_s_skip_to_week = 102659;
declare const kgml_Script_s_skip_to_week = 102660;
declare const kgml_GlobalScript_s_sort_hirelist = 102661;
declare const kgml_Script_s_sort_hirelist = 102662;
declare const kgml_GlobalScript_s_sort_list_by_column = 102663;
declare const kgml_Script_s_sort_maplist_by_numeric_field = 102664;
declare const kgml_GlobalScript_s_sort_players = 102665;
declare const kgml_Script_s_sort_players = 102666;
declare const kgml_GlobalScript_s_sort_record_list = 102667;
declare const kgml_Script_s_sort_record_list = 102668;
declare const kgml_GlobalScript_s_sort_retrobowl_history_list = 102669;
declare const kgml_Script_s_sort_retrobowl_history_list = 102670;
declare const kgml_GlobalScript_s_sort_retrobowl_list = 102671;
declare const kgml_Script_s_sort_retrobowl_list = 102672;
declare const kgml_GlobalScript_s_sort_teams = 102673;
declare const kgml_Script_s_sort_teams = 102674;
declare const kgml_GlobalScript_s_sound_audience_catch = 102675;
declare const kgml_Script_s_sound_audience_catch = 102676;
declare const kgml_GlobalScript_s_sound_audience_dis = 102677;
declare const kgml_Script_s_sound_audience_dis = 102678;
declare const kgml_GlobalScript_s_sound_audience_fg = 102679;
declare const kgml_Script_s_sound_audience_fg = 102680;
declare const kgml_GlobalScript_s_sound_audience_idle = 102681;
declare const kgml_Script_s_sound_audience_idle = 102682;
declare const kgml_GlobalScript_s_sound_audience_inc = 102683;
declare const kgml_Script_s_sound_audience_inc = 102684;
declare const kgml_GlobalScript_s_sound_audience_tck = 102685;
declare const kgml_Script_s_sound_audience_tck = 102686;
declare const kgml_GlobalScript_s_sound_bounce = 102687;
declare const kgml_Script_s_sound_bounce = 102688;
declare const kgml_GlobalScript_s_sound_dive = 102689;
declare const kgml_Script_s_sound_dive = 102690;
declare const kgml_GlobalScript_s_sound_kick = 102691;
declare const kgml_Script_s_sound_kick = 102692;
declare const kgml_GlobalScript_s_sound_loop = 102693;
declare const kgml_Script_s_sound_loop = 102694;
declare const kgml_GlobalScript_s_sound_oof = 102695;
declare const kgml_Script_s_sound_oof = 102696;
declare const kgml_GlobalScript_s_sound_post = 102697;
declare const kgml_Script_s_sound_post = 102698;
declare const kgml_GlobalScript_s_sound_tackle = 102699;
declare const kgml_Script_s_sound_tackle = 102700;
declare const kgml_GlobalScript_s_sound_throw = 102701;
declare const kgml_Script_s_sound_throw = 102702;
declare const kgml_GlobalScript_s_sound = 102703;
declare const kgml_Script_s_sound = 102704;
declare const kgml_Script_s_sound_brass_setup = 102705;
declare const kgml_Script_s_sound_brass_loop = 102706;
declare const kgml_Script_s_stop_brass_loop = 102707;
declare const kgml_Script_s_stop_brass_loop_finalize = 102708;
declare const kgml_GlobalScript_s_spike_ball = 102709;
declare const kgml_Script_s_spike_ball = 102710;
declare const kgml_GlobalScript_s_split_string = 102711;
declare const kgml_Script_s_split_string = 102712;
declare const kgml_GlobalScript_s_sprite_holding_ball = 102713;
declare const kgml_Script_s_sprite_holding_ball = 102714;
declare const kgml_GlobalScript_s_start_new_season = 102715;
declare const kgml_Script_s_start_new_season = 102716;
declare const kgml_Script_s_renew_contracts_qb_mode = 102717;
declare const kgml_Script_s_update_coach_rating_college = 102718;
declare const kgml_GlobalScript_s_start_replay = 102719;
declare const kgml_Script_s_start_replay = 102720;
declare const kgml_GlobalScript_s_startup = 102721;
declare const kgml_Script_s_startup = 102722;
declare const kgml_Script_s_startup_welcome_msg = 102723;
declare const kgml_Script_s_startup_set_master_variables = 102724;
declare const kgml_Script_s_startup_handle_saved_game = 102725;
declare const kgml_Script_s_startup_college_mode = 102726;
declare const kgml_Script_s_startup_browser = 102727;
declare const kgml_GlobalScript_s_stop_tackling = 102728;
declare const kgml_Script_s_stop_tackling = 102729;
declare const kgml_GlobalScript_s_store_cant_afford = 102730;
declare const kgml_Script_s_store_cant_afford = 102731;
declare const kgml_GlobalScript_s_str_helpers = 102732;
declare const kgml_Script_s_str_int_to_ordinal = 102733;
declare const kgml_GlobalScript_s_str = 102734;
declare const kgml_Script_s_str = 102735;
declare const kgml_Script_s_str_u = 102736;
declare const kgml_Script_s_str_real = 102737;
declare const kgml_Script_s_strf = 102738;
declare const kgml_Script_s_strfl = 102739;
declare const kgml_Script_s_co_str = 102740;
declare const kgml_Script_s_co_str_real = 102741;
declare const kgml_GlobalScript_s_string_rand = 102742;
declare const kgml_Script_s_string_rand = 102743;
declare const kgml_GlobalScript_s_strP = 102744;
declare const kgml_Script_s_strP = 102745;
declare const kgml_GlobalScript_s_subtract_time = 102746;
declare const kgml_Script_s_subtract_time = 102747;
declare const kgml_GlobalScript_s_switch_drivedirection = 102748;
declare const kgml_Script_s_switch_drivedirection = 102749;
declare const kgml_GlobalScript_s_tackle_failure = 102750;
declare const kgml_Script_s_tackle_failure = 102751;
declare const kgml_GlobalScript_s_tag_backups = 102752;
declare const kgml_Script_s_tag_backups = 102753;
declare const kgml_Script_s_tag_backups_internal = 102754;
declare const kgml_GlobalScript_s_team_helpers = 102755;
declare const kgml_Script_s_teams_file = 102756;
declare const kgml_GlobalScript_s_team_interested = 102757;
declare const kgml_Script_s_team_interested = 102758;
declare const kgml_Script_s_qb_mode_team_interested = 102759;
declare const kgml_GlobalScript_s_throw_ball = 102760;
declare const kgml_Script_s_throw_ball = 102761;
declare const kgml_GlobalScript_s_tip_continue = 102762;
declare const kgml_Script_s_tip_continue = 102763;
declare const kgml_GlobalScript_s_toxic_effect_on_morale = 102764;
declare const kgml_Script_s_toxic_effect_on_morale = 102765;
declare const kgml_GlobalScript_s_training_regime_effect_on_morale = 102766;
declare const kgml_Script_s_training_regime_effect_on_morale = 102767;
declare const kgml_GlobalScript_s_unfreeze_purchase_buttons = 102768;
declare const kgml_Script_s_unfreeze_purchase_buttons = 102769;
declare const kgml_GlobalScript_s_uniform_helpers = 102770;
declare const kgml_Script_s_uniforms_default_file = 102771;
declare const kgml_Script_s_extract_uniform_cols_to_record = 102772;
declare const kgml_Script_s_uniform_cols_to_record = 102773;
declare const kgml_Script_s_uniform_cols_from_record = 102774;
declare const kgml_GlobalScript_s_update_ball_fieldgoal = 102775;
declare const kgml_Script_s_update_ball_fieldgoal = 102776;
declare const kgml_GlobalScript_s_update_ball_movement = 102777;
declare const kgml_Script_s_update_ball_movement = 102778;
declare const kgml_GlobalScript_s_update_ball_offset = 102779;
declare const kgml_Script_s_update_ball_offset = 102780;
declare const kgml_GlobalScript_s_update_ball = 102781;
declare const kgml_Script_s_update_ball = 102782;
declare const kgml_GlobalScript_s_update_camera = 102783;
declare const kgml_Script_s_update_camera = 102784;
declare const kgml_GlobalScript_s_update_commentary = 102785;
declare const kgml_Script_s_update_commentary = 102786;
declare const kgml_Script_s_go_for_it_or_not = 102787;
declare const kgml_Script_s_check_toggle_sim = 102788;
declare const kgml_Script_s_toggle_sim_debug_log = 102789;
declare const kgml_Script_btn_toggle_sim = 102790;
declare const kgml_Script_btn_toggle_sim_confirm = 102791;
declare const kgml_Script_btn_toggle_sim_dismiss = 102792;
declare const kgml_Script_s_toggle_sim_active = 102793;
declare const kgml_Script_anon_42892_sim_state_s_update_commentary = 102794;
declare const kgml_Script_anon_43102_sim_state_s_update_commentary = 102795;
declare const kgml_Script_anon_43225_sim_state_s_update_commentary = 102796;
declare const kgml_Script_anon_43731_sim_state_s_update_commentary = 102797;
declare const kgml_Script_anon_44127_sim_state_s_update_commentary = 102798;
declare const kgml_Script_sim_state = 102799;
declare const kgml_Script_s_skip_time_active = 102800;
declare const kgml_Script_s_check_skip_time_button = 102801;
declare const kgml_Script_btn_skip_time = 102802;
declare const kgml_Script_s_no_ties_allowed = 102803;
declare const kgml_Script_roster_short_desc = 102804;
declare const kgml_Script_roster_short_desc_tag = 102805;
declare const kgml_Script_slog_roster = 102806;
declare const kgml_Script_slog_master_roster = 102807;
declare const kgml_GlobalScript_s_update_contracts = 102808;
declare const kgml_Script_s_update_contracts = 102809;
declare const kgml_Script_s_check_staff_exist = 102810;
declare const kgml_GlobalScript_s_update_draft_page = 102811;
declare const kgml_Script_s_update_draft_page = 102812;
declare const kgml_GlobalScript_s_update_freeagents_page = 102813;
declare const kgml_Script_s_update_freeagents_page = 102814;
declare const kgml_GlobalScript_s_update_game_clock = 102815;
declare const kgml_Script_s_update_game_clock = 102816;
declare const kgml_GlobalScript_s_update_game_timer = 102817;
declare const kgml_Script_s_update_game_timer = 102818;
declare const kgml_GlobalScript_s_update_gamepad = 102819;
declare const kgml_Script_s_update_gamepad = 102820;
declare const kgml_Script_s_gamepad_async = 102821;
declare const kgml_Script_s_gamepad_activity = 102822;
declare const kgml_Script_s_clear_last_selected_history = 102823;
declare const kgml_Script_s_overwrite_last_selected = 102824;
declare const kgml_Script____struct___201_s_save_last_selected_s_update_gamepad = 102825;
declare const kgml_Script_s_save_last_selected = 102826;
declare const kgml_Script_s_get_last_selected = 102827;
declare const kgml_Script____struct___202_s_reset_gamepad_s_update_gamepad = 102828;
declare const kgml_Script_s_reset_gamepad = 102829;
declare const kgml_Script_s_update_gamepad_data = 102830;
declare const kgml_Script_s_update_ui_selected = 102831;
declare const kgml_Script____struct___203_s_multiplayer_init_s_update_gamepad = 102832;
declare const kgml_Script_s_multiplayer_init = 102833;
declare const kgml_Script_s_is_multicon_wanted = 102834;
declare const kgml_Script_s_toggle_multicon_wanted = 102835;
declare const kgml_Script_s_multicon_reset = 102836;
declare const kgml_Script_s_multicon_init = 102837;
declare const kgml_Script_s_refresh_gamepads = 102838;
declare const kgml_Script_s_gamepad_lv_dir = 102839;
declare const kgml_Script_s_set_multicon_active = 102840;
declare const kgml_Script_s_set_multicon_turn = 102841;
declare const kgml_Script_s_multicon_save_turn = 102842;
declare const kgml_Script_s_multicon_restore_turn = 102843;
declare const kgml_Script_s_is_turn = 102844;
declare const kgml_Script_s_is_multicon = 102845;
declare const kgml_Script_s_is_pad_used_in_multicon = 102846;
declare const kgml_Script_s_get_multicon_current_pad = 102847;
declare const kgml_Script_s_set_multicon_touch = 102848;
declare const kgml_Script_s_is_touch_allowed = 102849;
declare const kgml_Script_s_is_ui_selected = 102850;
declare const kgml_Script_s_ui_selected_color = 102851;
declare const kgml_GlobalScript_s_update_history_finish = 102852;
declare const kgml_GlobalScript_s_update_history_playoffs = 102853;
declare const kgml_GlobalScript_s_update_history = 102854;
declare const kgml_GlobalScript_s_update_human_playoff_fixtures = 102855;
declare const kgml_Script_s_update_human_playoff_fixtures = 102856;
declare const kgml_Script_s_check_rearranged_human_playoff = 102857;
declare const kgml_Script_s_update_human_fixtures = 102858;
declare const kgml_Script_s_update_fixturelist_fix_extra_data = 102859;
declare const kgml_GlobalScript_s_update_job_offer_buttons = 102860;
declare const kgml_Script_s_update_job_offer_buttons = 102861;
declare const kgml_GlobalScript_s_update_manual_gestures = 102862;
declare const kgml_Script_s_update_manual_gestures = 102863;
declare const kgml_GlobalScript_s_update_maplist_from_file = 102864;
declare const kgml_Script_s_update_maplist_from_file = 102865;
declare const kgml_GlobalScript_s_update_music = 102866;
declare const kgml_Script_s_update_music = 102867;
declare const kgml_Script_s_update_music_safe = 102868;
declare const kgml_Script_s_is_audio_safe = 102869;
declare const kgml_GlobalScript_s_update_my_shadow = 102870;
declare const kgml_Script_s_update_my_shadow = 102871;
declare const kgml_GlobalScript_s_update_options = 102872;
declare const kgml_Script_s_update_options = 102873;
declare const kgml_Script_s_get_op_invert_throw = 102874;
declare const kgml_Script_s_get_op_autorun = 102875;
declare const kgml_Script_btn_click_CollegeToggleColor = 102876;
declare const kgml_Script_s_get_gm_version = 102877;
declare const kgml_Script_s_update_options_if_present = 102878;
declare const kgml_GlobalScript_s_update_poki_scaling = 102879;
declare const kgml_Script_s_update_poki_scaling = 102880;
declare const kgml_GlobalScript_s_update_rest_all_button = 102881;
declare const kgml_Script_s_update_rest_all_button = 102882;
declare const kgml_GlobalScript_s_update_shopping_buttons = 102883;
declare const kgml_Script_s_update_shopping_buttons = 102884;
declare const kgml_Script_btn_click_shopping_next = 102885;
declare const kgml_Script_btn_click_shopping_prev = 102886;
declare const kgml_Script_btn_shopping_purchase = 102887;
declare const kgml_Script_s_confirm_purchase = 102888;
declare const kgml_Script_s_count_shop_items_by_type = 102889;
declare const kgml_Script_s_degrade_shop_items = 102890;
declare const kgml_GlobalScript_s_update_stats = 102891;
declare const kgml_Script_s_update_stats = 102892;
declare const kgml_GlobalScript_s_update_team_buttons = 102893;
declare const kgml_Script_s_update_team_buttons = 102894;
declare const kgml_GlobalScript_s_update_team_edit_buttons = 102895;
declare const kgml_Script_s_update_team_edit_buttons = 102896;
declare const kgml_GlobalScript_s_update_uniform_name = 102897;
declare const kgml_Script_s_update_uniform_name = 102898;
declare const kgml_GlobalScript_s_update_xdead = 102899;
declare const kgml_Script_s_update_xdead = 102900;
declare const kgml_GlobalScript_s_update_yard_gain = 102901;
declare const kgml_Script_s_update_yard_gain = 102902;
declare const kgml_GlobalScript_s_y_on_myside = 102903;
declare const kgml_Script_s_y_on_myside = 102904;
declare const kgml_GlobalScript_scale_canvas = 102905;
declare const kgml_Script_scale_canvas = 102906;
declare const kgml_GlobalScript_season_tally_scripts = 102907;
declare const kgml_Script____struct___204_s_obj_season_tally_create_season_tally_scripts = 102908;
declare const kgml_Script____struct___205_s_obj_season_tally_create_season_tally_scripts = 102909;
declare const kgml_Script_s_obj_season_tally_create = 102910;
declare const kgml_Script_s_maps_array_sort_week = 102911;
declare const kgml_Script_s_get_human_opponent_sla_prefix = 102912;
declare const kgml_Script_s_obj_season_tally_step = 102913;
declare const kgml_Script_s_obj_season_tally_draw_gui = 102914;
declare const kgml_Script_s_obj_season_tally_draw_gui_begin = 102915;
declare const kgml_Script_s_draw_season_tally_header = 102916;
declare const kgml_GlobalScript_slog = 102917;
declare const kgml_Script_slog = 102918;
declare const kgml_Script_slog2 = 102919;
declare const kgml_Script_slogf = 102920;
declare const kgml_Script_slog_map = 102921;
declare const kgml_Script_slog_struct = 102922;
declare const kgml_GlobalScript_title_scripts = 102923;
declare const kgml_Script_s_title_goto = 102924;
declare const kgml_Script_s_title_create = 102925;
declare const kgml_Script_s_title_exit = 102926;
declare const kgml_Script_s_title_check_any_button = 102927;
declare const kgml_Script_s_title_create_image = 102928;
declare const kgml_Script_s_title_step_image = 102929;
declare const kgml_Script_s_title_draw_gui_image = 102930;
declare const kgml_Script_f_almost_same = 102931;
declare const kgml_Script_s_title_create_video = 102932;
declare const kgml_Script_s_title_async_social_video = 102933;
declare const kgml_Script_s_title_do_video_end = 102934;
declare const kgml_Script_s_title_step_video = 102935;
declare const kgml_Script_s_title_draw_gui_video = 102936;
declare const kgml_Script_s_title_create_fadeinout_splash = 102937;
declare const kgml_Script_s_title_step_fadeinout_splash = 102938;
declare const kgml_Script_s_title_draw_fadeinout_splash = 102939;
declare const kgml_Script_poki_init = 102940;
declare const kgml_Script_poki_commercial_break = 102941;
declare const kgml_Script_poki_rewarded_break = 102942;
declare const kgml_Script_poki_script_closure = 102943;
declare const kgml_Script_gmcallback_poki_closure = 102944;
declare const kgml_Script_poki_get_team = 102945;
declare const kgml_Script_poki_set_team = 102946;
declare const kgml_Script____struct___206_gml_Object_obj_frontoffice_Create_0 = 102947;
declare const kgml_Script_s_draw_history_line_gml_Object_obj_hof_history_Draw_64 = 102948;
declare const kgml_Script_s_draw_history_lines_college_gml_Object_obj_hof_history_Draw_64 = 102949;
declare const kgml_Script_s_records_conf_only_games_gml_Object_obj_hof_records_coach_Create_0 = 102950;
declare const kgml_Script_s_records_conf_only_pct_gml_Object_obj_hof_records_coach_Create_0 = 102951;
declare const kgml_Script_s_hof_retrobowl_wins_franchise_create_gml_Object_obj_hof_retrobowl_wins_Create_0 = 102952;
declare const kgml_Script_s_academic_gpa_limits_create_gml_Object_obj_hof_retrobowl_wins_Create_0 = 102953;
declare const kgml_Script_s_hof_retrobowl_wins_franchise_draw_gml_Object_obj_hof_retrobowl_wins_Draw_64 = 102954;
declare const kgml_Script_s_academic_gpa_limits_draw_gml_Object_obj_hof_retrobowl_wins_Draw_64 = 102955;
declare const kgml_Script____struct___207_gml_Object_obj_home_Create_0 = 102956;
declare var __yyg__SetImageIndexGML: (frame: any) => void;
declare var g_instance_names: {
	x: boolean[];
	y: boolean[];
	xprevious: boolean[];
	yprevious: boolean[];
	xstart: boolean[];
	ystart: boolean[];
	hspeed: boolean[];
	vspeed: boolean[];
	direction: boolean[];
	speed: boolean[];
	friction: boolean[];
	gravity: boolean[];
	gravity_direction: boolean[];
	in_collision_tree: boolean[];
	object_index: boolean[];
	id: boolean[];
	alarm: boolean[];
	solid: boolean[];
	visible: boolean[];
	persistent: boolean[];
	managed: boolean[];
	depth: boolean[];
	bbox_left: boolean[];
	bbox_right: boolean[];
	bbox_top: boolean[];
	bbox_bottom: boolean[];
	sprite_index: boolean[];
	image_index: (string | boolean)[];
	image_single: boolean[];
	image_number: boolean[];
	sprite_width: boolean[];
	sprite_height: boolean[];
	sprite_xoffset: boolean[];
	sprite_yoffset: boolean[];
	image_xscale: boolean[];
	image_yscale: boolean[];
	image_angle: boolean[];
	image_alpha: boolean[];
	image_blend: boolean[];
	image_speed: boolean[];
	mask_index: boolean[];
	path_index: boolean[];
	path_position: boolean[];
	path_positionprevious: boolean[];
	path_speed: boolean[];
	path_scale: boolean[];
	path_orientation: boolean[];
	path_endaction: boolean[];
	timeline_index: boolean[];
	timeline_position: boolean[];
	timeline_speed: boolean[];
	timeline_running: boolean[];
	timeline_loop: boolean[];
	phy_rotation: boolean[];
	phy_position_x: boolean[];
	phy_position_y: boolean[];
	phy_angular_velocity: boolean[];
	phy_linear_velocity_x: boolean[];
	phy_linear_velocity_y: boolean[];
	phy_speed_x: boolean[];
	phy_speed_y: boolean[];
	phy_speed: boolean[];
	phy_angular_damping: boolean[];
	phy_linear_damping: boolean[];
	phy_bullet: boolean[];
	phy_fixed_rotation: boolean[];
	phy_active: boolean[];
	phy_mass: boolean[];
	phy_inertia: boolean[];
	phy_com_x: boolean[];
	phy_com_y: boolean[];
	phy_dynamic: boolean[];
	phy_kinematic: boolean[];
	phy_sleeping: boolean[];
	phy_position_xprevious: boolean[];
	phy_position_yprevious: boolean[];
	phy_collision_points: boolean[];
	layer: boolean[];
	in_sequence: boolean[];
	sequence_instance: boolean[];
	drawn_by_sequence: boolean[];
	phy_collision_x: boolean[];
	phy_collision_y: boolean[];
	phy_col_normal_x: boolean[];
	phy_col_normal_y: boolean[];
};
declare var g_global_names: {
	argument_relative: (string | boolean)[];
	argument_count: boolean[];
	argument: boolean[];
	argument0: boolean[];
	argument1: boolean[];
	argument2: boolean[];
	argument3: boolean[];
	argument4: boolean[];
	argument5: boolean[];
	argument6: boolean[];
	argument7: boolean[];
	argument8: boolean[];
	argument9: boolean[];
	argument10: boolean[];
	argument11: boolean[];
	argument12: boolean[];
	argument13: boolean[];
	argument14: boolean[];
	argument15: boolean[];
	debug_mode: boolean[];
	pointer_invalid: boolean[];
	pointer_null: boolean[];
	undefined: boolean[];
	NaN: boolean[];
	infinity: boolean[];
	room: (string | boolean)[];
	room_first: boolean[];
	room_last: boolean[];
	transition_kind: boolean[];
	transition_steps: boolean[];
	score: boolean[];
	lives: (string | boolean)[];
	health: (string | boolean)[];
	game_id: boolean[];
	game_display_name: boolean[];
	game_project_name: boolean[];
	game_save_id: boolean[];
	working_directory: boolean[];
	temp_directory: boolean[];
	cache_directory: boolean[];
	program_directory: boolean[];
	instance_count: (string | boolean)[];
	instance_id: boolean[];
	room_width: (string | boolean)[];
	room_height: (string | boolean)[];
	room_caption: (string | boolean)[];
	room_speed: (string | boolean)[];
	room_persistent: (string | boolean)[];
	view_enabled: (string | boolean)[];
	view_current: boolean[];
	view_visible: boolean[];
	mouse_x: (string | boolean)[];
	mouse_y: (string | boolean)[];
	mouse_button: boolean[];
	mouse_lastbutton: boolean[];
	keyboard_key: boolean[];
	keyboard_lastkey: boolean[];
	keyboard_lastchar: boolean[];
	keyboard_string: boolean[];
	show_score: boolean[];
	show_lives: boolean[];
	show_health: boolean[];
	caption_score: boolean[];
	caption_lives: boolean[];
	caption_health: boolean[];
	fps: boolean[];
	fps_real: boolean[];
	current_time: (string | boolean)[];
	current_year: (string | boolean)[];
	current_month: (string | boolean)[];
	current_day: (string | boolean)[];
	current_weekday: (string | boolean)[];
	current_hour: (string | boolean)[];
	current_minute: (string | boolean)[];
	current_second: (string | boolean)[];
	event_type: (string | boolean)[];
	event_number: (string | boolean)[];
	event_object: (string | boolean)[];
	event_action: boolean[];
	error_occurred: boolean[];
	error_last: boolean[];
	gamemaker_registered: boolean[];
	gamemaker_pro: boolean[];
	application_surface: boolean[];
	font_texture_page_size: boolean[];
	os_type: (string | boolean)[];
	os_device: (string | boolean)[];
	os_browser: (string | boolean)[];
	os_version: (string | boolean)[];
	browser_width: (string | boolean)[];
	browser_height: (string | boolean)[];
	async_load: (string | boolean)[];
	event_data: (string | boolean)[];
	display_aa: (string | boolean)[];
	iap_data: (string | boolean)[];
	cursor_sprite: (string | boolean)[];
	delta_time: (string | boolean)[];
	webgl_enabled: boolean[];
	audio_bus_main: boolean[];
	rollback_current_frame: boolean[];
	rollback_confirmed_frame: boolean[];
	rollback_event_id: boolean[];
	rollback_event_param: boolean[];
	rollback_game_running: boolean[];
	rollback_api_server: boolean[];
	wallpaper_config: boolean[];
	wallpaper_subscription_data: boolean[];
	view_xview: boolean[];
	view_yview: boolean[];
	view_wview: boolean[];
	view_hview: boolean[];
	view_angle: boolean[];
	view_hborder: boolean[];
	view_vborder: boolean[];
	view_hspeed: boolean[];
	view_vspeed: boolean[];
	view_object: boolean[];
	view_xport: boolean[];
	view_yport: boolean[];
	view_wport: boolean[];
	view_hport: boolean[];
	view_surface_id: boolean[];
	view_camera: boolean[];
	marked: boolean[];
	active: boolean[];
};
declare function _f1(_g1: any): void;
declare function _02(_12: any, _22: any): any;
declare function _i4(_j4: any, _k4: any, _l4: any, _m4: any): void;
declare function __5(_i2: any): void;
declare var _E4: any;
declare var _m6: boolean;
declare var _n6: number;
declare var _o6: any;
declare var _p6: number[];
declare var _q6: number;
declare var _r6: number;
declare var _s6: number;
declare var _t6: number;
declare var _u6: number;
declare var _v6: number;
declare var _w6: number;
declare var _x6: number;
declare function _y6(_z6: any): void;
declare function _A6(): void;
declare function _h3(): void;
declare function _C6(): void;
declare function _y8(_z8: any, _A8: any, _B8: any): void;
declare var _ba: number,
	_ca: number,
	_da: number,
	_ea: number,
	_fa: number,
	_ga: number,
	_ha: number;
declare function _ia(_ja: any): number;
declare var draw_primitive_begin: any,
	draw_primitive_begin_texture: any,
	draw_vertex: any,
	draw_vertex_color: any,
	draw_vertex_colour: any,
	draw_vertex_texture: any,
	draw_vertex_texture_color: any,
	draw_vertex_texture_colour: any,
	draw_primitive_end: any;
declare var _ra: number, _sa: number, _ta: any, _ua: any;
declare function _va(): void;
declare function _Da(): void;
declare function _wa(_Ea: any): void;
declare function _xa(_Ea: any, _S6: any): void;
declare function _ya(_R3: any, _S3: any): void;
declare function _za(_R3: any, _S3: any, _Na: any, _Y7: any): void;
declare function _Aa(_R3: any, _S3: any, _Pa: any, _Qa: any): void;
declare function _Ba(
	_R3: any,
	_S3: any,
	_Pa: any,
	_Qa: any,
	_Na: any,
	_Y7: any,
): void;
declare function _Ca(): void;
declare function _Sa(
	_Pa: any,
	_Qa: any,
): {
	_n3: any;
	_o3: any;
};
declare function _Za(__a: any): void;
declare var _ec: any;
declare var _fc: any[];
declare function _gc(): void;
declare function _Kc(): void;
declare var _Vd: any[];
declare var _Wd: string;
declare var _Xd: number;
declare var _Yd: number;
declare function _Zd(): void;
declare function _ee(_fe: any, _R3: any, _S3: any): void;
declare function _ge(_he: any): number;
declare function _ie(_he: any): number;
declare function _le(event: any): void;
declare function _ze(e: any): void;
declare function _Ee(): void;
declare function ds_set_precision(_Ag: any): void;
declare function _Cg(): void;
declare function _Dg(_Eg: any, _Fg: any): void;
declare function ds_grid_create(_Eg: any, _Fg: any): any;
declare function ds_grid_destroy(_fe: any): void;
declare function ds_grid_copy(_fe: any, _Mg: any): void;
declare function ds_grid_resize(_fe: any, _Eg: any, _Fg: any): void;
declare function ds_grid_width(_fe: any): any;
declare function ds_grid_height(_fe: any): any;
declare function ds_grid_clear(_fe: any, _12: any): void;
declare var ds_grid_set: typeof _Qg;
declare function _Qg(_fe: any, _R3: any, _S3: any, _12: any): void;
declare function _Rg(_fe: any, _R3: any, _S3: any, _12: any): void;
declare var ds_grid_set_pre: typeof _Sg;
declare function _Sg(_fe: any, _R3: any, _S3: any, _12: any): any;
declare function _Tg(_fe: any, _R3: any, _S3: any, _12: any): any;
declare var ds_grid_set_post: typeof _Ug;
declare function _Ug(_fe: any, _R3: any, _S3: any, _12: any): any;
declare function _Vg(_fe: any, _R3: any, _S3: any, _12: any): any;
declare function ds_grid_add(_fe: any, _R3: any, _S3: any, _12: any): void;
declare function ds_grid_multiply(_fe: any, _R3: any, _S3: any, _12: any): void;
declare function ds_grid_set_region(
	_fe: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_12: any,
): void;
declare function ds_grid_add_region(
	_fe: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_12: any,
): void;
declare function ds_grid_multiply_region(
	_fe: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_12: any,
): void;
declare function ds_grid_set_disk(
	_fe: any,
	_R3: any,
	_S3: any,
	_2h: any,
	_12: any,
): void;
declare function ds_grid_add_disk(
	_fe: any,
	_R3: any,
	_S3: any,
	_2h: any,
	_12: any,
): void;
declare function ds_grid_multiply_disk(
	_fe: any,
	_R3: any,
	_S3: any,
	_2h: any,
	_12: any,
): void;
declare function _5h(
	_fe: any,
	_Mg: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_6h: any,
	_7h: any,
	_8h: any,
): void;
declare function ds_grid_set_grid_region(
	_fe: any,
	_Mg: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_6h: any,
	_7h: any,
): void;
declare function ds_grid_add_grid_region(
	_fe: any,
	_Mg: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_6h: any,
	_7h: any,
): void;
declare function ds_grid_multiply_grid_region(
	_fe: any,
	_Mg: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_6h: any,
	_7h: any,
	_12: any,
): void;
declare var ds_grid_get: typeof _hh;
declare function _hh(_fe: any, _R3: any, _S3: any): any;
declare function _ih(_fe: any, _R3: any, _S3: any): any;
declare function _jh(_fe: any, _m5: any, _n5: any, _P4: any, _Q4: any): number;
declare function ds_grid_get_sum(
	_fe: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
): any;
declare function ds_grid_get_max(
	_fe: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
): any;
declare function ds_grid_get_min(
	_fe: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
): any;
declare function ds_grid_get_mean(
	_fe: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
): any;
declare function _kh(_fe: any, _R3: any, _S3: any, _2h: any): void;
declare function ds_grid_get_disk_sum(
	_fe: any,
	_R3: any,
	_S3: any,
	_2h: any,
): any;
declare function ds_grid_get_disk_max(
	_fe: any,
	_R3: any,
	_S3: any,
	_2h: any,
): any;
declare function ds_grid_get_disk_min(
	_fe: any,
	_R3: any,
	_S3: any,
	_2h: any,
): any;
declare function ds_grid_get_disk_mean(
	_fe: any,
	_R3: any,
	_S3: any,
	_2h: any,
): any;
declare function _lh(
	_fe: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_12: any,
): boolean | 0;
declare function ds_grid_value_exists(
	_fe: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_12: any,
): any;
declare function ds_grid_value_x(
	_fe: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_12: any,
): any;
declare function ds_grid_value_y(
	_fe: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_12: any,
): any;
declare function _mh(_fe: any, _R3: any, _S3: any, _2h: any, _12: any): void;
declare function ds_grid_value_disk_exists(
	_fe: any,
	_R3: any,
	_S3: any,
	_2h: any,
	_12: any,
): any;
declare function ds_grid_value_disk_x(
	_fe: any,
	_R3: any,
	_S3: any,
	_2h: any,
	_12: any,
): any;
declare function ds_grid_value_disk_y(
	_fe: any,
	_R3: any,
	_S3: any,
	_2h: any,
	_12: any,
): any;
declare function ds_grid_shuffle(_fe: any): void;
declare function ds_grid_write(_fe: any): string;
declare function ds_grid_read(_fe: any, _th: any): boolean;
declare function ds_grid_sort(_fe: any, _Ah: any, _Bh: any): void;
declare function ds_grid_to_mp_grid(_Ig: any, _Jh: any, _Kh: any): void;
declare function ds_list_create(): any;
declare function ds_list_destroy(_fe: any): void;
declare function ds_list_clear(_fe: any): void;
declare function ds_list_copy(_fe: any, _Mg: any): void;
declare function ds_list_size(_fe: any): any;
declare function ds_list_empty(_fe: any): boolean;
declare function ds_list_add(): void;
declare function _4i(_fe: any, _12: any): void;
declare function _7i(_fe: any, _12: any): void;
declare function ds_list_set(_fe: any, _92: any, _12: any): void;
declare function ds_list_set_pre(_fe: any, _92: any, _12: any): any;
declare function ds_list_set_post(_fe: any, _92: any, _12: any): any;
declare function ds_list_insert(_fe: any, _ai: any, _12: any): any;
declare function _ci(_fe: any, _ai: any, _12: any): any;
declare function _di(_fe: any, _ai: any, _12: any): any;
declare function ds_list_replace(_fe: any, _ai: any, _12: any): any;
declare function ds_list_delete(_fe: any, _ai: any): any;
declare function ds_list_find_index(_fe: any, _12: any): number;
declare function ds_list_find_value(_fe: any, _ai: any): any;
declare function ds_list_is_list(_fe: any, _ai: any): boolean;
declare function ds_list_is_map(_fe: any, _ai: any): boolean;
declare function ds_list_sort(_fe: any, _ji: any): number;
declare function ds_list_shuffle(_fe: any): number;
declare function ds_list_write(_fe: any): string;
declare function ds_list_read(_fe: any, _th: any): boolean;
declare function ds_list_mark_as_map(_fe: any, _ai: any): void;
declare function ds_list_mark_as_list(_fe: any, _ai: any): void;
declare var _6i: number, _8i: number;
declare function _li(): void;
declare function _5i(_db: any, _Uh: any): void;
declare const hasOwnProperty: (v: PropertyKey) => boolean;
declare const _ni: (string: any) => number;
declare const _oi: (_pi: any) => any;
declare const _ri: (value: any) => any;
declare const _si: {
	string: (string: any) => number;
	_ti: (string: any) => number;
	_ui: (string: any) => number;
	_vi: (_pi: any) => any;
};
declare function _wi(_Qa: any): any;
declare function ds_map_create(): any;
declare function ds_map_destroy(_fe: any): void;
declare function ds_map_clear(_fe: any): void;
declare function _xi(_yi: any): void;
declare function ds_map_copy(_Jh: any, _Mg: any): void;
declare function ds_map_size(_fe: any): any;
declare function ds_map_empty(_fe: any): boolean;
declare function ds_map_replace(_fe: any, _Ai: any, _12: any): void;
declare function ds_map_replace_map(_fe: any, _Ai: any, _12: any): void;
declare function ds_map_replace_list(_fe: any, _Ai: any, _12: any): void;
declare function ds_map_delete(_fe: any, _Ai: any): void;
declare function ds_map_exists(_fe: any, _Ai: any): any;
declare function ds_map_add(_fe: any, _Ai: any, _12: any): void;
declare function ds_map_add_map(_fe: any, _Ai: any, _12: any): void;
declare function ds_map_add_list(_fe: any, _Ai: any, _12: any): void;
declare function ds_map_set(_fe: any, _Ai: any, _12: any): void;
declare function ds_map_set_pre(_fe: any, _Ai: any, _12: any): any;
declare function ds_map_set_post(_fe: any, _Ai: any, _12: any): any;
declare function ds_map_find_value(_fe: any, _Ai: any): any;
declare function ds_map_values_to_array(_fe: any, _Di: any): any;
declare function ds_map_keys_to_array(_fe: any, _Di: any): any;
declare function ds_map_is_map(_fe: any, _Ai: any): boolean;
declare function ds_map_is_list(_fe: any, _Ai: any): boolean;
declare function ds_map_find_previous(_fe: any, _Ai: any): any;
declare function ds_map_find_next(_fe: any, _Ai: any): any;
declare function ds_map_find_first(_fe: any): any;
declare function ds_map_find_last(_fe: any): any;
declare function ds_map_write(_fe: any): string;
declare function ds_map_read(_fe: any, _th: any): boolean;
declare function ds_map_secure_save(_fe: any, _Ji: any): void;
declare function ds_map_secure_load_buffer(_Oi: any): number;
declare function ds_map_secure_save_buffer(_A5: any, _Oi: any): number;
declare function ds_map_secure_load(_Ji: any): any;
declare function _Ti(): string;
declare function _Li(): string;
declare function _Vi(_Wi: any, _Uh: any): void;
declare function _Xi(_Wi: any, _Uh: any): void;
declare function ds_priority_create(): any;
declare function ds_priority_destroy(_fe: any): void;
declare function ds_priority_clear(_fe: any): void;
declare function ds_priority_copy(_fe: any, _Mg: any): void;
declare function ds_priority_size(_fe: any): any;
declare function ds_priority_empty(_fe: any): boolean;
declare function ds_priority_add(_fe: any, _12: any, _3j: any): void;
declare function ds_priority_change_priority(
	_fe: any,
	_12: any,
	_3j: any,
): void;
declare function ds_priority_find_priority(_fe: any, _12: any): any;
declare function ds_priority_delete_value(_fe: any, _12: any): void;
declare function ds_priority_delete_min(_fe: any): any;
declare function ds_priority_find_min(_fe: any): any;
declare function ds_priority_delete_max(_fe: any): any;
declare function ds_priority_find_max(_fe: any): any;
declare function ds_priority_write(_fe: any): string;
declare function ds_priority_read(_fe: any, _th: any): boolean;
declare function ds_queue_create(): any;
declare function ds_queue_destroy(_fe: any): void;
declare function ds_queue_clear(_fe: any): void;
declare function ds_queue_copy(_Jh: any, _Mg: any): void;
declare function ds_queue_size(_fe: any): any;
declare function ds_queue_empty(_fe: any): boolean;
declare function ds_queue_enqueue(): void;
declare function ds_queue_dequeue(_fe: any): any;
declare function ds_queue_head(_fe: any): any;
declare function ds_queue_tail(_fe: any): any;
declare function ds_queue_write(_fe: any): string;
declare function ds_queue_read(_fe: any, _th: any): boolean;
declare function ds_stack_create(): any;
declare function ds_stack_destroy(_fe: any): void;
declare function ds_stack_clear(_fe: any): void;
declare function ds_stack_copy(_fe: any, _Mg: any): void;
declare function ds_stack_size(_fe: any): any;
declare function ds_stack_empty(_fe: any): boolean;
declare function ds_stack_push(_fe: any, _12: any): void;
declare function ds_stack_pop(_fe: any): any;
declare function ds_stack_top(_fe: any): any;
declare function ds_stack_write(_fe: any): string;
declare function ds_stack_read(_fe: any, _th: any): boolean;
declare var _fj: boolean;
declare function _gj(_12: any): any;
declare function animcurve_get(_lj: any): any;
declare function animcurve_get_channel_index(_mj: any, _nj: any): number;
declare function animcurve_get_channel(_mj: any, _sj: any): number;
declare function animcurve_channel_evaluate(_uj: any, _vj: any): any;
declare function animcurve_create(): any;
declare function animcurve_destroy(_mj: any): void;
declare function animcurve_exists(_mj: any): 0 | 1;
declare function animcurve_channel_new(): any;
declare function animcurve_point_new(): any;
declare function _Fj(_Gj: any): boolean;
declare function _Kj(_Gj: any): any;
declare function _Mj(_Gj: any): any;
declare function _Nj(_Gj: any): any;
declare function _Pj(_Gj: any): any;
declare function _Qj(
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
	_Rj: any,
	_Sj: any,
): any;
declare function _1k(
	_fe: any,
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
	_Rj: any,
	_Sj: any,
): any;
declare function _2k(_Eg: any, _Fg: any, _Na: any): any;
declare var _6k: typeof _2k;
declare function _7k(_Eg: any, _Fg: any, _8k: any, _9k: any, _Ea: any): any;
declare function _bk(_U2: any): any;
declare function _dk(_ek: any): any;
declare function _jk(_Jh: any, _Ig: any): any;
declare function _lk(_ek: any, _R3: any, _S3: any): void;
declare function _nk(_ek: any, _R3: any, _S3: any, _Eg: any, _Fg: any): void;
declare function _pk(_ek: any, _R3: any, _S3: any): void;
declare function _rk(
	_ek: any,
	_sk: any,
	_tk: any,
	_Q6: any,
	_R6: any,
	_R3: any,
	_S3: any,
): void;
declare function _wk(
	_ek: any,
	_R3: any,
	_S3: any,
	_xk: any,
	_yk: any,
	_Z2: any,
	_zk: any,
	_Y7: any,
): void;
declare function _Bk(
	_ek: any,
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
	_zk: any,
	_Y7: any,
): void;
declare function _Ck(
	_ek: any,
	_R3: any,
	_S3: any,
	_xk: any,
	_yk: any,
	_zk: any,
	_Y7: any,
): void;
declare function _Dk(
	_ek: any,
	_sk: any,
	_tk: any,
	_Q6: any,
	_R6: any,
	_R3: any,
	_S3: any,
	_xk: any,
	_yk: any,
	_zk: any,
	_Y7: any,
): void;
declare function _Ek(
	_ek: any,
	_sk: any,
	_tk: any,
	_Q6: any,
	_R6: any,
	_R3: any,
	_S3: any,
	_xk: any,
	_yk: any,
	_Z2: any,
	_Fk: any,
	_Gk: any,
	_Hk: any,
	_Ik: any,
	_Y7: any,
): void;
declare function _Kk(_U2: any, _ek: any): void;
declare function _Mk(_Ji: any, _Rj: any, _Sj: any): any;
declare function _Sk(_U2: any, _Ji: any, _Rj: any, _Sj: any): any;
declare function _Wk(_U2: any): {
	_Fa: any;
	_Ga: any;
};
declare function _Xk(_U2: any): any[];
declare function _0l(_1l: any): 0 | -1;
declare function _2l(_3l: any): 0 | -1;
declare function _4l(_1l: any): 0 | -1;
declare function _6l(_3l: any): 0 | -1;
declare var _7l: any[];
declare var _8l: number;
declare function _9l(target: any): void;
declare function _al(
	_R3: any,
	_S3: any,
	_bl: any,
	_cl: any,
	_dl: any,
	_el: any,
): HTMLDivElement;
declare function clickable_add(
	_R3: any,
	_S3: any,
	_bl: any,
	_cl: any,
	_dl: any,
	_el: any,
): number;
declare function clickable_add_ext(
	_R3: any,
	_S3: any,
	_bl: any,
	_cl: any,
	_dl: any,
	_el: any,
	_ll: any,
	_Y7: any,
): number;
declare function clickable_exists(_fe: any): boolean;
declare function clickable_delete(_fe: any): void;
declare function clickable_change(_fe: any, _bl: any, _R3: any, _S3: any): void;
declare function clickable_change_ext(
	_fe: any,
	_bl: any,
	_R3: any,
	_S3: any,
	_ll: any,
	_Y7: any,
): void;
declare function clickable_set_style(_tl: any, _ul: any): void;
declare function _vl(
	_wl: any,
	_R3: any,
	_S3: any,
	_Uh: any,
	_Ag: any,
	_xl: any,
): any;
declare function _Fl(
	_wl: any,
	_R3: any,
	_S3: any,
	_Uh: any,
	_Ag: any,
	_xl: any,
	_j6: any,
): void;
declare function collision_point(
	_wl: any,
	_R3: any,
	_S3: any,
	_Uh: any,
	_Ag: any,
	_xl: any,
): any;
declare function _Ll(_Ml: any, _Nl: any, _Ol: any, _Pl: any): void;
declare function collision_point_list(
	_wl: any,
	_R3: any,
	_S3: any,
	_Uh: any,
	_Ag: any,
	_xl: any,
	_j6: any,
	__l: any,
): number;
declare function _2m(
	_wl: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_Uh: any,
	_Ag: any,
	_xl: any,
): any;
declare function collision_rectangle(
	_wl: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_Uh: any,
	_Ag: any,
	_xl: any,
): any;
declare function _5m(
	_wl: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_Uh: any,
	_Ag: any,
	_xl: any,
	_j6: any,
): any;
declare function collision_rectangle_list(
	_wl: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_Uh: any,
	_Ag: any,
	_xl: any,
	_j6: any,
	__l: any,
): number;
declare function collision_circle(
	_wl: any,
	_8m: any,
	_9m: any,
	_am: any,
	_Uh: any,
	_Ag: any,
	_xl: any,
): any;
declare function collision_circle_list(
	_wl: any,
	_8m: any,
	_9m: any,
	_am: any,
	_Uh: any,
	_Ag: any,
	_xl: any,
	_j6: any,
	__l: any,
): number;
declare function _bm(
	_wl: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_Uh: any,
	_Ag: any,
	_xl: any,
): any;
declare function _dm(
	_wl: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_Uh: any,
	_Ag: any,
	_xl: any,
	_j6: any,
): any;
declare function collision_ellipse(
	_wl: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_Uh: any,
	_Ag: any,
	_xl: any,
): any;
declare function collision_ellipse_list(
	_wl: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_Uh: any,
	_Ag: any,
	_xl: any,
	_j6: any,
	__l: any,
): number;
declare function _fm(
	_wl: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_Uh: any,
	_Ag: any,
	_xl: any,
): any;
declare function _hm(
	_wl: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_Uh: any,
	_Ag: any,
	_xl: any,
	_j6: any,
): void;
declare function collision_line(
	_wl: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_Uh: any,
	_Ag: any,
	_xl: any,
): any;
declare function collision_line_list(
	_wl: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_Uh: any,
	_Ag: any,
	_xl: any,
	_j6: any,
	__l: any,
): number;
declare function point_in_rectangle(
	_Ol: any,
	_Pl: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
): boolean;
declare function rectangle_in_rectangle(
	_jm: any,
	_km: any,
	_lm: any,
	_mm: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
): number;
declare function _pm(
	_qm: any,
	_rm: any,
	_X4: any,
	_Y4: any,
	_Z4: any,
	__4: any,
	_J9: any,
	_K9: any,
): boolean;
declare function point_in_triangle(
	_Ol: any,
	_Pl: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_ym: any,
	_zm: any,
): boolean;
declare function _Am(_Ol: any, _Pl: any, _Bm: any, _Cm: any, _Dm: any): boolean;
declare function point_in_circle(
	_Ol: any,
	_Pl: any,
	_Bm: any,
	_Cm: any,
	_Fm: any,
): boolean;
declare function rectangle_in_circle(
	_Gm: any,
	_Hm: any,
	_Im: any,
	_Jm: any,
	_Bm: any,
	_Cm: any,
	_Fm: any,
): number;
declare function _Pm(
	_Gm: any,
	_Hm: any,
	_Im: any,
	_Jm: any,
	_Bm: any,
	_Cm: any,
	_Fm: any,
): number;
declare function _Qm(
	_Rm: any,
	_Sm: any,
): {
	x: number;
	y: number;
};
declare function _Um(
	_t8: any,
	_Vm: any,
	_Tm: any,
): {
	min: any;
	max: any;
};
declare function rectangle_in_triangle(
	_Gm: any,
	_Hm: any,
	_Im: any,
	_Jm: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_ym: any,
	_zm: any,
): 0 | 2 | 1;
declare function _0n(): void;
declare function _1n(): void;
declare function _2n(): void;
declare function _3n(): void;
declare function _4n(): void;
declare function _5n(): void;
declare function _6n(): void;
declare function _7n(): void;
declare function _8n(): void;
declare function _9n(): void;
declare function _an(): void;
declare function _bn(): void;
declare function _cn(): void;
declare function matrix_get(): void;
declare function matrix_set(): void;
declare function gpu_set_blendenable(): void;
declare function gpu_set_ztestenable(): void;
declare function gpu_set_zfunc(): void;
declare function gpu_set_zwriteenable(): void;
declare function gpu_set_fog(): void;
declare function gpu_set_cullmode(): void;
declare function gpu_set_blendmode(): void;
declare function gpu_set_blendmode_ext(): void;
declare function gpu_set_blendmode_ext_sepalpha(): void;
declare function gpu_set_blendequation(): void;
declare function gpu_set_blendequation_sepalpha(): void;
declare function gpu_set_colorwriteenable(): void;
declare function gpu_set_colourwriteenable(): void;
declare function gpu_set_alphatestenable(): void;
declare function gpu_set_alphatestref(): void;
declare function gpu_set_texfilter(): void;
declare function gpu_set_texfilter_ext(): void;
declare function gpu_set_texrepeat(): void;
declare function gpu_set_texrepeat_ext(): void;
declare function gpu_set_tex_filter(): void;
declare function gpu_set_tex_filter_ext(): void;
declare function gpu_set_tex_repeat(): void;
declare function gpu_set_tex_repeat_ext(): void;
declare function gpu_set_tex_mip_filter(): void;
declare function gpu_set_tex_mip_filter_ext(): void;
declare function gpu_set_tex_mip_bias(): void;
declare function gpu_set_tex_mip_bias_ext(): void;
declare function gpu_set_tex_min_mip(): void;
declare function gpu_set_tex_min_mip_ext(): void;
declare function gpu_set_tex_max_mip(): void;
declare function gpu_set_tex_max_mip_ext(): void;
declare function gpu_set_tex_max_aniso(): void;
declare function gpu_set_tex_max_aniso_ext(): void;
declare function gpu_set_tex_mip_enable(): void;
declare function gpu_set_tex_mip_enable_ext(): void;
declare function gpu_get_blendenable(): void;
declare function gpu_get_ztestenable(): void;
declare function gpu_get_zfunc(): void;
declare function gpu_get_zwriteenable(): void;
declare function gpu_get_fog(): void;
declare function gpu_get_cullmode(): void;
declare function gpu_get_blendmode(): void;
declare function gpu_get_blendmode_ext(): void;
declare function gpu_get_blendmode_ext_sepalpha(): void;
declare function gpu_get_blendmode_src(): void;
declare function gpu_get_blendmode_dest(): void;
declare function gpu_get_blendmode_srcalpha(): void;
declare function gpu_get_blendmode_destalpha(): void;
declare function gpu_get_blendequation(): void;
declare function gpu_get_blendequation_sepalpha(): void;
declare function gpu_get_colorwriteenable(): void;
declare function gpu_get_colourwriteenable(): void;
declare function gpu_get_alphatestenable(): void;
declare function gpu_get_alphatestref(): void;
declare function gpu_get_texfilter(): void;
declare function gpu_get_texfilter_ext(): void;
declare function gpu_get_texrepeat(): void;
declare function gpu_get_texrepeat_ext(): void;
declare function gpu_get_tex_filter(): void;
declare function gpu_get_tex_filter_ext(): void;
declare function gpu_get_tex_repeat(): void;
declare function gpu_get_tex_repeat_ext(): void;
declare function gpu_get_tex_mip_filter(): void;
declare function gpu_get_tex_mip_filter_ext(): void;
declare function gpu_get_tex_mip_bias(): void;
declare function gpu_get_tex_mip_bias_ext(): void;
declare function gpu_get_tex_min_mip(): void;
declare function gpu_get_tex_min_mip_ext(): void;
declare function gpu_get_tex_max_mip(): void;
declare function gpu_get_tex_max_mip_ext(): void;
declare function gpu_get_tex_max_aniso(): void;
declare function gpu_get_tex_max_aniso_ext(): void;
declare function gpu_get_tex_mip_enable(): void;
declare function gpu_get_tex_mip_enable_ext(): void;
declare function gpu_push_state(): void;
declare function gpu_pop_state(): void;
declare function gpu_get_state(): void;
declare function gpu_set_state(): void;
declare var matrix_build: typeof _dn;
declare var matrix_multiply: typeof _en;
declare var matrix_transform_vertex: typeof _fn;
declare var matrix_stack_push: typeof _gn;
declare var matrix_stack_pop: typeof _hn;
declare var matrix_stack_set: typeof _in;
declare var matrix_stack_clear: typeof _jn;
declare var matrix_stack_top: typeof _kn;
declare var matrix_stack_is_empty: typeof _ln;
declare var matrix_build_identity: typeof _mn;
declare var matrix_build_lookat: typeof _nn;
declare var matrix_build_projection_ortho: typeof _on;
declare var matrix_build_projection_perspective: typeof _pn;
declare var matrix_build_projection_perspective_fov: typeof _qn;
declare var _rn: number;
declare var _sn: number;
declare var _tn: any[];
declare function _un(): void;
declare function _vn(_Ro: any): void;
declare function _wn(_So: any, _To: any, _Uo: any, alpha: any): void;
declare function _xn(_Xo: any): void;
declare function _yn(_Xo: any): void;
declare function _Fn(): boolean;
declare function _1p(x: any, y: any, w: any, h: any, angle: any): void;
declare function _zn(_O7: any, _H9: any, _I9: any, _ap: any, _N2: any): void;
declare function _En(): number;
declare function _Dn(index: any): any[];
declare function _An(
	_O7: any,
	x: any,
	y: any,
	z: any,
	_pp: any,
	_N2: any,
): void;
declare function _Bn(_O7: any, enable: any): void;
declare function _Cn(colour: any): void;
declare function _Gn(enable: any, colour: any, start: any, end: any): void;
declare function _Hn(_db: any): any[];
declare function _In(_db: any, _xp: any): void;
declare function _mn(): number[];
declare function _nn(
	_Ip: any,
	_Jp: any,
	_Kp: any,
	_Lp: any,
	_Mp: any,
	_Np: any,
	_Op: any,
	_Pp: any,
	_Qp: any,
): any[];
declare function _on(width: any, height: any, _Up: any, _Vp: any): any[];
declare function _pn(width: any, height: any, _Up: any, _Vp: any): any[];
declare function _qn(_Xp: any, _Yp: any, _Up: any, _Vp: any): any[];
declare function _dn(
	_R3: any,
	_S3: any,
	__p: any,
	_0q: any,
	_1q: any,
	_2q: any,
	_xk: any,
	_yk: any,
	_3q: any,
): any[];
declare function _en(_6q: any, _7q: any): any[];
declare function _fn(_bq: any, _R3: any, _S3: any, __p: any): any;
declare function _gn(_xp: any): void;
declare function _hn(): void;
declare function _jn(): void;
declare function _in(_xp: any): void;
declare function _kn(): any[];
declare function _ln(): boolean;
declare function _Kn(_Xo: any): void;
declare function _Ln(_Xo: any): void;
declare function _Mn(_Wi: any): void;
declare function _Nn(_uq: any): void;
declare function _On(_Xo: any): void;
declare function _Pn(_Xo: any, _Eb: any, _xq: any, _yq: any): void;
declare function _Qn(_Eq: any): void;
declare function _Jn(_Gq: any): void;
declare function _Rn(_Ig: any, _Jh: any): void;
declare function _Sn(_Ig: any, _Jh: any, _Qq: any, _Rq: any): void;
declare function _Tn(_Uq: any): void;
declare function _Un(_Uq: any, _Wq: any): void;
declare function _Vn(_Yq: any, _Zq: any, __q: any, _Y7: any): void;
declare function _Wn(_Yq: any, _Zq: any, __q: any, _Y7: any): void;
declare function _Xn(_Xo: any): void;
declare function _Yn(_vj: any): void;
declare function _Zn(_ar: any): void;
declare function __n(_ir: any, _ar: any): void;
declare function _0o(_lr: any): void;
declare function _1o(_ir: any, _lr: any): void;
declare function _2o(_qr: any): void;
declare function _3o(_sr: any, _qr: any): void;
declare function _4o(_ur: any): void;
declare function _5o(_sr: any, _ur: any): void;
declare function _6o(_xr: any): void;
declare function _7o(_sr: any, _xr: any): void;
declare function _8o(_Ar: any): void;
declare function _9o(_sr: any, _Ar: any): void;
declare function _ao(_Dr: any): void;
declare function _bo(_sr: any, _Dr: any): void;
declare function _co(_Xo: any): void;
declare function _do(_sr: any, _Xo: any): void;
declare function _eo(): 0 | 1;
declare function _fo(): 0 | 1;
declare function _go(): number;
declare function _ho(): any;
declare function _io(): 0 | 1;
declare function _jo(): any[];
declare function _ko(): any;
declare function _lo(): 0 | 2 | 1 | -1 | 3;
declare function _mo(): any[];
declare function _no(): any[];
declare function _oo(): any;
declare function _po(): any;
declare function _qo(): any;
declare function _ro(): any;
declare function _Mr(): any;
declare function _Nr(): any[];
declare function _so(): any[];
declare function _to(): any[];
declare function _uo(): 0 | 1;
declare function _vo(): any;
declare function _wo(): 0 | 1;
declare function _xo(_ir: any): 0 | 1;
declare function _yo(): 0 | 1;
declare function _zo(_ir: any): 0 | 1;
declare function _Ao(): any;
declare function _Bo(_sr: any): any;
declare function _Co(): any;
declare function _Do(_sr: any): any;
declare function _Eo(): any;
declare function _Fo(_sr: any): any;
declare function _Go(): any;
declare function _Ho(_sr: any): any;
declare function _Io(): any;
declare function _Jo(_sr: any): any;
declare function _Ko(): any;
declare function _Lo(_sr: any): any;
declare function _Mo(): void;
declare function _No(): void;
declare var _Rr: any;
declare var _Sr: any;
declare function _Tr(): void;
declare function _Vr(): void;
declare function _Oo(): any;
declare function _Po(_A5: any): void;
declare function _3s(): void;
declare var _4s: number;
declare var _5s: number;
declare var _6s: number;
declare var _7s: number;
declare var _8s: number;
declare var _9s: number[];
declare var _as: any[];
declare var _bs: number;
declare var _cs: number;
declare var _ds: boolean;
declare var _es: number;
declare var _fs: number;
declare function _gs(_hs: any): number;
declare function _ks(_ls: any): boolean;
declare function _ms(_ls: any): number[];
declare function _os(
	_ls: any,
	_ps: any,
	_qs: any,
	_rs: any,
	_ss: any,
	_ts: any,
	_us: any,
): 0 | 1;
declare var _js: number;
declare var _is: number;
declare function date_current_datetime(): number;
declare function _xs(): number;
declare function _ys(): number;
declare function date_create_datetime(
	_As: any,
	_Bs: any,
	_Cs: any,
	_Ds: any,
	_Es: any,
	_Fs: any,
): number;
declare function date_get_year(_A4: any): number;
declare function date_get_month(_A4: any): number;
declare function date_get_day(_A4: any): number;
declare function date_get_weekday(_A4: any): number;
declare function date_get_week(_A4: any): number;
declare function date_get_hour(_A4: any): number;
declare function date_get_minute(_A4: any): number;
declare function date_get_second(_A4: any): number;
declare function _Gs(_Hs: any): number;
declare function date_valid_datetime(
	_As: any,
	_Bs: any,
	_Cs: any,
	_Ds: any,
	_Es: any,
	_Fs: any,
): 0 | 1;
declare function date_inc_year(_Js: any, _Ks: any): number;
declare function date_inc_month(_Js: any, _Ks: any): number;
declare function date_inc_week(_Js: any, _Ks: any): number;
declare function date_inc_day(_Js: any, _Ks: any): number;
declare function date_inc_hour(_Js: any, _Ks: any): number;
declare function date_inc_minute(_Js: any, _Ks: any): number;
declare function date_inc_second(_Js: any, _Ks: any): number;
declare function date_get_day_of_year(_A4: any): number;
declare function date_get_hour_of_year(_A4: any): number;
declare function date_get_minute_of_year(_A4: any): number;
declare function date_get_second_of_year(_A4: any): number;
declare function date_year_span(_Ps: any, _Qs: any): number;
declare function date_month_span(_Ps: any, _Qs: any): number;
declare function date_week_span(_Ps: any, _Qs: any): number;
declare function date_day_span(_Ps: any, _Qs: any): number;
declare function date_hour_span(_Ps: any, _Qs: any): number;
declare function date_minute_span(_Ps: any, _Qs: any): number;
declare function date_second_span(_Ps: any, _Qs: any): number;
declare function _Us(_Js: any): number;
declare function date_compare_datetime(_Ps: any, _Qs: any): 0 | 1 | -1;
declare function date_compare_date(_Ps: any, _Qs: any): 0 | 1 | -1;
declare function date_compare_time(_Ps: any, _Qs: any): 0 | 1 | -1;
declare function _Zs(__s: any): number;
declare function _0t(__s: any): number;
declare function _1t(_95: any): number;
declare function _3t(time: any): {
	_ls: number;
	_ps: number;
	_qs: number;
	_rs: number;
	_ss: number;
	_ts: number;
};
declare function date_date_of(_Js: any): number;
declare function date_time_of(_Js: any): number;
declare function _6t(_5c: any): string;
declare function date_datetime_string(_Js: any): any;
declare function date_date_string(_Js: any): any;
declare function date_time_string(_Js: any): any;
declare function date_days_in_month(_Js: any): number;
declare function date_days_in_year(_Js: any): number;
declare function date_leap_year(_Js: any): boolean;
declare function date_is_today(_Js: any): boolean;
declare function date_set_timezone(_8t: any): void;
declare function date_get_timezone(): number;
declare var _9t: any[];
declare var _at: any[];
declare var _bt: any[];
declare var _ct: number;
declare var _dt: number;
declare var _et: number;
declare var _ft: number;
declare var _gt: number;
declare var _ht: (text: any) => void;
declare function debug(text: any): void;
declare function _pt(_qt: any, _rt: any, _st: any, _tt: any, _ut: any): void;
declare function __yy__processException(_vt: any): any;
declare function _73(text: any): void;
declare function _Sf(_Gt: any): void;
declare function _qa(_Gt: any, _Ht: any): any;
declare function _Jt(name: any, _Kt: any): () => any;
declare function _Lt(_Gt: any): void;
declare function _Mt(_Gt: any): void;
declare function _Nt(_Gt: any): void;
declare function _Ot(_Pt: any): string;
declare function _Tt(_Ut: any): void;
declare function _Vt(_Ut: any, _Wt: any): void;
declare function debug_event(_F1: any): void;
declare function dbg_view(): void;
declare function dbg_section(): void;
declare function dbg_view_delete(): void;
declare function dbg_section_delete(): void;
declare function dbg_slider(): void;
declare function dbg_drop_down(): void;
declare function dbg_watch(): void;
declare function dbg_same_line(): void;
declare function dbg_button(): void;
declare function dbg_text_input(): void;
declare function dbg_checkbox(): void;
declare function dbg_colour(): void;
declare function dbg_color(): void;
declare function dbg_text(): void;
declare function dbg_sprite(): void;
declare function dbg_slider_int(): void;
declare function dbg_add_font_glyphs(): void;
declare function ref_create(): number;
declare function is_debug_overlay_open(): boolean;
declare function is_mouse_over_debug_overlay(): boolean;
declare function is_keyboard_used_debug_overlay(): boolean;
declare function show_debug_log(): void;
declare function show_debug_message(_Pt: any): void;
declare function show_debug_message_ext(_Pt: any, _Yt: any): void;
declare function show_debug_overlay(__t: any): void;
declare function debug_get_callstack(_0u: any): any[];
declare function show_message_async(_Pt: any): number;
declare function show_message(_Pt: any): void;
declare function show_error(_5u: any, _6u: any): void;
declare function show_question_async(_5u: any): number;
declare function show_question(_5u: any): 0 | 1;
declare function get_integer_async(_5u: any, _7u: any): number;
declare function get_integer(_5u: any, _7u: any): number;
declare function _8u(_9u: any): void;
declare function _uu(_9u: any): void;
declare function _yu(_9u: any): void;
declare function _Au(_9u: any): void;
declare function _Bu(_fe: any, _db: any, _Cu: any): void;
declare function _Du(): void;
declare function _Fu(_Cu: any): void;
declare function _3u(_fe: any, _db: any, _Cu: any): void;
declare function _pu(_fe: any): void;
declare function get_login_async(_Iu: any, _Ju: any): number;
declare function get_string_async(_5u: any, _7u: any): number;
declare function get_string(_5u: any, _7u: any): string;
declare function _su(): void;
declare function _Ft(_Sh: any): any;
declare function _zt(_Lu: any): void;
declare function _Dt(_Lu: any): any[];
declare function _Mu(): void;
declare var _Uu: number;
declare var _Vu: number;
declare function _Wu(): void;
declare function UpdateDebugWindow(): void;
declare function _5v(): void;
declare function file_text_open_from_string(_ev: any): any;
declare function file_text_open_read(_gv: any): any;
declare function file_text_close(_iv: any): void;
declare function file_text_open_write(_gv: any): any;
declare function file_text_open_append(_gv: any): any;
declare function file_text_write_string(_iv: any, _5u: any): void;
declare function file_text_write_real(_iv: any, _R3: any): void;
declare function file_text_writeln(_iv: any): void;
declare function file_text_read_string(_iv: any): string;
declare function file_text_read_real(_iv: any): number;
declare function file_text_readln(_iv: any): string;
declare function file_text_eof(_iv: any): boolean;
declare function file_text_eoln(_iv: any): boolean;
declare function file_exists(_gv: any): boolean;
declare function file_delete(_gv: any): boolean;
declare function file_rename(_nv: any, _ov: any): void;
declare function file_copy(_gv: any, _ov: any): boolean;
declare function directory_exists(_rv: any): boolean;
declare function directory_create(_rv: any): boolean;
declare function directory_destroy(_rv: any): boolean;
declare function file_find_first(_sv: any, _tv: any): string;
declare function file_find_next(): string;
declare function file_find_close(): void;
declare function file_attributes(_gv: any, _tv: any): boolean;
declare function filename_name(_gv: any): any;
declare function filename_path(_gv: any): any;
declare function filename_dir(_gv: any): any;
declare function filename_drive(_gv: any): void;
declare function filename_change_ext(_gv: any, _uv: any): any;
declare function file_bin_open(_gv: any, _vv: any): void;
declare function file_bin_rewrite(_iv: any): void;
declare function file_bin_close(_iv: any): void;
declare function file_bin_size(_iv: any): void;
declare function file_bin_position(_iv: any): void;
declare function file_bin_seek(_iv: any, _ai: any): void;
declare function file_bin_write_byte(_iv: any, _wv: any): void;
declare function file_bin_read_byte(_iv: any): void;
declare function environment_get_variable(_d2: any): string;
declare function filename_ext(_Ji: any): any;
declare const _zv: RegExp;
declare function _Av(_Bv: any): any;
declare function _Iv(value: any): any;
declare function _Jv(_Uh: any): any;
declare function _Kv(_Uh: any): any;
declare function json_decode(_Lv: any): any;
declare var _Pv: any;
declare function _Qv(value: any): any;
declare function _Tv(_j6: any): any[];
declare function _Uv(_A5: any): {};
declare function _Sv(_Di: any): string;
declare function json_encode(_A5: any, _Vv: any): string;
declare var _Wv: any;
declare function _Xv(key: any, value: any): string | number | boolean | any[];
declare function json_stringify(_Qa: any, _Vv: any, filter: any): string;
declare var _3w: any;
declare var _4w: number;
declare function _5w(_6w: any, value: any): any;
declare function _7w(_Qa: any): any;
declare function json_parse(_Qa: any, _Sh: any): any;
declare function _aw(_bw: any): any[];
declare function load_csv(_gv: any): any;
declare function draw_set_halign(_iw: any): void;
declare function draw_get_halign(): any;
declare function draw_set_valign(_iw: any): void;
declare function draw_get_valign(): any;
declare function draw_set_font(_lw: any): void;
declare function draw_get_font(): any;
declare function draw_text(_R3: any, _S3: any, _Gt: any): void;
declare function draw_text_color(
	_R3: any,
	_S3: any,
	_Gt: any,
	_Fk: any,
	_Gk: any,
	_Hk: any,
	_Ik: any,
	_Y7: any,
): void;
declare var draw_text_colour: typeof draw_text_color;
declare function draw_text_ext_color(
	_R3: any,
	_S3: any,
	_Gt: any,
	_rw: any,
	_Eg: any,
	_Fk: any,
	_Gk: any,
	_Hk: any,
	_Ik: any,
	_Y7: any,
): void;
declare var draw_text_ext_colour: typeof draw_text_ext_color;
declare function draw_text_ext(
	_R3: any,
	_S3: any,
	_Gt: any,
	_rw: any,
	_Eg: any,
): void;
declare function draw_text_transformed(
	_R3: any,
	_S3: any,
	_Gt: any,
	_xk: any,
	_yk: any,
	_V3: any,
): void;
declare function draw_text_ext_transformed(
	_R3: any,
	_S3: any,
	_Gt: any,
	_rw: any,
	_Eg: any,
	_xk: any,
	_yk: any,
	_V3: any,
): void;
declare function draw_text_ext_transformed_color(
	_R3: any,
	_S3: any,
	_Gt: any,
	_rw: any,
	_Eg: any,
	_xk: any,
	_yk: any,
	_V3: any,
	_Fk: any,
	_Gk: any,
	_Hk: any,
	_Ik: any,
	_Y7: any,
): void;
declare var draw_text_ext_transformed_colour: typeof draw_text_ext_transformed_color;
declare function draw_text_transformed_color(
	_R3: any,
	_S3: any,
	_Gt: any,
	_xk: any,
	_yk: any,
	_V3: any,
	_Fk: any,
	_Gk: any,
	_Hk: any,
	_Ik: any,
	_Y7: any,
): void;
declare var draw_text_transformed_colour: typeof draw_text_transformed_color;
declare function string_height(_Gt: any): any;
declare function string_width(_Gt: any): any;
declare function string_width_ext(_Lv: any, _rw: any, _Eg: any): any;
declare function string_height_ext(_Lv: any, _rw: any, _Eg: any): any;
declare function font_exists(_fe: any): boolean;
declare function font_get_bold(_fe: any): any;
declare function font_get_fontname(_fe: any): any;
declare function font_get_name(_fe: any): any;
declare function font_get_italic(_fe: any): any;
declare function font_get_first(_fe: any): any;
declare function font_get_last(_fe: any): any;
declare function font_get_size(_fe: any): any;
declare function _Cw(
	_d2: any,
	__a: any,
	_Dw: any,
	_Ew: any,
	_Fw: any,
	_Gw: any,
	_Hw: any,
): any;
declare function font_delete(id: any): void;
declare function font_enable_sdf(id: any, enable: any): void;
declare function font_get_sdf_enabled(id: any): any;
declare function font_sdf_spread(id: any, enable: any): void;
declare function font_get_sdf_spread(id: any): any;
declare function font_enable_effects(id: any, enable: any, _zq: any): void;
declare function font_add(
	_d2: any,
	__a: any,
	_Dw: any,
	_Ew: any,
	_Fw: any,
	_Gw: any,
): any;
declare function font_add_sprite(_24: any, _Fw: any, _Sw: any, _rw: any): any;
declare function font_add_sprite_ext(
	_24: any,
	_Uw: any,
	_Sw: any,
	_rw: any,
): any;
declare function font_replace_sprite(
	_fe: any,
	_24: any,
	_Fw: any,
	_Sw: any,
	_rw: any,
): any;
declare function font_replace_sprite_ext(
	_fe: any,
	_24: any,
	_Uw: any,
	_Sw: any,
	_rw: any,
): any;
declare function font_set_cache_size(_U2: any, _Vw: any): boolean;
declare function font_get_texture(_U2: any):
	| false
	| {
			_Fa: any;
			_Ga: any;
			toString: () => string;
	  };
declare function font_get_uvs(_U2: any): any[];
declare function font_get_info(_U2: any): any;
declare function font_add_enable_aa(): void;
declare function font_add_get_enable_aa(): boolean;
declare var _4x: number;
declare function _5x(_A4: any): void;
declare function scheduler_resolution_set(_12: any): void;
declare function scheduler_resolution_get(): number;
declare function display_set_timing_method(_7x: any): void;
declare function display_get_timing_method(): number;
declare function _8x(_vj: any, _d2: any): void;
declare function _9x(): void;
declare function _fx(): void;
declare function draw_highscore(_m5: any, _n5: any, _P4: any, _Q4: any): void;
declare function highscore_clear(): void;
declare function highscore_add(_5u: any, _hx: any): void;
declare function highscore_value(_jx: any): any;
declare function highscore_name(_jx: any): any;
declare function _kx(_8k: any, _9k: any, _vj: any): number;
declare function _qx(_8k: any, _9k: any, _vj: any): number;
declare function _rx(_8k: any, _9k: any): number;
declare function event_perform(_wl: any, _sx: any, _F1: any, _tx: any): void;
declare function event_perform_async(
	_wl: any,
	_sx: any,
	_F1: any,
	_yx: any,
): void;
declare function _Bx(_wl: any, _Cx: any, _Dx: any, _Ex: any): void;
declare function event_perform_object(
	_wl: any,
	_sx: any,
	_Uh: any,
	_F1: any,
	_tx: any,
): void;
declare var _Px: boolean;
declare function event_user(_wl: any, _sx: any, _tx: any): void;
declare function event_inherited(_wl: any, _sx: any): void;
declare function parameter_count(): any;
declare function parameter_string(_92: any): any;
declare function _Yx(): string;
declare function os_get_language(): string;
declare function os_get_region(): string;
declare function os_check_permission(): void;
declare function os_request_permission(): void;
declare function device_mouse_dbclick_enable(_Xo: any): void;
declare function base64_encode(data: any): any;
declare function _1y(_Pt: any): string;
declare function base64_decode(data: any): any;
declare function _4y(data: any): any;
declare function md5_string_unicode(string: any): string;
declare function md5_string_utf8(string: any): string;
declare function md5_file(_7y: any): string;
declare function os_is_network_connected(): 0 | 1;
declare function os_powersave_enable(enable: any): void;
declare function os_lock_orientation(enable: any): void;
declare function analytics_event(_F1: any): void;
declare function analytics_event_ext(_F1: any): void;
declare function sha1_string_unicode(_Lv: any): string;
declare function sha1_string_utf8(_Lv: any): string;
declare function sha1_file(_gv: any): string;
declare var _ay: number;
declare var _by: string;
declare function _5y(_Hf: any): string;
declare function _fy(_Hf: any): string;
declare function _hy(_Hf: any, e: any): string;
declare function _jy(_Ii: any, _Em: any): string;
declare function _ly(_Ii: any, _Em: any): string;
declare function _my(_Ii: any, _Em: any, e: any): string;
declare function _ny(): boolean;
declare function _dy(_Hf: any): string;
declare function _ky(key: any, data: any): string;
declare function _cy(input: any): string;
declare function _gy(input: any): string;
declare function _iy(input: any, _xy: any): string;
declare function _ey(input: any): string;
declare function _6y(input: any): string;
declare function _Dy(input: any): string;
declare function _qy(input: any): any[];
declare function _oy(input: any): string;
declare function _py(x: any, _hg: any): number[];
declare function _Ny(
	q: any,
	_I2: any,
	_H2: any,
	x: any,
	_Hf: any,
	_95: any,
): number;
declare function _Iy(
	_I2: any,
	_H2: any,
	c: any,
	_Em: any,
	x: any,
	_Hf: any,
	_95: any,
): number;
declare function _Jy(
	_I2: any,
	_H2: any,
	c: any,
	_Em: any,
	x: any,
	_Hf: any,
	_95: any,
): number;
declare function _Ky(
	_I2: any,
	_H2: any,
	c: any,
	_Em: any,
	x: any,
	_Hf: any,
	_95: any,
): number;
declare function _Ly(
	_I2: any,
	_H2: any,
	c: any,
	_Em: any,
	x: any,
	_Hf: any,
	_95: any,
): number;
declare function _My(x: any, y: any): number;
declare function _Oy(_Vm: any, _Ry: any): number;
declare function _9y(_Hf: any): string;
declare function _Ty(_Hf: any): string;
declare function _Uy(_Hf: any, e: any): string;
declare function _Vy(_Ii: any, _Em: any): string;
declare function _Xy(_Ii: any, _Em: any): string;
declare function _Yy(_Ii: any, _Em: any, e: any): string;
declare function _Zy(): boolean;
declare function _Sy(_Hf: any): string;
declare function _Wy(key: any, data: any): string;
declare function _1z(input: any): any[];
declare function __y(input: any): string;
declare function _0z(x: any, _hg: any): number[];
declare function _3z(_95: any, _H2: any, c: any, _Em: any): number;
declare function _4z(
	_95: any,
): 1518500249 | 1859775393 | -1894007588 | -899497514;
declare function _5z(_d2: any, _Di: any): number;
declare function _7z(_d2: any, _Di: any): number;
declare function _8z(_d2: any, _Di: any): number;
declare function _dz(_d2: any): {
	type: number;
	id: number;
};
declare function _uz(_92: any, _vz: any): any;
declare function asset_get_index(_d2: any): number;
declare function asset_get_type(_d2: any): number;
declare function asset_get_ids(_vz: any): any;
declare function alarm_get(_Tu: any, index: any): any;
declare function alarm_set(_Tu: any, index: any, _U6: any): void;
declare function game_set_speed(_Nz: any, _Ie: any): void;
declare function game_get_speed(_Nz: any): any;
declare function _Qz(): void;
declare var _Y1: any;
declare function gamepad_is_supported(): any;
declare function gamepad_get_device_count(): any;
declare function gamepad_is_connected(_Ld: any): any;
declare function gamepad_get_button_threshold(_Ld: any): any;
declare function gamepad_set_button_threshold(_Ld: any, _Pd: any): void;
declare function gamepad_get_axis_deadzone(_Ld: any): any;
declare function gamepad_set_axis_deadzone(_Ld: any, _Rd: any): void;
declare function gamepad_get_description(_Ld: any): any;
declare function gamepad_button_count(_Ld: any): any;
declare function gamepad_button_check(_Ld: any, _yc: any): any;
declare function gamepad_button_check_pressed(_Ld: any, _yc: any): any;
declare function gamepad_button_check_released(_Ld: any, _yc: any): any;
declare function gamepad_button_value(_Ld: any, _yc: any): any;
declare function gamepad_axis_count(_Ld: any): any;
declare function gamepad_axis_value(_Ld: any, _Gc: any): any;
declare function gamepad_set_vibration(_Ld: any, _0A: any, _1A: any): void;
declare function gamepad_set_color(_Ld: any, _zk: any): void;
declare function gamepad_set_colour(_Ld: any, _Na: any): void;
declare function gamepad_hat_count(_Ld: any): number;
declare function gamepad_hat_value(_Ld: any, _92: any): number;
declare function gamepad_remove_mapping(_Ld: any): void;
declare function gamepad_test_mapping(_Ld: any, _2A: any): void;
declare function gamepad_get_mapping(
	_Ld: any,
): "device index out of range" | "no mapping";
declare function gamepad_get_guid(
	_Ld: any,
): "none" | "device index out of range";
declare function gamepad_set_option(): void;
declare function gamepad_get_option(): number;
declare var _Lr: number,
	_Jr: number,
	_3A: number,
	_Kr: number,
	_Hr: number,
	_Ir: number,
	_4A: number,
	_5A: number,
	_6A: number,
	_7A: number,
	_8A: number;
declare var _9A: number;
declare function display_get_gui_height(): number;
declare function display_get_gui_width(): number;
declare function display_set_gui_size(_Q6: any, _R6: any): void;
declare function display_set_gui_maximise(
	_xk: any,
	_yk: any,
	_lA: any,
	_mA: any,
): void;
declare var display_set_gui_maximize: typeof display_set_gui_maximise;
declare var _nA: number;
declare function display_get_dpi_x(): number;
declare var _oA: number;
declare function display_get_dpi_y(): number;
declare function display_get_width(): number;
declare function display_get_height(): number;
declare function display_get_orientation(): number;
declare function draw_clear(_Eb: any): void;
declare function draw_clear_alpha(): void;
declare function make_color_rgb(_Yq: any, _Zq: any, __q: any): number;
declare var make_colour_rgb: typeof make_color_rgb;
declare function color_get_blue(_Eb: any): number;
declare var colour_get_blue: typeof color_get_blue;
declare function color_get_green(_Eb: any): number;
declare var colour_get_green: typeof color_get_green;
declare function color_get_red(_Eb: any): number;
declare var colour_get_red: typeof color_get_red;
declare function _AA(_Eb: any): {
	h: number;
	_Hf: number;
	_o3: number;
};
declare function color_get_hue(_Eb: any): number;
declare var colour_get_hue: typeof color_get_hue;
declare function color_get_saturation(_Eb: any): number;
declare var colour_get_saturation: typeof color_get_saturation;
declare function color_get_value(_Eb: any): number;
declare var colour_get_value: typeof color_get_value;
declare function merge_color(_8k: any, _9k: any, _Ks: any): number;
declare function merge_colour(): void;
declare function make_color_hsv(_HA: any, _IA: any, _vj: any): any;
declare function make_colour_hsv(): void;
declare function draw_set_alpha(_Y7: any): void;
declare function draw_get_alpha(): any;
declare function draw_get_color(): any;
declare function draw_get_colour(): void;
declare function draw_set_color(_Na: any): void;
declare var draw_set_colour: typeof draw_set_color;
declare function draw_set_lighting(_Xo: any): void;
declare function draw_light_enable(_O7: any, _Xo: any): void;
declare function draw_light_define_direction(
	_O7: any,
	_H9: any,
	_I9: any,
	_ap: any,
	_N2: any,
): void;
declare function draw_light_define_ambient(colour: any): void;
declare function draw_light_define_point(
	_O7: any,
	x: any,
	y: any,
	z: any,
	_F2: any,
	_N2: any,
): void;
declare function draw_light_get_ambient(): void;
declare function draw_light_get(_O7: any): void;
declare function draw_get_lighting(): void;
declare function draw_roundrect(
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_MA: any,
): void;
declare function draw_roundrect_ext(
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_NA: any,
	_OA: any,
	_MA: any,
): void;
declare function draw_roundrect_color(
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_8k: any,
	_9k: any,
	_MA: any,
): void;
declare var draw_roundrect_colour: typeof draw_roundrect_color;
declare function draw_roundrect_color_ext(): void;
declare function draw_roundrect_colour_ext(): void;
declare function _PA(
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_NA: any,
	_OA: any,
	_8k: any,
	_9k: any,
	_MA: any,
): void;
declare function draw_rectangle(): void;
declare function _TA(_m5: any, _n5: any, _P4: any, _Q4: any, _MA: any): void;
declare function draw_rectangle_color(): void;
declare function draw_rectangle_colour(): void;
declare function _WA(
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_8k: any,
	_9k: any,
	_XA: any,
	_YA: any,
	_MA: any,
): void;
declare function draw_point(): void;
declare function draw_line_width(): void;
declare function draw_line(_m5: any, _n5: any, _P4: any, _Q4: any): void;
declare function draw_getpixel(): void;
declare function draw_getpixel_ext(): void;
declare function _3B(_R3: any, _S3: any): number;
declare function draw_triangle(): void;
declare function _9B(
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_ym: any,
	_zm: any,
	_MA: any,
): void;
declare function draw_triangle_color(): void;
declare function draw_triangle_colour(): void;
declare function _bB(
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_ym: any,
	_zm: any,
	_8k: any,
	_9k: any,
	_XA: any,
	_MA: any,
): void;
declare function _dB(
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_Ks: any,
	_eB: any,
	_fB: any,
	_gB: any,
	_hB: any,
	_iB: any,
	_jB: any,
	_kB: any,
): void;
declare function draw_healthbar(
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_Ks: any,
	_eB: any,
	_fB: any,
	_hB: any,
	_iB: any,
	_jB: any,
	_kB: any,
): void;
declare function draw_set_circle_precision(_rB: any): void;
declare function _tB(): number;
declare function draw_arrow(
	_X4: any,
	_Y4: any,
	_Z4: any,
	__4: any,
	size: any,
): void;
declare function draw_ellipse(
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_MA: any,
): void;
declare function draw_ellipse_color(): void;
declare function draw_ellipse_colour(): void;
declare function _wB(
	x: any,
	y: any,
	_X4: any,
	_Y4: any,
	_8k: any,
	_9k: any,
	_xB: any,
): void;
declare function draw_circle_color(): void;
declare function draw_circle_colour(): void;
declare function _HB(
	_R3: any,
	_S3: any,
	_2h: any,
	_8k: any,
	_9k: any,
	_MA: any,
): void;
declare function draw_circle(_R3: any, _S3: any, _2h: any, _MA: any): void;
declare function draw_point_color(): void;
declare function draw_point_colour(): void;
declare function _JB(_R3: any, _S3: any, _Eb: any): void;
declare function draw_line_width_color(): void;
declare function draw_line_width_colour(): void;
declare function _KB(
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_Eg: any,
	_8k: any,
	_9k: any,
): void;
declare function draw_line_color(
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_8k: any,
	_9k: any,
): void;
declare var draw_line_colour: typeof draw_line_color;
declare function draw_button(
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_LB: any,
): void;
declare function _MB(_NB: any): void;
declare function _OB(src: any, _F8: any): void;
declare function draw_texture_flush(): void;
declare function draw_enable_drawevent(_QB: any): void;
declare function skeleton_animation_set(
	_G5: any,
	_d2: any,
	_e2?: boolean,
): void;
declare function skeleton_animation_mix(
	_G5: any,
	_UB: any,
	_VB: any,
	_s2: any,
): void;
declare function skeleton_animation_set_ext(
	_G5: any,
	_76: any,
	_S1: any,
	_e2?: boolean,
): void;
declare function skeleton_animation_get_ext(_G5: any, _S1: any): any;
declare function skeleton_attachment_set(_G5: any, _WB: any, _XB: any): void;
declare function skeleton_attachment_get(_G5: any, _WB: any): any;
declare function skeleton_attachment_create(
	_G5: any,
	_d2: any,
	_R1: any,
	_U2: any,
	_V2: any,
	_W2: any,
	_X2: any,
	_Y2: any,
	_Z2: any,
): 1 | -1;
declare function skeleton_attachment_create_colour(
	_G5: any,
	_d2: any,
	_R1: any,
	_U2: any,
	_V2: any,
	_W2: any,
	_X2: any,
	_Y2: any,
	_Z2: any,
	_Eb: any,
	_Y7: any,
): 1 | -1;
declare function skeleton_attachment_create_color(
	_G5: any,
	_d2: any,
	_R1: any,
	_U2: any,
	_V2: any,
	_W2: any,
	_X2: any,
	_Y2: any,
	_Z2: any,
	_Eb: any,
	_Y7: any,
): void;
declare function skeleton_attachment_replace(
	_G5: any,
	_d2: any,
	_R1: any,
	_U2: any,
	_V2: any,
	_W2: any,
	_X2: any,
	_Y2: any,
	_Z2: any,
): 1 | -1;
declare function skeleton_attachment_replace_colour(
	_G5: any,
	_d2: any,
	_R1: any,
	_U2: any,
	_V2: any,
	_W2: any,
	_X2: any,
	_Y2: any,
	_Z2: any,
	_Eb: any,
	_Y7: any,
): 1 | -1;
declare function skeleton_attachment_destroy(_G5: any, _d2: any): void;
declare function skeleton_attachment_exists(_G5: any, _d2: any): boolean;
declare function skeleton_attachment_replace_color(
	_G5: any,
	_d2: any,
	_R1: any,
	_U2: any,
	_V2: any,
	_W2: any,
	_X2: any,
	_Y2: any,
	_Z2: any,
	_Eb: any,
	_Y7: any,
): void;
declare function skeleton_slot_colour_set(
	_G5: any,
	_WB: any,
	_Eb: any,
	_Y7: any,
): void;
declare function skeleton_slot_color_set(
	_G5: any,
	_WB: any,
	_Eb: any,
	_Y7: any,
): void;
declare function skeleton_slot_colour_get(_G5: any, _WB: any): any;
declare function skeleton_slot_color_get(_G5: any, _WB: any): any;
declare function skeleton_slot_alpha_get(_G5: any, _WB: any): any;
declare function skeleton_skin_set(_G5: any, _d2: any): void;
declare function skeleton_skin_get(_G5: any): any;
declare function skeleton_skin_create(_G5: any, _d2: any, _0C: any): any;
declare function skeleton_animation_get(_G5: any): any;
declare function skeleton_animation_get_duration(_G5: any, _p7: any): any;
declare function skeleton_animation_get_frames(_G5: any, _p7: any): any;
declare function skeleton_animation_get_frame(_G5: any, _S1: any): any;
declare function skeleton_animation_set_frame(
	_G5: any,
	_S1: any,
	_92: any,
): void;
declare function skeleton_animation_get_position(_G5: any, _S1: any): number;
declare function skeleton_animation_set_position(
	_G5: any,
	_S1: any,
	_5C: any,
): void;
declare function skeleton_animation_get_event_frames(
	_G5: any,
	_76: any,
	_F1: any,
): any[];
declare function skeleton_animation_clear(
	_G5: any,
	_S1: any,
	_26: any,
	_36: any,
): void;
declare function skeleton_animation_is_looping(_G5: any, _S1: any): any;
declare function skeleton_animation_is_finished(_G5: any, _S1: any): any;
declare function skeleton_collision_draw_set(_G5: any, _12: any): void;
declare function skeleton_bone_data_get(_G5: any, _z5: any, _A5: any): void;
declare function skeleton_bone_data_set(_G5: any, _z5: any, _A5: any): void;
declare function skeleton_bone_state_get(_G5: any, _z5: any, _A5: any): void;
declare function skeleton_bone_state_set(_G5: any, _z5: any, _A5: any): void;
declare function draw_skeleton(
	_R1: any,
	_8C: any,
	_9C: any,
	_aC: any,
	_R3: any,
	_S3: any,
	_xk: any,
	_yk: any,
	_Z2: any,
	_Na: any,
	_Y7: any,
): void;
declare function draw_skeleton_time(
	_R1: any,
	_8C: any,
	_9C: any,
	_A4: any,
	_R3: any,
	_S3: any,
	_xk: any,
	_yk: any,
	_Z2: any,
	_Na: any,
	_Y7: any,
): void;
declare function draw_skeleton_instance(
	_z6: any,
	_8C: any,
	_9C: any,
	_aC: any,
	_R3: any,
	_S3: any,
	_xk: any,
	_yk: any,
	_Z2: any,
	_Na: any,
	_Y7: any,
): void;
declare function draw_skeleton_collision(
	_R1: any,
	_8C: any,
	_aC: any,
	_R3: any,
	_S3: any,
	_xk: any,
	_yk: any,
	_Z2: any,
	_Na: any,
): void;
declare function draw_enable_skeleton_blendmodes(_Xo: any): void;
declare function draw_get_enable_skeleton_blendmodes(): boolean;
declare function skeleton_animation_list(_R1: any, _j6: any): void;
declare function skeleton_skin_list(_R1: any, _j6: any): void;
declare function skeleton_bone_list(_R1: any, _j6: any): void;
declare function skeleton_slot_list(_R1: any, _j6: any): void;
declare function skeleton_slot_data(_R1: any, _j6: any): 1 | -1;
declare function skeleton_slot_data_instance(_G5: any, _j6: any): 1 | -1;
declare function _bC(_G5: any, _S1: any): any;
declare function skeleton_get_minmax(_G5: any): any[];
declare function skeleton_get_num_bounds(_G5: any): any;
declare function skeleton_get_bounds(_G5: any, _92: any): any;
declare function skeleton_find_slot(
	_G5: any,
	_R3: any,
	_S3: any,
	_j6: any,
): void;
declare function draw_enable_swf_aa(_dC: any): void;
declare function draw_set_swf_aa_level(_fC: any): void;
declare function draw_get_swf_aa_level(): number;
declare function _hC(
	xview: any,
	yview: any,
	wview: any,
	hview: any,
	angle: any,
): void;
declare function _Hp(_kC: any, _lC: any, _mC: any, _nC: any): void;
declare function _IC(): any;
declare function _NC(): void;
declare function _PC(): void;
declare function view_get_camera(_2p: any): any;
declare function view_get_visible(_2p: any): any;
declare function view_get_xport(_2p: any): any;
declare function view_get_yport(_2p: any): any;
declare function view_get_wport(_2p: any): any;
declare function view_get_hport(_2p: any): any;
declare function view_get_surface_id(_2p: any): any;
declare function view_set_camera(_2p: any, _VC: any): void;
declare function view_set_visible(_2p: any, visible: any): void;
declare function view_set_xport(_2p: any, xport: any): void;
declare function view_set_yport(_2p: any, yport: any): void;
declare function view_set_wport(_2p: any, wport: any): void;
declare function view_set_hport(_2p: any, hport: any): void;
declare function view_set_surface_id(_2p: any, _WC: any): void;
declare function _XC(): number;
declare function _YC(): number;
declare function _ZC(): void;
declare function display_set_windows_alternate_sync(): void;
declare function display_set_ui_visibility(): void;
declare function display_set_sleep_margin(): void;
declare function display_get_sleep_margin(): number;
declare function __C(_0D: any, _1D: any): void;
declare function _5D(_0D: any, _6D: any): void;
declare function _bD(_cD: any): number;
declare function _gD(
	_db: any,
	_cD: any,
	_hD: any,
	_el: any,
	_6D: any,
	_iD: any,
): number;
declare function _kD(
	_cD: any,
	_hD: any,
): {
	_lD: any;
	_oD: boolean;
	_mD: boolean;
};
declare function _pD(
	_db: any,
	_cD: any,
	_hD: any,
	_el: any,
	_0D: any,
	_6D: any,
): void;
declare function _nD(
	_db: any,
	_cD: any,
	_hD: any,
	_el: any,
	_0D: any,
	_xD: any,
	_6D: any,
): void;
declare function _zD(_F1: any, _0D: any, _BD: any): void;
declare function _yD(_F1: any, _0D: any): void;
declare function http_get(_cD: any): number;
declare function http_get_file(_cD: any, _CD: any): number;
declare function http_post_string(_cD: any, _Lv: any): number;
declare function http_request(_cD: any, _7x: any, _FD: any, _GD: any): number;
declare function _ID(_cD: any, _7x: any, _hD: any, _GD: any): number;
declare function http_set_request_crossorigin(_QD: any): void;
declare function http_get_request_crossorigin(): string;
declare var _RD: any;
declare function ini_open_from_string(_SD: any): void;
declare function ini_open(_UD: any): void;
declare function ini_close(): any;
declare function ini_read_string(_ZD: any, _Ai: any, __D: any): any;
declare function ini_read_real(_ZD: any, _Ai: any, __D: any): any;
declare function ini_write_string(_ZD: any, _Ai: any, _vj: any): boolean;
declare function ini_write_real(_ZD: any, _Ai: any, _vj: any): boolean;
declare function ini_key_exists(_ZD: any, _Ai: any): boolean;
declare function ini_section_exists(_ZD: any): boolean;
declare function ini_key_delete(_ZD: any, _Ai: any): any;
declare function ini_section_delete(_ZD: any): any;
declare function instance_find(_Uh: any, _9E: any): any;
declare function instance_id_get(_G5: any, _92: any): any;
declare function instance_exists(_Uh: any): boolean;
declare function instance_number(_Uh: any): number;
declare function instance_position(_R3: any, _S3: any, _Uh: any): any;
declare function instance_position_list(
	_R3: any,
	_S3: any,
	_Uh: any,
	_j6: any,
	__l: any,
): number;
declare function instance_nearest(
	_G5: any,
	_R3: any,
	_S3: any,
	_Uh: any,
): number;
declare function instance_furthest(
	_G5: any,
	_R3: any,
	_S3: any,
	_Uh: any,
): number;
declare function _fE(
	_gE: any,
	_hE: any,
	_iE: any,
	tilewidth: any,
	tileheight: any,
	_jE: any,
): void;
declare function _4m(
	_R3: any,
	_S3: any,
	_P4: any,
	_Q4: any,
	_sE: any,
	_tE: any,
	_uE: any,
): boolean;
declare function _im(
	_R3: any,
	_S3: any,
	_P4: any,
	_Q4: any,
	_sE: any,
	_tE: any,
	_uE: any,
): boolean;
declare function _em(
	_R3: any,
	_S3: any,
	_P4: any,
	_Q4: any,
	_sE: any,
	_tE: any,
	_uE: any,
): boolean;
declare function _Jl(_R3: any, _S3: any, _sE: any, _tE: any, _uE: any): boolean;
declare function _fF(
	_gF: any,
	_2h: any,
	_hF: any,
	_iF: any,
	_jF: any,
	_kF: any,
	_lF: any,
	_mF: any,
): boolean;
declare function _nF(
	_Tu: any,
	_R3: any,
	_S3: any,
	_sE: any,
	_tE: any,
	_uE: any,
): boolean;
declare function _xF(_A7: any, _R3: any, _S3: any, _Uh: any): any;
declare function instance_place(_wl: any, _R3: any, _S3: any, _Uh: any): any;
declare function instance_place_list(
	_wl: any,
	_R3: any,
	_S3: any,
	_Uh: any,
	_j6: any,
	__l: any,
): number;
declare function _zF(_wl: any, _AF: any): void;
declare function instance_destroy(_wl: any, _fe: any, _AF: any): void;
declare function position_destroy(_G5: any, _R3: any, _S3: any): void;
declare function position_change(
	_G5: any,
	_R3: any,
	_S3: any,
	_DF: any,
	_EF: any,
): void;
declare function motion_set(_G5: any, _HF: any, _IF: any): void;
declare function motion_add(_G5: any, _HF: any, _IF: any): void;
declare function instance_copy(_G5: any, _KF: any): any;
declare function _UF(_G5: any, _DF: any, _EF: any): void;
declare function __F(_G5: any, _DF: any, _EF: any): void;
declare var instance_change: typeof __F;
declare function instance_deactivate_all(_G5: any, _xl: any): void;
declare function instance_activate_all(_G5: any): void;
declare function _5G(_Uh: any, _6G: any): boolean;
declare function instance_activate_object(_G5: any, _DF: any): void;
declare function instance_deactivate_object(_G5: any, _DF: any): void;
declare function instance_deactivate_region(
	_G5: any,
	_sk: any,
	_tk: any,
	_Q6: any,
	_R6: any,
	_bG: any,
	_xl: any,
): void;
declare function _dG(
	_G5: any,
	_R3: any,
	_S3: any,
	_Q6: any,
	_R6: any,
	_xl: any,
	_eG: any,
	_fG: any,
): void;
declare function instance_deactivate_layer(_G5: any, _Ie: any): number;
declare function instance_activate_layer(_Tu: any, _Ie: any): number;
declare function instance_activate_region(
	_G5: any,
	_sk: any,
	_tk: any,
	_Q6: any,
	_R6: any,
	_bG: any,
): void;
declare function keyboard_key_press(_Ai: any): void;
declare function keyboard_key_release(_Ai: any): void;
declare function _pG(_qG: any): 0 | 1;
declare function mouse_check_button(_qG: any): 0 | 1;
declare function mouse_check_button_pressed(_qG: any): 0 | 1;
declare function mouse_check_button_released(_qG: any): 0 | 1;
declare function mouse_wheel_up(): number;
declare function mouse_wheel_down(): number;
declare function mouse_clear(_tl: any): void;
declare function io_clear(): void;
declare function keyboard_check(_Ai: any): any;
declare function keyboard_check_pressed(_Ai: any): any;
declare function keyboard_clear(_Ai: any): void;
declare function keyboard_check_released(_Ai: any): any;
declare function keyboard_check_direct(_Ai: any): any;
declare function display_mouse_get_x(): number;
declare function display_mouse_get_y(): number;
declare function keyboard_set_map(_q2: any, _r2: any): number;
declare function keyboard_get_map(_Ai: any): any;
declare function keyboard_unset_map(): void;
declare function keyboard_virtual_show(): void;
declare function keyboard_virtual_hide(): void;
declare function keyboard_virtual_status(): void;
declare function keyboard_virtual_height(): void;
declare function gesture_drag_time(_12: any): void;
declare function gesture_drag_distance(_12: any): void;
declare function gesture_flick_speed(_12: any): void;
declare function gesture_double_tap_time(_12: any): void;
declare function gesture_double_tap_distance(_12: any): void;
declare function gesture_pinch_distance(_12: any): void;
declare function gesture_pinch_angle_towards(_12: any): void;
declare function gesture_pinch_angle_away(_12: any): void;
declare function gesture_rotate_time(_12: any): void;
declare function gesture_rotate_angle(_12: any): void;
declare function gesture_tap_count(_12: any): void;
declare function gesture_get_drag_time(): void;
declare function gesture_get_drag_distance(): void;
declare function gesture_get_flick_speed(): void;
declare function gesture_get_double_tap_time(): void;
declare function gesture_get_double_tap_distance(): void;
declare function gesture_get_pinch_distance(): void;
declare function gesture_get_pinch_angle_towards(): void;
declare function gesture_get_pinch_angle_away(): void;
declare function gesture_get_rotate_time(): void;
declare function gesture_get_rotate_angle(): void;
declare function gesture_get_tap_count(): void;
declare var _BG: number,
	_CG: number,
	_DG: number,
	_EG: number,
	_FG: number,
	_GG: number,
	_HG: number;
declare var _IG: number,
	_JG: number,
	_jG: number,
	_KG: number,
	_LG: number,
	_zE: number,
	_MG: number,
	_NG: number,
	_OG: number,
	_PG: number;
declare var _QG: number;
declare var _RG: number;
declare var _SG: number;
declare var _pE: number;
declare var _TG: number;
declare var _nE: number;
declare var _lE: number;
declare var _UG: number;
declare var _VG: number;
declare var _kE: number;
declare var _WG: number;
declare var _WE: number;
declare var _XG: number;
declare var _XE: number;
declare function _YG(): void;
declare function _2H(): void;
declare function _nH(): void;
declare function _oH(): void;
declare function _pH(): void;
declare function _sH(): void;
declare function _uH(): void;
declare function _vH(): void;
declare function _yH(): void;
declare function _KH(): void;
declare function _SH(): void;
declare function _VH(): void;
declare function __H(): void;
declare function _1I(): void;
declare var _4I: number;
declare var _5I: number;
declare var _6I: number;
declare var _7I: number;
declare var _8I: number;
declare function _9I(): void;
declare function _MK(_7L: any): {};
declare function _dL(room: any, _eL: any): any;
declare function _fL(_gL: any): any;
declare function layer_get_id(_d2: any): any;
declare function layer_get_id_at_depth(_Wi: any): any[];
declare function layer_get_depth(_fe: any): any;
declare function layer_create(_Wi: any, _d2: any): any;
declare function layer_destroy(_Ie: any): number;
declare function layer_destroy_instances(_Ie: any): number;
declare function layer_add_instance(_Ie: any, _hL: any): number;
declare function _mL(_Ie: any, _hL: any): void;
declare function layer_has_instance(_Ie: any, _hL: any): boolean;
declare function layer_instance_get_instance(_fe: any): any;
declare function layer_set_visible(_Ie: any, _hL: any): void;
declare function layer_get_visible(_Ie: any): any;
declare function layer_exists(_Ie: any): boolean;
declare function layer_script_begin(_Ie: any, _hL: any): void;
declare function layer_script_end(_Ie: any, _hL: any): void;
declare function layer_shader(_Ie: any, _hL: any): void;
declare function _oL(_st: any): any;
declare function layer_get_script_begin(_Ie: any): any;
declare function layer_get_script_end(_Ie: any): any;
declare function layer_get_shader(_Ie: any): any;
declare function layer_set_target_room(_Ie: any): void;
declare function layer_get_target_room(): any;
declare function layer_reset_target_room(): void;
declare function _qL(_rL: any): any;
declare function layer_background_get_id(_Ie: any): any;
declare function layer_background_exists(_Ie: any, _hL: any): boolean;
declare function layer_background_create(_Ie: any, _hL: any): any;
declare function layer_background_destroy(_Ie: any): void;
declare function layer_background_visible(_Ie: any, _hL: any): void;
declare function layer_background_change(_Ie: any, _hL: any): void;
declare function layer_background_htiled(_Ie: any, _hL: any): void;
declare function layer_background_vtiled(_Ie: any, _hL: any): void;
declare function layer_background_xscale(_Ie: any, _hL: any): void;
declare function layer_background_yscale(_Ie: any, _hL: any): void;
declare function layer_background_stretch(_Ie: any, _hL: any): void;
declare function layer_background_blend(_Ie: any, _hL: any): void;
declare function layer_background_alpha(_Ie: any, _hL: any): void;
declare function layer_background_index(_Ie: any, _hL: any): void;
declare function layer_background_sprite(_Ie: any, _hL: any): void;
declare function layer_background_speed(_Ie: any, _hL: any): void;
declare function layer_background_get_visible(_Ie: any): any;
declare function layer_background_get_sprite(_Ie: any): any;
declare function layer_background_get_htiled(_Ie: any): any;
declare function layer_background_get_vtiled(_Ie: any): any;
declare function layer_background_get_stretch(_Ie: any): any;
declare function layer_background_get_xscale(_Ie: any): any;
declare function layer_background_get_yscale(_Ie: any): any;
declare function layer_background_get_blend(_Ie: any): number;
declare function layer_background_get_alpha(_Ie: any): any;
declare function layer_background_get_index(_Ie: any): any;
declare function layer_background_get_speed(_Ie: any): any;
declare function _tL(_uL: any): any;
declare function layer_sprite_get_id(_vL: any, _wL: any): any;
declare function layer_sprite_exists(_Ie: any, _hL: any): boolean;
declare function layer_sprite_create(
	_Ie: any,
	_hL: any,
	_xL: any,
	_yL: any,
): any;
declare function layer_sprite_destroy(_Ie: any): void;
declare function layer_sprite_change(_Ie: any, _hL: any): void;
declare function layer_sprite_index(_Ie: any, _hL: any): void;
declare function layer_sprite_speed(_Ie: any, _hL: any): void;
declare function layer_sprite_xscale(_Ie: any, _hL: any): void;
declare function layer_sprite_yscale(_Ie: any, _hL: any): void;
declare function layer_sprite_angle(_Ie: any, _hL: any): void;
declare function layer_sprite_blend(_Ie: any, _hL: any): void;
declare function layer_sprite_alpha(_Ie: any, _hL: any): void;
declare function layer_sprite_x(_Ie: any, _hL: any): void;
declare function layer_sprite_y(_Ie: any, _hL: any): void;
declare function layer_sprite_get_sprite(_Ie: any): any;
declare function layer_sprite_get_index(_Ie: any): any;
declare function layer_sprite_get_speed(_Ie: any): any;
declare function layer_sprite_get_xscale(_Ie: any): any;
declare function layer_sprite_get_yscale(_Ie: any): any;
declare function layer_sprite_get_angle(_Ie: any): any;
declare function layer_sprite_get_blend(_Ie: any): number;
declare function layer_sprite_get_alpha(_Ie: any): any;
declare function layer_sprite_get_x(_Ie: any): any;
declare function layer_sprite_get_y(_Ie: any): any;
declare function _IL(_JL: any): any;
declare function layer_tilemap_get_id(_Ie: any): any;
declare function layer_tilemap_exists(_Ie: any, _hL: any): boolean;
declare function layer_tilemap_create(
	_Ie: any,
	_hL: any,
	_xL: any,
	_yL: any,
	_KL: any,
	_LL: any,
): any;
declare function layer_tilemap_destroy(_Ie: any): void;
declare function layer_x(_Ie: any, _hL: any): void;
declare function layer_y(_Ie: any, _hL: any): void;
declare function layer_get_x(_Ie: any): any;
declare function layer_get_y(_Ie: any): any;
declare function layer_hspeed(_ML: any, speed: any): number;
declare function layer_vspeed(_ML: any, speed: any): number;
declare function layer_get_hspeed(_ML: any): any;
declare function layer_get_vspeed(_ML: any): any;
declare function tilemap_tileset(_Ie: any, _hL: any): void;
declare function tilemap_x(_Ie: any, _hL: any): void;
declare function tilemap_y(_Ie: any, _hL: any): void;
declare function tilemap_set(_Ie: any, _hL: any, _xL: any, _yL: any): void;
declare function _6K(): void;
declare function tilemap_set_at_pixel(
	_Ie: any,
	_hL: any,
	_xL: any,
	_yL: any,
): number;
declare function tileset_get_texture(_U2: any): {
	_Fa: any;
	_Ga: any;
};
declare function tileset_get_name(_U2: any): any;
declare function tileset_get_uvs(_U2: any): any[];
declare function tileset_get_info(_U2: any): any;
declare function tilemap_get_tileset(_Ie: any): any;
declare function tilemap_get_tile_width(_Ie: any): any;
declare function tilemap_get_tile_height(_Ie: any): any;
declare function tilemap_get_width(_Ie: any): any;
declare function tilemap_get_height(_Ie: any): any;
declare function _ZL(__L: any, _0M: any, _1M: any): void;
declare function tilemap_set_width(__L: any, _0M: any): void;
declare function tilemap_set_height(__L: any, _1M: any): void;
declare function tilemap_get_x(_Ie: any): any;
declare function tilemap_get_y(_Ie: any): any;
declare function tilemap_get(_Ie: any, _hL: any, _xL: any): any;
declare function tilemap_get_at_pixel(_Ie: any, _hL: any, _xL: any): any;
declare function tilemap_get_cell_x_at_pixel(
	_Ie: any,
	_hL: any,
	_xL: any,
): number;
declare function tilemap_get_cell_y_at_pixel(
	_Ie: any,
	_hL: any,
	_xL: any,
): number;
declare function tilemap_clear(_Ie: any, _hL: any): void;
declare function tilemap_set_global_mask(_Ie: any): void;
declare function tilemap_get_global_mask(): any;
declare function tilemap_get_mask(_Ie: any): any;
declare function tilemap_get_frame(_Ie: any): any;
declare function tilemap_set_mask(_Ie: any, _hL: any): void;
declare function draw_tilemap(_Tu: any, _Ie: any, _hL: any, _xL: any): void;
declare function tile_set_empty(_Ie: any): any;
declare function tile_set_index(_Ie: any, _hL: any): any;
declare function tile_set_flip(_Ie: any, _hL: any): any;
declare function tile_set_mirror(_Ie: any, _hL: any): any;
declare function tile_set_rotate(_Ie: any, _hL: any): any;
declare function tile_get_empty(_Ie: any): 0 | 1;
declare function tile_get_index(_Ie: any): number;
declare function tile_get_flip(_Ie: any): boolean;
declare function tile_get_mirror(_Ie: any): boolean;
declare function tile_get_rotate(_Ie: any): boolean;
declare function _5M(_Jh: any, _Cx: any): void;
declare function instance_create_depth(
	_R3: any,
	_S3: any,
	_Wi: any,
	_8M: any,
	_9M: any,
): any;
declare function instance_create_layer(
	_R3: any,
	_S3: any,
	_vL: any,
	_Uh: any,
	_9M: any,
): any;
declare function layer_get_all(): any[];
declare function layer_get_all_elements(_vL: any): any[];
declare function layer_get_name(_vL: any): any;
declare function layer_depth(_vL: any, _Wi: any): void;
declare function layer_get_element_layer(_NI: any): any;
declare function layer_get_element_type(_NI: any): any;
declare function layer_element_move(_NI: any, _dM: any): number;
declare function layer_force_draw_depth(_nI: any, _Wi: any): void;
declare function layer_is_draw_depth_forced(): boolean;
declare function layer_get_forced_depth(): any;
declare function _fM(_gM: any): any;
declare function layer_tile_exists(_vL: any, _hM: any): 0 | 1;
declare function layer_tile_create(
	_vL: any,
	_R3: any,
	_S3: any,
	_iM: any,
	_sk: any,
	_tk: any,
	_Q6: any,
	_R6: any,
): any;
declare function layer_tile_destroy(_NI: any): number;
declare function layer_tile_change(_gM: any, _hK: any): void;
declare function layer_tile_xscale(_gM: any, scale: any): void;
declare function layer_tile_yscale(_gM: any, scale: any): void;
declare function layer_tile_blend(_gM: any, _N2: any): void;
declare function layer_tile_alpha(_gM: any, alpha: any): void;
declare function layer_tile_x(_gM: any, x: any): void;
declare function layer_tile_y(_gM: any, y: any): void;
declare function layer_tile_region(
	_gM: any,
	left: any,
	top: any,
	width: any,
	height: any,
): void;
declare function layer_tile_visible(_gM: any, visible: any): void;
declare function layer_tile_get_sprite(_gM: any): any;
declare function layer_tile_get_xscale(_gM: any): any;
declare function layer_tile_get_yscale(_gM: any): any;
declare function layer_tile_get_blend(_gM: any): any;
declare function layer_tile_get_alpha(_gM: any): any;
declare function layer_tile_get_x(_gM: any): any;
declare function layer_tile_get_y(_gM: any): any;
declare function layer_tile_get_region(_gM: any): any[] | -1;
declare function layer_tile_get_visible(_gM: any): any;
declare function _kM(_lM: any): any;
declare function layer_sequence_get_instance(_lM: any): any;
declare function layer_sequence_create(
	_ML: any,
	_mM: any,
	_nM: any,
	_oM: any,
): any;
declare function layer_sequence_destroy(_lM: any): number;
declare function layer_sequence_exists(_Ie: any, _hL: any): boolean;
declare function layer_sequence_x(_lM: any, _sM: any): number;
declare function layer_sequence_y(_lM: any, _wM: any): number;
declare function layer_sequence_angle(_lM: any, angle: any): number;
declare function layer_sequence_xscale(_lM: any, _ZG: any): number;
declare function layer_sequence_yscale(_lM: any, __G: any): number;
declare function layer_sequence_headpos(_lM: any, position: any): number;
declare function layer_sequence_headdir(_lM: any, direction: any): number;
declare function layer_sequence_pause(_lM: any): number;
declare function layer_sequence_play(_lM: any): number;
declare function layer_sequence_speedscale(_lM: any, _GM: any): number;
declare function layer_sequence_get_x(_lM: any): any;
declare function layer_sequence_get_y(_lM: any): any;
declare function layer_sequence_get_angle(_lM: any): any;
declare function layer_sequence_get_xscale(_lM: any): any;
declare function layer_sequence_get_yscale(_lM: any): any;
declare function layer_sequence_get_headpos(_lM: any): any;
declare function layer_sequence_get_headdir(_lM: any): any;
declare function layer_sequence_get_sequence(_lM: any): any;
declare function layer_sequence_is_paused(_lM: any): any;
declare function layer_sequence_is_finished(_lM: any): any;
declare function layer_sequence_get_speedscale(_lM: any): any;
declare function layer_sequence_get_length(_lM: any): any;
declare function sequence_instance_exists(_HM: any): boolean;
declare function fx_create(_MM: any): any;
declare function fx_get_name(_iH: any): any;
declare function fx_get_parameter_names(_iH: any): any;
declare function fx_get_parameter(_iH: any, _d2: any): any;
declare function fx_get_parameters(_iH: any): any;
declare function fx_get_single_layer(_iH: any): boolean | -1;
declare function fx_set_parameter(_iH: any, _d2: any, _12: any): number;
declare function fx_set_parameters(_iH: any, __M: any): number;
declare function fx_set_single_layer(_iH: any, _12: any): number;
declare function layer_set_fx(_3N: any, _iH: any): number;
declare function layer_get_fx(_3N: any): any;
declare function layer_clear_fx(_3N: any): number;
declare function layer_enable_fx(_3N: any, _Xo: any): number;
declare function layer_fx_is_enabled(_3N: any): any;
declare var _7N: number;
declare var g_GMLMathEpsilon: number;
declare function floor(_12: any): number;
declare function _8N(_9N: any): number;
declare function _aN(_9N: any): number;
declare var round: typeof _8N;
declare var _hi: typeof _8N;
declare function abs(_9N: any): number;
declare function cos(_9N: any): number;
declare function dcos(_9N: any): number;
declare function sin(_9N: any): number;
declare function dsin(_9N: any): number;
declare function tan(_9N: any): number;
declare function dtan(_9N: any): number;
declare function lengthdir_x(_bN: any, _HF: any): number;
declare function lengthdir_y(_bN: any, _HF: any): number;
declare function point_direction(
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
): number;
declare function point_distance(_m5: any, _n5: any, _P4: any, _Q4: any): number;
declare function point_distance_3d(
	_m5: any,
	_n5: any,
	_dN: any,
	_P4: any,
	_Q4: any,
	_eN: any,
): number;
declare function _85(_9N: any, _iF: any): any;
declare function _75(_9N: any, _iF: any): any;
declare function max(): any;
declare function _hN(_9N: any, _iF: any, _iN: any): any;
declare function min(): any;
declare function _jN(_9N: any, _iF: any, _iN: any): any;
declare var state: any[];
declare var _kN: number;
declare var _lN: any;
declare var _nN: number;
declare function _mN(_oN: any): any;
declare function _pN(_qN: any): void;
declare function _rN(): number;
declare function random(_Qa: any): number;
declare function irandom(_Qa: any): number;
declare function random_range(_sN: any, _tN: any): any;
declare function random_set_seed(_12: any): void;
declare function randomize(): any;
declare var randomise: typeof randomize;
declare function irandom_range(_sN: any, _tN: any): number;
declare function random_get_seed(): any;
declare function choose(): any;
declare function sign(_R3: any): 0 | 1 | -1;
declare function ceil(_R3: any): number;
declare function frac(_R3: any): number;
declare function sqrt(_R3: any): number;
declare function sqr(_R3: any): number;
declare function power(_R3: any, _9E: any): number;
declare function exp(_R3: any): number;
declare function ln(_R3: any): number;
declare function log2(_R3: any): number;
declare function log10(_R3: any): number;
declare function logn(_9E: any, _R3: any): number;
declare function arcsin(_12: any): number;
declare function darcsin(_R3: any): number;
declare function arccos(_12: any): number;
declare function darccos(_R3: any): number;
declare function arctan(_12: any): number;
declare function darctan(_R3: any): number;
declare function arctan2(_S3: any, _R3: any): number;
declare function darctan2(_S3: any, _R3: any): number;
declare function degtorad(_R3: any): number;
declare function radtodeg(_R3: any): number;
declare function mean(): number;
declare function median(): any;
declare function dot_product(_m5: any, _n5: any, _P4: any, _Q4: any): number;
declare function dot_product_3d(
	_m5: any,
	_n5: any,
	_dN: any,
	_P4: any,
	_Q4: any,
	_eN: any,
): number;
declare function math_set_epsilon(_yN: any): void;
declare function math_get_epsilon(): number;
declare function dot_product_normalised(
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
): number;
declare var dot_product_normalized: typeof dot_product_normalised;
declare function dot_product_3d_normalised(
	_m5: any,
	_n5: any,
	_dN: any,
	_P4: any,
	_Q4: any,
	_eN: any,
): number;
declare var dot_product_3d_normalized: typeof dot_product_3d_normalised;
declare function is_real(_R3: any): boolean;
declare function is_numeric(_R3: any): boolean;
declare function is_bool(_R3: any): boolean;
declare function is_undefined(_R3: any): boolean;
declare function is_int32(_R3: any): boolean;
declare function is_int64(_R3: any): boolean;
declare function is_ptr(_R3: any): boolean;
declare function is_struct(_R3: any): boolean;
declare function is_nan(_R3: any): any;
declare function is_infinity(_R3: any): boolean;
declare function static_get(_Hf: any): any;
declare function static_set(_Em: any, _Hf: any): void;
declare function YYIsInstanceof(_R3: any, _Qa: any): boolean;
declare function YYInstanceof(_R3: any): any;
declare function YYTypeof(
	_R3: any,
):
	| "string"
	| "number"
	| "bigint"
	| "symbol"
	| "undefined"
	| "bool"
	| "method"
	| "array"
	| "ptr"
	| "int64"
	| "struct";
declare function int64(_R3: any): any;
declare function ptr(_R3: any): ArrayBuffer;
declare function _FN(_Bv: any): any;
declare function is_string(_R3: any): 0 | 1;
declare function is_array(_R3: any): 0 | 1;
declare function array_length_1d(_R3: any): any;
declare var array_length: typeof array_length_1d;
declare function array_length_2d(_R3: any, _yN: any): number;
declare function array_height_2d(_R3: any): number;
declare function clamp(_vj: any, _HN: any, _Vw: any): any;
declare function lerp(_IN: any, _JN: any, _Ks: any): any;
declare function angle_difference(_Ig: any, _Jh: any): number;
declare function _xN(_IN: any, _JN: any): boolean;
declare var _KN: RegExp;
declare function yyCompareVal(_IN: any, _JN: any, _Ag: any, _LN: any): any;
declare function yyfplus(_IN: any, _JN: any): any;
declare function yyfminus(_IN: any, _JN: any): any;
declare function yyftime(_IN: any, _JN: any): any;
declare function yyfdivide(_IN: any, _JN: any): any;
declare function yyfmod(_IN: any, _JN: any): any;
declare function yyfdiv(_IN: any, _JN: any): any;
declare function yyfnotequal(_IN: any, _JN: any): boolean;
declare function yyfequal(_IN: any, _JN: any): boolean;
declare function yyfless(_IN: any, _JN: any): boolean;
declare function yyflessequal(_IN: any, _JN: any): boolean;
declare function yyfgreater(_IN: any, _JN: any): boolean;
declare function yyfgreaterequal(_IN: any, _JN: any): boolean;
declare function yyfand(_IN: any, _JN: any): boolean;
declare function yyfor(_IN: any, _JN: any): boolean;
declare function yyfxor(_IN: any, _JN: any): any;
declare function yyfbitand(_IN: any, _JN: any): any;
declare function yyfbitor(_IN: any, _JN: any): any;
declare function yyfbitxor(_IN: any, _JN: any): any;
declare function yyfbitshiftleft(_IN: any, _qG: any): number;
declare function yyfbitshiftright(_IN: any, _qG: any): number;
declare function extension_exists(_YN: any): boolean;
declare function extension_get_version(_YN: any): any;
declare function extension_get_option_value(_YN: any, _ZN: any): any;
declare function extension_get_option_count(_YN: any): number;
declare function extension_get_option_names(_YN: any): string[];
declare function extension_get_options(_YN: any): any;
declare function gc_collect(): void;
declare function gc_enable(_Xo: any): void;
declare function gc_is_enabled(): boolean;
declare function gc_get_stats(): Object;
declare var _1O: number, _2O: number, _3O: number, _4O: boolean;
declare function _5O(_wl: any, _R3: any, _S3: any, _8M: any, _6O: any): any;
declare function _7O(
	_wl: any,
	_R3: any,
	_S3: any,
	_8O: any,
	_8M: any,
	_6O: any,
): boolean;
declare function mp_linear_step(
	_wl: any,
	_R3: any,
	_S3: any,
	_8O: any,
	_6O: any,
): boolean;
declare function mp_linear_step_object(
	_wl: any,
	_R3: any,
	_S3: any,
	_8O: any,
	_Uh: any,
): boolean;
declare function _bO(
	_wl: any,
	_R3: any,
	_S3: any,
	_8O: any,
	_DF: any,
	_6O: any,
): boolean;
declare function mp_potential_step(
	_wl: any,
	_R3: any,
	_S3: any,
	_8O: any,
	_6O: any,
): boolean;
declare function mp_potential_step_object(
	_wl: any,
	_R3: any,
	_S3: any,
	_8O: any,
	_Uh: any,
): boolean;
declare function mp_potential_settings(
	_wl: any,
	_fO: any,
	_gO: any,
	_hO: any,
	_iO: any,
): void;
declare function _jO(
	_G5: any,
	_R3: any,
	_S3: any,
	_IF: any,
	_8M: any,
	_6O: any,
): boolean;
declare function _kO(
	_wl: any,
	_lO: any,
	_mO: any,
	_nO: any,
	_8O: any,
	_8M: any,
	_6O: any,
): boolean;
declare function mp_linear_path(
	_wl: any,
	_lO: any,
	_mO: any,
	_nO: any,
	_8O: any,
	_6O: any,
): boolean;
declare function mp_linear_path_object(
	_wl: any,
	_lO: any,
	_mO: any,
	_nO: any,
	_8O: any,
	_Uh: any,
): boolean;
declare function _vO(_wO: any, _xO: any): number;
declare function _eO(_HF: any, _G5: any, _IF: any, _8M: any, _6O: any): boolean;
declare function _AO(
	_G5: any,
	_R3: any,
	_S3: any,
	_IF: any,
	_8M: any,
	_6O: any,
): boolean;
declare function _BO(
	_G5: any,
	_lO: any,
	_mO: any,
	_nO: any,
	_8O: any,
	_CO: any,
	_8M: any,
	_6O: any,
): boolean;
declare function mp_potential_path(
	_wl: any,
	_lO: any,
	_mO: any,
	_nO: any,
	_8O: any,
	_HO: any,
	_6O: any,
): boolean;
declare function mp_potential_path_object(
	_wl: any,
	_lO: any,
	_mO: any,
	_nO: any,
	_8O: any,
	_HO: any,
	_Uh: any,
): boolean;
declare function _IO(
	_sk: any,
	_tk: any,
	_JO: any,
	_KO: any,
	_LO: any,
	_MO: any,
): void;
declare function mp_grid_create(
	_sk: any,
	_tk: any,
	_VO: any,
	_WO: any,
	_LO: any,
	_MO: any,
): any;
declare function mp_grid_destroy(_fe: any): void;
declare function mp_grid_clear_all(_fe: any): void;
declare function mp_grid_clear_cell(_fe: any, _Fg: any, _Qa: any): void;
declare function mp_grid_clear_rectangle(
	_fe: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
): void;
declare function mp_grid_add_cell(_fe: any, _R3: any, _S3: any): void;
declare function mp_grid_get_cell(_fe: any, _R3: any, _S3: any): any;
declare function mp_grid_add_rectangle(
	_fe: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
): void;
declare function mp_grid_add_instances(
	_G5: any,
	_fe: any,
	_Uh: any,
	_Ag: any,
): void;
declare var mp_grid_draw: typeof _1P;
declare function _1P(_fe: any): void;
declare function mp_grid_path(
	_wl: any,
	_fe: any,
	_lO: any,
	_2P: any,
	_3P: any,
	_4P: any,
	_5P: any,
	_6P: any,
): boolean;
declare function mp_grid_to_ds_grid(_Ig: any, _Jh: any): void;
declare function place_free(_wl: any, _R3: any, _S3: any): any;
declare function place_empty(_wl: any, _R3: any, _S3: any, _Uh: any): boolean;
declare function place_meeting(_wl: any, _R3: any, _S3: any, _Uh: any): boolean;
declare function place_snapped(_G5: any, _vP: any, _wP: any): boolean;
declare function move_random(_G5: any, _vP: any, _wP: any): void;
declare function move_snap(_wl: any, _vP: any, _wP: any): void;
declare function move_wrap(_G5: any, _FP: any, _GP: any, _HP: any): void;
declare function move_towards_point(
	_wl: any,
	_R3: any,
	_S3: any,
	_IF: any,
): void;
declare function _IP(_wl: any, _R3: any, _S3: any, _JP: any): any;
declare function _KP(_wl: any, _LP: any, _JP: any): void;
declare function move_bounce_solid(_wl: any, _UP: any): void;
declare function move_bounce_all(_wl: any, _UP: any): void;
declare function _VP(_G5: any, _R3: any, _S3: any, _JP: any): any;
declare function _WP(_G5: any, _HF: any, _XP: any, _JP: any): void;
declare function _yF(_wl: any, _R3: any, _S3: any, _Uh: any, _j6: any): any;
declare function _cE(_R3: any, _S3: any, _Uh: any, _j6: any): any;
declare function move_and_collide(
	_ZP: any,
	_H9: any,
	_I9: any,
	_O7: any,
	__P: any,
	_0Q: any,
	_1Q: any,
	_2Q: any,
	_3Q: any,
): any[];
declare function move_contact_solid(_wl: any, _HF: any, _XP: any): void;
declare function move_contact_all(_G5: any, _HF: any, _XP: any): void;
declare function _sQ(_G5: any, _HF: any, _XP: any, _JP: any): void;
declare function move_outside_solid(_G5: any, _HF: any, _XP: any): void;
declare function move_outside_all(_G5: any, _HF: any, _XP: any): void;
declare function distance_to_point(_G5: any, _R3: any, _S3: any): number;
declare function distance_to_object(_G5: any, _Uh: any): number;
declare function position_empty(_G5: any, _R3: any, _S3: any): boolean;
declare function position_meeting(
	_wl: any,
	_R3: any,
	_S3: any,
	_Uh: any,
): boolean;
declare var _vQ: number;
declare var _wQ: number;
declare var _xQ: number;
declare var _yQ: number;
declare var _zQ: number;
declare var _AQ: number;
declare var _BQ: number;
declare var _CQ: number;
declare var _DQ: {
	new (url: string | URL, protocols?: string | string[]): WebSocket;
	prototype: WebSocket;
	readonly CONNECTING: 0;
	readonly OPEN: 1;
	readonly CLOSING: 2;
	readonly CLOSED: 3;
};
declare var _EQ: any;
declare function _FQ(_GQ: any, type: any, _HQ: any): void;
declare var _JQ: string;
declare var _KQ: number;
declare var _LQ: number;
declare var _MQ: number;
declare var _NQ: number;
declare var _OQ: number;
declare var _PQ: any[];
declare var _QQ: any[];
declare function _RQ(wrap: any): any;
declare function _SQ(wrap: any): void;
declare function _TQ(e: any): void;
declare function _VQ(_2p: any, offset: any, length: any): any;
declare function __Q(
	_2p: any,
	_0R: any,
	id: any,
	_1R: any,
	port: any,
	_2R: any,
	_3R: any,
): void;
declare function _6R(_db: any, port: any, _7R: any, _8R: any): any;
declare function _tR(index: any, _Xe: any, port: any, _0R: any): any;
declare function network_create_server(_db: any, _HR: any, _7R: any): any;
declare function network_create_server_raw(_db: any, _HR: any, _7R: any): any;
declare function network_set_timeout(): void;
declare function network_create_socket_ext(_db: any, _HR: any): any;
declare function network_create_socket(_db: any, _HR: any, _7R: any): any;
declare function network_connect(_IR: any, _cD: any, _HR: any): number;
declare function network_connect_raw(_IR: any, _cD: any, _HR: any): number;
declare function network_connect_async(_IR: any, _cD: any, _HR: any): any;
declare function network_connect_raw_async(_IR: any, _cD: any, _HR: any): any;
declare function network_resolve(_cD: any): string;
declare function network_send_broadcast(
	_IR: any,
	_HR: any,
	_Oi: any,
	__a: any,
): number;
declare function network_send_packet(_IR: any, _Oi: any, __a: any): any;
declare function network_send_raw(_IR: any, _Oi: any, __a: any, _NR: any): any;
declare function network_set_config(_PR: any, _qc: any): void;
declare function network_send_udp(
	_IR: any,
	_cD: any,
	_HR: any,
	_Oi: any,
	__a: any,
): number;
declare function network_send_udp_raw(
	_IR: any,
	_cD: any,
	_HR: any,
	_Oi: any,
	__a: any,
): number;
declare function network_destroy(_IR: any): number;
declare function object_exists(_U2: any): boolean;
declare function object_get_name(_U2: any): any;
declare function object_get_sprite(_U2: any): any;
declare function object_get_solid(_U2: any): any;
declare function object_get_visible(_U2: any): any;
declare function _SR(_U2: any): any;
declare function object_get_persistent(_U2: any): any;
declare function object_get_mask(_U2: any): any;
declare function object_get_parent(_U2: any): any;
declare function object_get_physics(_U2: any): 0 | 1 | -1;
declare function object_set_sprite(_U2: any, _24: any): void;
declare function object_set_solid(_U2: any, _XR: any): void;
declare function object_set_visible(_U2: any, _YR: any): void;
declare function object_set_persistent(_U2: any, _ZR: any): void;
declare function object_set_mask(_U2: any, _24: any): void;
declare function __R(_U2: any, _0S: any): void;
declare function object_is_ancestor(_1S: any, _O4: any): 0 | 1;
declare function _2S(_3S: any, _4S: any): number;
declare function _8S(_3S: any, _4S: any): number;
declare function _bS(_cS: any, _3S: any, _4S: any): number;
declare function _eS(_3S: any, _4S: any): number;
declare function _hS(_3S: any): any;
declare function _iS(_jS: any): any;
declare function _kS(_TJ: any): any;
declare function _mS(_U2: any, _nS: any): any;
declare function particle_get_info(_U2: any): any;
declare function particle_exists(_U2: any): boolean;
declare function part_system_create(_aT: any): any;
declare function part_system_destroy(_U2: any): boolean;
declare function part_system_exists(_U2: any): boolean;
declare function part_system_clear(_U2: any): void;
declare function part_system_draw_order(_U2: any, _gT: any): void;
declare function part_system_depth(_U2: any, _Wi: any): void;
declare function part_system_color(_U2: any, _zk: any, _Y7: any): void;
declare var part_system_colour: typeof part_system_color;
declare function part_system_position(_U2: any, _R3: any, _S3: any): void;
declare function part_system_angle(_U2: any, _V3: any): void;
declare function part_system_automatic_update(_U2: any, _mT: any): void;
declare function part_system_automatic_draw(_U2: any, _mT: any): void;
declare function part_system_update(_U2: any): number;
declare function part_system_drawit(_U2: any): void;
declare function part_particles_create(
	_U2: any,
	_R3: any,
	_S3: any,
	_rT: any,
	_5c: any,
): void;
declare function part_particles_create_color(
	_U2: any,
	_R3: any,
	_S3: any,
	_rT: any,
	_zk: any,
	_5c: any,
): void;
declare var part_particles_create_colour: typeof part_particles_create_color;
declare function part_particles_burst(
	_U2: any,
	_R3: any,
	_S3: any,
	_aT: any,
): void;
declare function part_particles_clear(_U2: any): boolean;
declare function part_particles_count(_U2: any): number;
declare function part_type_create(): any;
declare function part_type_destroy(_U2: any): boolean;
declare function part_type_exists(_U2: any): boolean;
declare function part_type_clear(_U2: any): boolean;
declare function part_type_shape(_U2: any, _BT: any): void;
declare function part_type_sprite(
	_U2: any,
	_R1: any,
	_DT: any,
	_ET: any,
	_FT: any,
): void;
declare function part_type_subimage(_U2: any, _HT: any): void;
declare function part_type_size(
	_U2: any,
	_JT: any,
	_KT: any,
	_LT: any,
	_MT: any,
): void;
declare function part_type_size_x(
	_U2: any,
	_JT: any,
	_KT: any,
	_LT: any,
	_MT: any,
): void;
declare function part_type_size_y(
	_U2: any,
	_JT: any,
	_KT: any,
	_LT: any,
	_MT: any,
): void;
declare function part_type_scale(_U2: any, _xk: any, _yk: any): void;
declare function part_type_blend(_U2: any, _RT: any): void;
declare function part_type_color1(_U2: any, _TT: any): void;
declare var part_type_colour1: typeof part_type_color1;
declare function part_type_color2(_U2: any, _TT: any, _VT: any): void;
declare var part_type_colour2: typeof part_type_color2;
declare function part_type_color3(_U2: any, _TT: any, _VT: any, _XT: any): void;
declare var part_type_colour3: typeof part_type_color3;
declare var _ZT: typeof part_type_color3;
declare var __T: typeof part_type_color3;
declare function part_type_color_mix(_U2: any, _TT: any, _VT: any): void;
declare var part_type_colour_mix: typeof part_type_color_mix;
declare function part_type_color_rgb(
	_U2: any,
	_1U: any,
	_2U: any,
	_3U: any,
	_4U: any,
	_5U: any,
	_6U: any,
): void;
declare var part_type_colour_rgb: typeof _7U;
declare function part_type_color_hsv(
	_U2: any,
	_8U: any,
	_9U: any,
	_aU: any,
	_bU: any,
	_cU: any,
	_dU: any,
): void;
declare var part_type_colour_hsv: typeof _eU;
declare function part_type_alpha1(_U2: any, _fU: any): void;
declare function part_type_alpha2(_U2: any, _fU: any, _hU: any): void;
declare function part_type_alpha3(_U2: any, _fU: any, _hU: any, _jU: any): void;
declare function part_type_life(_U2: any, _lU: any, _mU: any): void;
declare function part_type_step(_U2: any, _oU: any, _pU: any): void;
declare function part_type_death(_U2: any, _rU: any, _sU: any): void;
declare function part_type_orientation(
	_U2: any,
	_uU: any,
	_vU: any,
	_wU: any,
	_xU: any,
	_yU: any,
): void;
declare function part_type_speed(
	_U2: any,
	_AU: any,
	_BU: any,
	_CU: any,
	_DU: any,
): void;
declare function part_type_direction(
	_U2: any,
	_FU: any,
	_GU: any,
	_HU: any,
	_IU: any,
): void;
declare function part_type_gravity(_U2: any, _KU: any, _LU: any): void;
declare function part_emitter_create(_cS: any): any;
declare function part_emitter_destroy(_cS: any, _U2: any): boolean;
declare function part_emitter_destroy_all(_cS: any): boolean;
declare function part_emitter_enable(_cS: any, _U2: any, _Xo: any): void;
declare function part_emitter_exists(_cS: any, _U2: any): boolean;
declare function part_emitter_clear(_cS: any, _U2: any): boolean;
declare function part_emitter_region(
	_cS: any,
	_U2: any,
	_TU: any,
	_UU: any,
	_VU: any,
	_WU: any,
	_BT: any,
	_XU: any,
): void;
declare function part_emitter_burst(
	_cS: any,
	_U2: any,
	_rT: any,
	_5c: any,
): void;
declare function part_emitter_stream(
	_cS: any,
	_U2: any,
	_rT: any,
	_5c: any,
): void;
declare function part_emitter_delay(
	_cS: any,
	_U2: any,
	_0V: any,
	_1V: any,
	_2V: any,
): void;
declare function part_emitter_interval(
	_cS: any,
	_U2: any,
	_4V: any,
	_5V: any,
	_6V: any,
): void;
declare function part_emitter_relative(_cS: any, _U2: any, _Xo: any): void;
declare function effect_create_below(
	_Ea: any,
	_R3: any,
	_S3: any,
	__a: any,
	_zk: any,
): void;
declare function effect_create_above(
	_Ea: any,
	_R3: any,
	_S3: any,
	__a: any,
	_zk: any,
): void;
declare function effect_create_layer(
	_vL: any,
	_Ea: any,
	_R3: any,
	_S3: any,
	__a: any,
	_zk: any,
): void;
declare function effect_create_depth(
	_Wi: any,
	_Ea: any,
	_R3: any,
	_S3: any,
	__a: any,
	_zk: any,
): void;
declare function effect_clear(): void;
declare function part_system_create_layer(_vL: any, _dV: any, _aT: any): any;
declare function part_system_get_layer(_U2: any): any;
declare function part_system_layer(_U2: any, _vL: any): void;
declare function part_system_global_space(_U2: any, _Xo: any): void;
declare function part_system_get_info(_U2: any): any;
declare function path_exists(_U2: any): boolean;
declare function path_get_name(_U2: any): any;
declare function path_get_length(_U2: any): any;
declare function path_get_kind(_U2: any): any;
declare function path_get_closed(_U2: any): any;
declare function path_get_precision(_U2: any): any;
declare function path_get_number(_U2: any): any;
declare function path_get_point_x(_U2: any, _9E: any): any;
declare function path_get_point_y(_U2: any, _9E: any): any;
declare function path_get_point_speed(_U2: any, _9E: any): any;
declare function path_get_x(_U2: any, _ai: any): any;
declare function path_get_y(_U2: any, _ai: any): any;
declare function path_get_speed(_U2: any, _ai: any): any;
declare function path_set_kind(_U2: any, _Ea: any): number;
declare function path_set_closed(_U2: any, _lV: any): number;
declare function path_set_precision(_U2: any, _Ag: any): number;
declare function path_add(): any;
declare function path_duplicate(_U2: any): any;
declare function path_assign(_U2: any, _lO: any): void;
declare function path_start(
	_G5: any,
	_lO: any,
	_IF: any,
	_rV: any,
	_sV: any,
): void;
declare function path_end(_G5: any): void;
declare var draw_path: typeof _uV;
declare function _uV(_fe: any, _vV: any, _wV: any, _sV: any): void;
declare function path_shift(_fe: any, _vV: any, _wV: any): void;
declare function path_rescale(_fe: any, _xk: any, _yk: any): void;
declare function path_rotate(_fe: any, _V3: any): void;
declare function path_reverse(_fe: any): void;
declare function path_flip(_fe: any): void;
declare function path_mirror(_fe: any): void;
declare function path_change_point(
	_fe: any,
	_U2: any,
	_GV: any,
	_HV: any,
	_IF: any,
): void;
declare function path_delete(_U2: any): void;
declare function path_append(_U2: any, _lO: any): void;
declare function path_add_point(_U2: any, _R3: any, _S3: any, _IF: any): number;
declare function path_insert_point(
	_U2: any,
	_9E: any,
	_R3: any,
	_S3: any,
	_IF: any,
): number;
declare function path_delete_point(_U2: any, _9E: any): number;
declare function path_clear_points(_U2: any): number;
declare var _MV: any;
declare var _OV: any;
declare var _PV: any;
declare function physics_world_create(_QV: any): void;
declare function physics_world_draw_debug(_VV: any): void;
declare function physics_world_gravity(_XV: any, _YV: any): void;
declare function physics_world_update_speed(_IF: any): void;
declare function physics_world_update_iterations(__P: any): void;
declare function physics_pause_enable(_0W: any): void;
declare function physics_fixture_create(): any;
declare function physics_fixture_set_kinematic(_4W: any): void;
declare function physics_fixture_set_density(_4W: any, _7W: any): void;
declare function physics_fixture_set_restitution(_4W: any, _9W: any): void;
declare function physics_fixture_set_friction(_4W: any, _bW: any): void;
declare function physics_fixture_set_collision_group(_4W: any, _dW: any): void;
declare function physics_fixture_set_sensor(_4W: any, _fW: any): void;
declare function physics_fixture_set_linear_damping(_4W: any, _hW: any): void;
declare function physics_fixture_set_angular_damping(_4W: any, _hW: any): void;
declare function physics_fixture_set_awake(_4W: any, _kW: any): void;
declare function physics_fixture_set_circle_shape(_4W: any, _mW: any): void;
declare function physics_fixture_set_box_shape(
	_4W: any,
	_pW: any,
	_qW: any,
): void;
declare function physics_fixture_set_edge_shape(
	_4W: any,
	_W9: any,
	_X9: any,
	_Y9: any,
	_Z9: any,
): void;
declare function physics_fixture_set_polygon_shape(_4W: any): void;
declare function physics_fixture_set_chain_shape(_4W: any, _e2: any): void;
declare function physics_fixture_add_point(_4W: any, _vW: any, _wW: any): void;
declare function physics_fixture_bind_ext(
	_G5: any,
	_4W: any,
	_fe: any,
	_V2: any,
	_W2: any,
): number;
declare function physics_fixture_bind(
	_G5: any,
	_4W: any,
	_fe: any,
	_CW: any,
	_DW: any,
): number;
declare function physics_fixture_delete(_4W: any): void;
declare function physics_joint_distance_create(
	_EW: any,
	_FW: any,
	_GW: any,
	_HW: any,
	_IW: any,
	_JW: any,
	_KW: any,
): any;
declare function physics_joint_rope_create(
	_EW: any,
	_FW: any,
	_GW: any,
	_HW: any,
	_IW: any,
	_JW: any,
	_QW: any,
	_KW: any,
): any;
declare function physics_joint_revolute_create(
	_EW: any,
	_FW: any,
	_SW: any,
	_TW: any,
	_UW: any,
	_VW: any,
	_WW: any,
	_XW: any,
	_YW: any,
	_ZW: any,
	_KW: any,
): any;
declare function physics_joint_prismatic_create(
	_EW: any,
	_FW: any,
	_SW: any,
	_TW: any,
	_0X: any,
	_1X: any,
	_2X: any,
	_3X: any,
	_WW: any,
	_4X: any,
	_YW: any,
	_ZW: any,
	_KW: any,
): any;
declare function physics_joint_pulley_create(
	_EW: any,
	_FW: any,
	_GW: any,
	_HW: any,
	_IW: any,
	_JW: any,
	_6X: any,
	_7X: any,
	_8X: any,
	_9X: any,
	_aX: any,
	_KW: any,
): any;
declare function physics_joint_wheel_create(
	_EW: any,
	_FW: any,
	_cX: any,
	_dX: any,
	_eX: any,
	_fX: any,
	_gX: any,
	_XW: any,
	_YW: any,
	_hX: any,
	_iX: any,
	_KW: any,
): any;
declare function physics_joint_weld_create(
	_EW: any,
	_FW: any,
	_cX: any,
	_dX: any,
	_kX: any,
	_hX: any,
	_iX: any,
	_KW: any,
): any;
declare function physics_joint_friction_create(
	_EW: any,
	_FW: any,
	_cX: any,
	_dX: any,
	_mX: any,
	_nX: any,
	_KW: any,
): any;
declare function physics_joint_gear_create(
	_EW: any,
	_FW: any,
	_pX: any,
	_qX: any,
	_aX: any,
): any;
declare function physics_joint_enable_motor(_uX: any, _vX: any): void;
declare function physics_joint_get_value(_uX: any, _yX: any): any;
declare function physics_joint_set_value(_uX: any, _yX: any, _vj: any): any;
declare function physics_joint_delete(_BX: any): void;
declare function physics_apply_force(
	_wl: any,
	_6h: any,
	_7h: any,
	_DX: any,
	_EX: any,
): void;
declare function physics_apply_impulse(
	_wl: any,
	_6h: any,
	_7h: any,
	_IX: any,
	_JX: any,
): void;
declare function physics_apply_local_force(
	_wl: any,
	_LX: any,
	_MX: any,
	_NX: any,
	_OX: any,
): void;
declare function physics_apply_local_impulse(
	_wl: any,
	_LX: any,
	_MX: any,
	_SX: any,
	_TX: any,
): void;
declare function physics_apply_angular_impulse(_wl: any, _VX: any): void;
declare function physics_apply_torque(_wl: any, _XX: any): void;
declare function physics_mass_properties(
	_wl: any,
	_ZX: any,
	__X: any,
	_0Y: any,
	_1Y: any,
): void;
declare function physics_draw_debug(_wl: any): void;
declare function physics_test_overlap(
	_G5: any,
	_R3: any,
	_S3: any,
	_V3: any,
	_Uh: any,
): any;
declare function physics_remove_fixture(_G5: any, _4Y: any): number;
declare function physics_get_friction(_G5: any, _4Y: any): any;
declare function physics_get_density(_G5: any, _4Y: any): any;
declare function physics_get_restitution(_G5: any, _4Y: any): any;
declare function physics_set_friction(_G5: any, _4Y: any, _12: any): void;
declare function physics_set_density(_G5: any, _4Y: any, _12: any): void;
declare function physics_set_restitution(_G5: any, _4Y: any, _12: any): void;
declare function physics_particle_create(
	_9Y: any,
	x: any,
	y: any,
	_aY: any,
	_bY: any,
	_N2: any,
	alpha: any,
	_cY: any,
): any;
declare function physics_particle_delete(_O7: any): void;
declare function physics_particle_delete_region_circle(
	x: any,
	y: any,
	_fY: any,
): void;
declare function physics_particle_delete_region_box(
	x: any,
	y: any,
	_hY: any,
	_iY: any,
): void;
declare function physics_particle_delete_region_poly(_kY: any): void;
declare function physics_particle_group_begin(
	_9Y: any,
	_mY: any,
	x: any,
	y: any,
	_nY: any,
	_aY: any,
	_bY: any,
	_oY: any,
	_N2: any,
	alpha: any,
	_pY: any,
	_cY: any,
): void;
declare function physics_particle_group_circle(_fY: any): void;
declare function physics_particle_group_box(_hY: any, _iY: any): void;
declare function physics_particle_group_polygon(): void;
declare function physics_particle_group_add_point(x: any, y: any): void;
declare function physics_particle_group_end(): any;
declare function physics_particle_group_join(_wY: any, from: any): void;
declare function physics_particle_group_delete(_O7: any): void;
declare function physics_particle_draw(
	_zY: any,
	_cY: any,
	_hK: any,
	_AY: any,
): void;
declare function physics_particle_draw_ext(
	_zY: any,
	_cY: any,
	_hK: any,
	_AY: any,
	_ZG: any,
	__G: any,
	angle: any,
	_N2: any,
	alpha: any,
): void;
declare function physics_particle_count(): any;
declare function physics_particle_get_data(buffer: any, _EY: any): void;
declare function physics_particle_get_max_count(): any;
declare function physics_particle_get_radius(): any;
declare function physics_particle_get_density(): any;
declare function physics_particle_get_damping(): any;
declare function physics_particle_get_gravity_scale(): any;
declare function physics_particle_set_max_count(_U6: any): void;
declare function physics_particle_set_radius(_fY: any): void;
declare function physics_particle_set_density(_NY: any): void;
declare function physics_particle_set_damping(_PY: any): void;
declare function physics_particle_set_gravity_scale(scale: any): void;
declare function physics_particle_set_flags(_U2: any, _SY: any): void;
declare function physics_particle_set_category_flags(_UY: any, _SY: any): void;
declare function physics_particle_set_group_flags(_dW: any, _VV: any): void;
declare function physics_particle_get_group_flags(_dW: any): any;
declare function physics_particle_get_data_particle(
	_O7: any,
	buffer: any,
	_EY: any,
): void;
declare function physics_particle_group_count(_ZY: any): any;
declare function physics_particle_group_get_data(
	_ZY: any,
	buffer: any,
	_EY: any,
): void;
declare function physics_particle_group_get_mass(_ZY: any): any;
declare function physics_particle_group_get_inertia(_ZY: any): any;
declare function physics_particle_group_get_centre_x(_ZY: any): any;
declare function physics_particle_group_get_centre_y(_ZY: any): any;
declare function physics_particle_group_get_vel_x(_ZY: any): any;
declare function physics_particle_group_get_vel_y(_ZY: any): any;
declare function physics_particle_group_get_ang_vel(_ZY: any): any;
declare function physics_particle_group_get_x(_ZY: any): any;
declare function physics_particle_group_get_y(_ZY: any): any;
declare function physics_particle_group_get_angle(_ZY: any): any;
declare var _bZ: boolean;
declare var _cZ: boolean;
declare function room_exists(_U2: any): boolean;
declare function room_get_name(_U2: any): any;
declare function _eZ(_U2: any): any;
declare function room_get_info(
	_U2: any,
	_fZ: any,
	_gZ: any,
	_hZ: any,
	_iZ: any,
	_jZ: any,
): {};
declare function room_set_width(_U2: any, _Eg: any): void;
declare function room_set_height(_U2: any, _Fg: any): void;
declare function room_set_persistent(_U2: any, _12: any): void;
declare function room_set_background_color(_U2: any, _Na: any, _yZ: any): void;
declare var room_set_background_colour: typeof room_set_background_color;
declare function room_get_camera(_zZ: any, _AZ: any): any;
declare function room_set_camera(_zZ: any, _AZ: any, _CZ: any): void;
declare function room_get_viewport(_zZ: any, _AZ: any): any[];
declare function room_set_viewport(
	_zZ: any,
	_AZ: any,
	_DZ: any,
	_EZ: any,
	_FZ: any,
	_GZ: any,
	_HZ: any,
): void;
declare function room_set_view_enabled(_U2: any, _12: any): void;
declare function room_add(): any;
declare function room_duplicate(_U2: any): any;
declare function room_assign(_U2: any, _HI: any): boolean;
declare function room_instance_add(_U2: any, _R3: any, _S3: any, _Uh: any): any;
declare function room_instance_clear(_U2: any): void;
declare function room_goto_next(): void;
declare function room_restart(): void;
declare function room_goto(_HI: any): void;
declare function room_goto_previous(): void;
declare function room_previous(_hx: any): number;
declare function room_next(_hx: any): any;
declare function game_end(): void;
declare function game_restart(): void;
declare function _VZ(_12: any): any;
declare function sequence_create(): any;
declare function sequence_destroy(_ZZ: any): void;
declare function sequence_get(_0_: any): any;
declare function sequence_exists(_1_: any): 0 | 1;
declare function _4_(_db: any): any;
declare function sequence_keyframe_new(_db: any): any;
declare function sequence_keyframedata_new(_db: any): any;
declare function sequence_track_new(_db: any): any;
declare function sequence_get_objects(_ZZ: any): any;
declare function sequence_instance_override_object(
	_G5: any,
	_HM: any,
	_nJ: any,
): void;
declare function _Z_(): void;
declare function ___(): void;
declare function _001(): void;
declare function _101(): void;
declare function _201(): void;
declare function _301(): void;
declare function _401(): void;
declare function _501(): void;
declare function _601(): void;
declare function _701(): void;
declare function _801(): void;
declare function _901(): void;
declare function _a01(): void;
declare function _b01(): void;
declare function _c01(): void;
declare function _d01(): void;
declare var _Y8: number;
declare function _e01(name: any): number;
declare function texture_get_texel_width(_S6: any): void;
declare function texture_get_texel_height(_S6: any): void;
declare function texture_set_stage(_f01: any, _3c: any): void;
declare function shaders_are_supported(): number;
declare function shader_is_compiled(_g01: any): void;
declare function shader_set(_g01: any): void;
declare function shader_reset(): void;
declare function shader_current(): number;
declare function shader_get_uniform(_g01: any, _h01: any): void;
declare function shader_set_uniform_i(): void;
declare function shader_set_uniform_f(): void;
declare function _j01(): void;
declare function shader_set_uniform_matrix(): void;
declare function shader_get_sampler_index(_g01: any, _3c: any): void;
declare function shader_enable_corner_id(_k01: any): void;
declare function shader_set_uniform_i_array(_l01: any, _Di: any): void;
declare function shader_set_uniform_f_array(_l01: any, _Di: any): void;
declare function shader_set_uniform_f_buffer(
	_l01: any,
	_Oi: any,
	_4c: any,
	_ac: any,
): void;
declare function shader_set_uniform_matrix_array(_l01: any, _Di: any): void;
declare function shader_get_name(_92: any): void;
declare var _m01: any[];
declare var _n01: number;
declare var _o01: number;
declare var _p01: any[];
declare var audio_sampledata: any[];
declare var _q01: boolean;
declare var _r01: number;
declare var _s01: number;
declare var _t01: any[];
declare var _u01: any[];
declare var _v01: number;
declare var _w01: number;
declare var _x01: any[];
declare var _y01: any[];
declare var _z01: number;
declare var _A01: number;
declare var _B01: number;
declare var _C01: any[];
declare var _D01: any[];
declare var _E01: {
	_qc: boolean;
	_F01: any;
};
declare var _G01: {
	_H01: number;
	_I01: number;
	_J01: number;
	_K01: number;
	_L01: number;
	_M01: number;
	_N01: number;
	_O01: number;
	_P01: number;
};
declare var _Q01: {
	_R01: number;
	_S01: number;
	_T01: number;
};
declare const _U01: {
	_V01: number;
	_W01: number;
};
declare var _X01: {
	_Y01: string;
	_Z01: string;
	__01: string;
	_011: string;
	_111: string;
};
declare const _211: {
	_311: string;
	_411: string;
	_511: string;
};
declare const _611: {
	_Z01: string;
	_311: string;
	_411: string;
	_511: string;
	_711: string;
};
declare var _911: {
	_a11: string;
};
declare var _b11: number;
declare var _c11: number;
declare var _d11: number;
declare function _e11(): void;
declare var _l11: any;
declare function _m11(): void;
declare function _r11(): void;
declare function _E11(): void;
declare function _o11(_G11: any): any;
declare function _w11(): {
	_qc: boolean;
	_F01: any;
};
declare function _I11(): typeof _J11;
declare function _L11(): any;
declare function _x11(): void;
declare function _P11(): boolean;
declare function _Q11(): void;
declare function _021(_121: any): void;
declare function _h31(_12: any, _i31: any, _j31: any, _k31: any, _3S: any): any;
declare function _m31(_l01: any): any;
declare function _h21(_a21: any): boolean;
declare function _i21(_a21: any): boolean;
declare function _j21(_a21: any): boolean;
declare function _w21(_n31: any): any;
declare var _t31: boolean;
declare var _t11: boolean;
declare function _u31(): boolean;
declare function _v31(): boolean;
declare function _y31(_z31: any): boolean;
declare function _x31(): string;
declare function _D11(): void;
declare function _s11(): void;
declare function audio_system_is_available(): boolean;
declare function audio_system_is_initialised(): boolean;
declare function audio_sound_is_playable(_F31: any): boolean;
declare function _G31(_121: any): any;
declare function _r21(_a21: any): any;
declare function _N31(_O31: any): any;
declare function _Q31(_121: any): any;
declare function audio_play_sound(
	_041: any,
	_141: any,
	_e2: any,
	_431: any,
	_4c: any,
	_731: any,
): any;
declare function audio_play_sound_on(
	_341: any,
	_041: any,
	_e2: any,
	_141: any,
	_431: any,
	_4c: any,
	_731: any,
): any;
declare function audio_play_sound_at(
	_041: any,
	_R3: any,
	_S3: any,
	__p: any,
	_441: any,
	_541: any,
	_641: any,
	_e2: any,
	_141: any,
	_431: any,
	_4c: any,
	_731: any,
): any;
declare function audio_play_sound_ext(_el: any): any;
declare function audio_stop_sound(_n31: any): void;
declare function audio_pause_sound(_n31: any): void;
declare function audio_resume_sound(_n31: any): void;
declare function audio_play_music(_n31: any, _741: any): void;
declare function audio_stop_music(): void;
declare function audio_pause_music(): void;
declare function audio_resume_music(): void;
declare function audio_music_is_playing(): number;
declare function audio_exists(_fe: any): boolean;
declare function audio_sound_get_pitch(_n31: any): any;
declare function audio_sound_pitch(_n31: any, _731: any): void;
declare function audio_sound_get_gain(_92: any): any;
declare function audio_sound_gain(_92: any, _431: any, _a41: any): void;
declare function audio_music_gain(_b41: any, time: any): void;
declare function _A11(): void;
declare function audio_sound_length(_n31: any): any;
declare function audio_sound_get_track_position(_n31: any): any;
declare function audio_sound_set_track_position(_n31: any, _A4: any): void;
declare function audio_sound_loop(_e41: any, _I21: any): void;
declare function audio_sound_get_loop(_e41: any): any;
declare function audio_sound_loop_start(_92: any, _N21: any): void;
declare function audio_sound_get_loop_start(_92: any): any;
declare function audio_sound_loop_end(_92: any, _N21: any): void;
declare function audio_sound_get_loop_end(_92: any): any;
declare function audio_system(): 0 | 1;
declare function audio_emitter_exists(_O31: any): boolean;
declare function audio_get_type(_n31: any): 0 | 1 | -1;
declare function audio_get_name(_92: any): any;
declare var _i41: any;
declare var _j41: any;
declare function audio_falloff_set_model(_k41: any): void;
declare function _c41(_p41: any): void;
declare function audio_stop_all(): void;
declare function _q41(_r41: any): void;
declare function audio_pause_all(): void;
declare function audio_resume_all(): void;
declare function _d41(_p41: any): void;
declare function audio_is_paused(_n31: any): any;
declare function audio_is_playing(_n31: any): any;
declare function audio_listener_position(_s41: any, _t41: any, _u41: any): void;
declare function audio_listener_velocity(_s41: any, _t41: any, _u41: any): void;
declare function audio_listener_orientation(
	_s41: any,
	_t41: any,
	_u41: any,
	_w41: any,
	_x41: any,
	_y41: any,
): void;
declare function audio_listener_set_position(
	_z41: any,
	_R3: any,
	_S3: any,
	__p: any,
): void;
declare function audio_listener_set_velocity(
	_z41: any,
	_A41: any,
	_B41: any,
	_C41: any,
): void;
declare function audio_listener_set_orientation(
	_z41: any,
	_D41: any,
	_E41: any,
	_F41: any,
	_G41: any,
	_H41: any,
	_I41: any,
): void;
declare function audio_listener_get_data(_z41: any): any;
declare function audio_emitter_position(
	_O31: any,
	_R3: any,
	_S3: any,
	__p: any,
): void;
declare function audio_emitter_get_x(_O31: any): any;
declare function audio_emitter_get_y(_O31: any): any;
declare function audio_emitter_get_z(_O31: any): any;
declare function audio_emitter_create(): any;
declare function audio_emitter_free(_O31: any): void;
declare function audio_master_gain(_s41: any): void;
declare function audio_set_master_gain(_z41: any, _431: any): void;
declare function audio_get_master_gain(_z41: any): any;
declare function audio_emitter_gain(_O31: any, _431: any): void;
declare function audio_emitter_get_gain(_O31: any): any;
declare function audio_emitter_pitch(_O31: any, _731: any): void;
declare function audio_emitter_get_pitch(_O31: any): any;
declare function audio_emitter_falloff(
	_O31: any,
	_O41: any,
	_P41: any,
	_Q41: any,
): void;
declare function audio_channel_num(_R41: any): void;
declare function audio_sound_get_listener_mask(_e41: any): number;
declare function audio_emitter_get_listener_mask(_O31: any): number;
declare function audio_get_listener_mask(): number;
declare function audio_get_listener_count(): number;
declare function audio_get_listener_info(index: any): any;
declare function audio_debug(_S41: any): void;
declare function _T41(e: any): void;
declare function _V41(e: any): void;
declare function _X41(_F1: any): void;
declare function _Y41(_cD: any, _fe: any, _d2: any, _Z41: any): void;
declare function _051(e: any): void;
declare function _151(e: any): void;
declare function _351(_cD: any, _Z41: any): XMLHttpRequest;
declare function _451(_cD: any, _fe: any, _d2: any, _Z41: any, _551: any): any;
declare function __41(_cD: any, _fe: any, _d2: any, _Z41: any): any;
declare var _951: string;
declare var _a51: string;
declare var _b51: string;
declare var _c51: string;
declare var _d51: number;
declare var _h11: any[];
declare function _e51(_r41: any): void;
declare function _751(e: any): void;
declare function _851(e: any): void;
declare function _B11(): void;
declare function _C11(): void;
declare function audio_group_load(_r41: any): any;
declare function audio_group_unload(_r41: any): any;
declare function audio_group_is_loaded(_r41: any): any;
declare function audio_group_load_progress(_r41: any): any;
declare function audio_group_name(_r41: any): any;
declare function audio_group_stop_all(_r41: any): void;
declare function audio_group_set_gain(_r41: any, _431: any, _a41: any): void;
declare function audio_group_get_gain(_r41: any): any;
declare function audio_group_get_assets(_w51: any): any;
declare function audio_sound_get_audio_group(_x51: any): any;
declare function audio_create_stream(_Ji: any): number;
declare function audio_destroy_stream(_n31: any): 1 | -1;
declare function _y51(): any;
declare function _z51(_A51: any): any;
declare function _B51(_A51: any): any;
declare function audio_create_buffer_sound(
	_C51: any,
	_D51: any,
	_E51: any,
	_4c: any,
	_F51: any,
	_G51: any,
): any;
declare function audio_free_buffer_sound(_F31: any): 0 | -1;
declare function _S51(): any;
declare function audio_create_play_queue(_T51: any, _E51: any, _G51: any): any;
declare function audio_queue_sound(
	_961: any,
	_C51: any,
	_4c: any,
	_bN: any,
): number;
declare function audio_free_play_queue(_961: any): 0 | -1;
declare function audio_get_recorder_count(): 0 | 1;
declare function audio_get_recorder_info(_92: any): any;
declare var _d61: boolean;
declare var _e61: any;
declare function audio_start_recording(_f61: any): 0 | -1;
declare function audio_stop_recording(_f61: any): void;
declare function audio_bus_create(): any;
declare function audio_effect_create(_db: any, _el: any): any;
declare function audio_emitter_bus(_O31: any, _s61: any): void;
declare function audio_emitter_get_bus(_O31: any): any;
declare function audio_bus_get_emitters(_s61: any): any[];
declare function audio_bus_clear_emitters(_s61: any): void;
declare function lin_to_db(_R3: any): number;
declare function db_to_lin(_R3: any): number;
declare function _w61(_92: any): void;
declare function _z61(_92: any): void;
declare function _B61(_92: any): void;
declare function _D61(): void;
declare function _F61(_92: any): any;
declare function _H61(_92: any, _vj: any): void;
declare function _J61(_vj: any): void;
declare function _L61(_92: any, _vj: any, _A4: any): void;
declare function _wz(_fe: any): boolean;
declare function _N61(_O61: any): any;
declare function _xz(_fe: any): any;
declare function _P61(_fe: any): any;
declare function _Q61(_gv: any, _Ea: any, _R61: any): any;
declare function _V61(_92: any, _gv: any, _Ea: any, _R61: any): any;
declare function _X61(_92: any): void;
declare var _Y61: number, _Z61: number, __61: number, _071: number;
declare function sprite_exists(_92: any): boolean;
declare function sprite_get_width(_92: any): any;
declare function sprite_get_height(_92: any): any;
declare function sprite_get_name(_92: any): any;
declare function _171(_92: any): any;
declare function sprite_get_number(_92: any): any;
declare function _271(_92: any): any;
declare function sprite_get_xoffset(_92: any): any;
declare function sprite_get_yoffset(_92: any): any;
declare function sprite_get_bbox_left(_92: any): any;
declare function sprite_get_bbox_right(_92: any): any;
declare function sprite_get_bbox_top(_92: any): any;
declare function sprite_get_bbox_bottom(_92: any): any;
declare function sprite_get_bbox_mode(_92: any): any;
declare function sprite_set_offset(_92: any, _lA: any, _mA: any): void;
declare function sprite_set_bbox(
	_92: any,
	_sk: any,
	_tk: any,
	_571: any,
	_671: any,
): void;
declare function sprite_set_bbox_mode(_92: any, _Gq: any): void;
declare function sprite_set_alpha_from_sprite(_Jh: any, _Ig: any): boolean;
declare function _971(): void;
declare function _a71(
	_U2: any,
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
	_Rj: any,
	_Sj: any,
): any;
declare function sprite_create_from_surface(): void;
declare function _g71(
	_fe: any,
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
	_Rj: any,
	_Sj: any,
	_h71: any,
	_i71: any,
): any;
declare function sprite_add_from_surface(): void;
declare function _r71(
	_U2: any,
	_fe: any,
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
	_Rj: any,
	_Sj: any,
): any;
declare function sprite_delete(_U2: any): void;
declare function sprite_save(_U2: any, _HT: any, _gv: any): void;
declare function sprite_duplicate(_U2: any): any;
declare function sprite_add(
	_Ji: any,
	_t71: any,
	_Rj: any,
	_Sj: any,
	_h71: any,
	_i71: any,
	_u71: any,
): any;
declare function sprite_add_ext(
	_Ji: any,
	_t71: any,
	_h71: any,
	_i71: any,
	_u71: any,
): any;
declare function sprite_replace(
	_U2: any,
	_Ji: any,
	_t71: any,
	_Rj: any,
	_Sj: any,
	_h71: any,
	_i71: any,
): any;
declare function sprite_merge(_Jh: any, _Ig: any): any;
declare function sprite_assign(_1S: any, _O4: any): any;
declare function sprite_collision_mask(
	_U2: any,
	_z71: any,
	_A71: any,
	_B71: any,
	_C71: any,
	_D71: any,
	_E71: any,
	_Ea: any,
	_F71: any,
): boolean;
declare function _O71(
	_P71: any,
	_L71: any,
	_A71: any,
	_Q71: any,
	_Ea: any,
	_F71: any,
): Uint8Array;
declare function sprite_set_cache_size(_U2: any, _Vw: any): boolean;
declare function sprite_set_cache_size_ext(
	_U2: any,
	_92: any,
	_Vw: any,
): boolean;
declare function sprite_get_tpe(_92: any, _S71: any): any;
declare function sprite_get_texture(
	_X71: any,
	_Y71: any,
): {
	_Fa: any;
	_Ga: any;
	toString: () => string;
};
declare function sprite_get_uvs(_X71: any, _Y71: any): any[];
declare function sprite_prefetch(_X71: any): 0 | -1;
declare function sprite_prefetch_multi(__71: any): 0 | -1;
declare function sprite_flush(_X71: any): 0 | -1;
declare function sprite_flush_multi(__71: any): 0 | -1;
declare function sprite_set_speed(_X71: any, _IF: any, _db: any): void;
declare function sprite_get_speed_type(_X71: any): any;
declare function sprite_get_speed(_X71: any): any;
declare function sprite_get_nineslice(_X71: any): any;
declare function sprite_set_nineslice(_X71: any, _481: any): any;
declare function sprite_nineslice_create(): any;
declare function sprite_get_info(_X71: any): any;
declare function ansi_char(_12: any): string;
declare function chr(_12: any): string | 0;
declare function ord(_5u: any): any;
declare function real(_Qa: any): any;
declare function bool(_Qa: any): boolean;
declare var _u81: RegExp;
declare function _Zt(_5u: any, _Yt: any): any;
declare function string(_Uh: any): any;
declare function string_ext(_5u: any, _Yt: any): any;
declare function string_format(_12: any, _v81: any, _w81: any): any;
declare function string_length(_5u: any): number;
declare function string_byte_length(_5u: any): number;
declare function _A81(_ej: any, _B81: any): any;
declare function _E81(_5u: any, _F81: any): any;
declare function string_pos(_J81: any, _5u: any): any;
declare function string_pos_ext(_J81: any, _5u: any, _N81: any): any;
declare function string_last_pos(_J81: any, _5u: any): any;
declare function string_last_pos_ext(_J81: any, _5u: any, _N81: any): any;
declare function string_copy(_5u: any, _92: any, _ac: any): any;
declare function string_char_at(_5u: any, _92: any): string;
declare function string_ord_at(_5u: any, _92: any): any;
declare function _T81(_5u: any): any[];
declare function _W81(data: any): string;
declare function string_byte_at(_5u: any, _92: any): any;
declare function string_set_byte_at(_5u: any, _92: any, _wv: any): any;
declare function string_delete(_5u: any, _92: any, _ac: any): any;
declare function string_insert(_J81: any, _5u: any, _92: any): any;
declare function string_replace(_5u: any, _J81: any, __81: any): any;
declare function string_replace_all(_5u: any, _J81: any, __81: any): any;
declare function string_count(_J81: any, _5u: any): number;
declare function string_hash_to_newline(_5u: any): string;
declare function string_lower(_5u: any): any;
declare function string_upper(_5u: any): any;
declare function string_repeat(_5u: any, _ac: any): string;
declare function string_letters(_5u: any): string;
declare function string_digits(_5u: any): string;
declare function string_lettersdigits(_5u: any): string;
declare const _591: RegExp;
declare function _691(string: any): any;
declare function string_trim_start(_5u: any, _791: any): any;
declare function string_trim_end(_5u: any, _791: any): any;
declare function string_trim(_5u: any, _791: any): any;
declare function string_starts_with(_5u: any, _12: any): any;
declare function string_ends_with(_5u: any, _12: any): any;
declare function _c91(input: any, _d91: any, _e91: any): any[];
declare function string_split(_5u: any, _g91: any, _h91: any, _i91: any): any[];
declare function string_split_ext(
	_5u: any,
	_k91: any,
	_h91: any,
	_i91: any,
): any[];
declare function _l91(_g91: any, _Yt: any): any;
declare function string_join(_g91: any): any;
declare function string_join_ext(_g91: any, _Yt: any, _4c: any, _F51: any): any;
declare function string_concat(): any;
declare function string_concat_ext(_Yt: any, _4c: any, _F51: any): any;
declare function _r91(_s91: any): 2 | 1;
declare function string_foreach(_5u: any, _Sh: any, _ai: any, _F51: any): void;
declare var _y91: any[];
declare var _z91: boolean;
declare function surface_resize(_fe: any, _Eg: any, _Fg: any): 0 | 1;
declare function surface_depth_disable(_F91: any): void;
declare function surface_get_depth_disable(): boolean;
declare var surface_create: typeof _G91;
declare function _G91(_Eg: any, _Fg: any, _T51: any, _H91: any): any;
declare function surface_create_ext(
	_d2: any,
	_Eg: any,
	_Fg: any,
	_T51: any,
): any;
declare var surface_free: typeof _N91;
declare function _N91(_fe: any): number;
declare function surface_exists(_fe: any): 0 | 1;
declare function surface_get_width(_fe: any): any;
declare function surface_get_height(_fe: any): any;
declare function surface_get_texture(_fe: any):
	| -1
	| {
			_Fa: any;
			_Ga: any;
	  };
declare function _E91(_fe: any): boolean;
declare var _S91: typeof _T91;
declare function _T91(_fe: any): void;
declare var surface_set_target: typeof _7a1;
declare function _7a1(_fe: any): boolean;
declare function surface_get_target(): number;
declare var surface_reset_target: typeof _ta1;
declare function _ta1(): void;
declare function _8B(_Oi: any, _R3: any, _S3: any): number;
declare function surface_getpixel(): void;
declare function surface_getpixel_ext(): void;
declare function _Ja1(_fe: any, _R3: any, _S3: any): number;
declare function _Ka1(_Oi: any, _gv: any): void;
declare function surface_save(_fe: any, _gv: any): void;
declare function surface_save_part(
	_fe: any,
	_gv: any,
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
): void;
declare function draw_surface(): void;
declare function _La1(_fe: any, _R3: any, _S3: any): void;
declare function draw_surface_stretched(
	_fe: any,
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
): void;
declare function draw_surface_tiled(_fe: any, _R3: any, _S3: any): void;
declare function draw_surface_part(
	_fe: any,
	_sk: any,
	_tk: any,
	_Q6: any,
	_R6: any,
	_R3: any,
	_S3: any,
): void;
declare function draw_surface_ext(
	_fe: any,
	_R3: any,
	_S3: any,
	_xk: any,
	_yk: any,
	_Z2: any,
	_zk: any,
	_Y7: any,
): void;
declare function draw_surface_stretched_ext(
	_fe: any,
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
	_zk: any,
	_Y7: any,
): void;
declare var draw_surface_tiled_ext: typeof _Ma1;
declare function _Ma1(
	_fe: any,
	_R3: any,
	_S3: any,
	_xk: any,
	_yk: any,
	_zk: any,
	_Y7: any,
): void;
declare function draw_surface_part_ext(
	_fe: any,
	_sk: any,
	_tk: any,
	_Q6: any,
	_R6: any,
	_R3: any,
	_S3: any,
	_xk: any,
	_yk: any,
	_zk: any,
	_Y7: any,
): void;
declare function draw_surface_general(
	_fe: any,
	_sk: any,
	_tk: any,
	_Q6: any,
	_R6: any,
	_R3: any,
	_S3: any,
	_xk: any,
	_yk: any,
	_Z2: any,
	_Fk: any,
	_Gk: any,
	_Hk: any,
	_Ik: any,
	_Y7: any,
): void;
declare function surface_copy(): void;
declare function surface_copy_part(): void;
declare function _Qa1(_T51: any): boolean;
declare function _Ya1(_T51: any): any;
declare function surface_format_is_supported(_T51: any): boolean;
declare function surface_get_format(_fe: any): any;
declare function _2b1(): void;
declare function _6b1(_vz: any, _7b1: any): number;
declare function _Ib1(
	_Jb1: any,
	_vz: any,
	_Kb1: any,
): {
	type: number;
	id: number;
};
declare function tag_get_asset_ids(_gb1: any, _vz: any): any;
declare function tag_get_assets(_gb1: any): any;
declare function asset_get_tags(_Jb1: any, _vz: any): any[];
declare function asset_add_tags(_Jb1: any, _gb1: any, _vz: any): 0 | 1;
declare function asset_remove_tags(_Jb1: any, _gb1: any, _vz: any): 0 | 1;
declare function asset_has_tags(_Jb1: any, _gb1: any, _vz: any): 0 | 1;
declare function asset_has_any_tag(_Jb1: any, _gb1: any, _vz: any): 0 | 1;
declare function asset_clear_tags(_Jb1: any, _vz: any): 0 | 1;
declare function _Mb1(image_index: any, _Nb1: any): number;
declare function draw_self(_G5: any): void;
declare function draw_sprite_ext(
	_wl: any,
	_R1: any,
	_Pb1: any,
	_R3: any,
	_S3: any,
	_xk: any,
	_yk: any,
	_Z2: any,
	_Eb: any,
	_Y7: any,
): void;
declare function draw_sprite(
	_wl: any,
	_R1: any,
	_Pb1: any,
	_R3: any,
	_S3: any,
): void;
declare function draw_sprite_pos(
	_wl: any,
	_R1: any,
	_Pb1: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_ym: any,
	_zm: any,
	_Rb1: any,
	_Sb1: any,
	_Y7: any,
): void;
declare function draw_sprite_stretched(
	_wl: any,
	_R1: any,
	_Pb1: any,
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
): void;
declare function draw_sprite_stretched_ext(
	_wl: any,
	_R1: any,
	_Pb1: any,
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
	_Na: any,
	_Y7: any,
): void;
declare function draw_sprite_part(
	_wl: any,
	_R1: any,
	_Pb1: any,
	_sk: any,
	_tk: any,
	_Q6: any,
	_R6: any,
	_R3: any,
	_S3: any,
): void;
declare function draw_sprite_part_ext(
	_wl: any,
	_R1: any,
	_Pb1: any,
	_sk: any,
	_tk: any,
	_Q6: any,
	_R6: any,
	_R3: any,
	_S3: any,
	_xk: any,
	_yk: any,
	_zk: any,
	_Y7: any,
): void;
declare function draw_sprite_tiled(
	_wl: any,
	_R1: any,
	_Pb1: any,
	_R3: any,
	_S3: any,
): void;
declare function draw_sprite_tiled_ext(
	_wl: any,
	_R1: any,
	_Pb1: any,
	_R3: any,
	_S3: any,
	_xk: any,
	_yk: any,
	_zk: any,
	_Y7: any,
): void;
declare function draw_sprite_general(
	_wl: any,
	_R1: any,
	_Pb1: any,
	_sk: any,
	_tk: any,
	_Q6: any,
	_R6: any,
	_R3: any,
	_S3: any,
	_xk: any,
	_yk: any,
	_Z2: any,
	_Fk: any,
	_Gk: any,
	_Hk: any,
	_Ik: any,
	_Y7: any,
): void;
declare function _Ub1(_fe: any): void;
declare function _Vb1(): void;
declare function _Wb1(): void;
declare function _Xb1(): void;
declare function _Yb1(_fe: any): void;
declare function _Zb1(): void;
declare function __b1(): void;
declare function _0c1(_1c1: any): boolean;
declare function _5c1(_1c1: any): boolean;
declare function _6c1(_1c1: any): boolean;
declare function _8c1(id: any): any;
declare function _bc1(id: any, _9c1: any): void;
declare function _cc1(id: any): void;
declare function time_source_create(
	_jc1: any,
	_kc1: any,
	_lc1: any,
	_mc1: any,
	_nc1?: any[],
	_oc1?: number,
	_pc1?: number,
): any;
declare function _wc1(
	_jc1: any,
	_kc1: any,
	_lc1: any,
	_mc1: any,
	_nc1: any,
	_oc1: any,
	_pc1: any,
): any;
declare function time_source_destroy(_fe: any, _yc1?: boolean): void;
declare function _Bc1(_fe: any): any;
declare function _Ac1(_fe: any): any;
declare function time_source_start(_fe: any): void;
declare function _Ic1(_fe: any): any;
declare function time_source_stop(_fe: any): void;
declare function _Kc1(_fe: any): any;
declare function time_source_pause(_fe: any): void;
declare function _Lc1(_fe: any): any;
declare function time_source_resume(_fe: any): void;
declare function _Mc1(_fe: any): any;
declare function time_source_reset(_fe: any): void;
declare function _Nc1(_fe: any): any;
declare function time_source_reconfigure(
	_fe: any,
	_kc1: any,
	_lc1: any,
	_mc1: any,
	_nc1?: any[],
	_oc1?: number,
	_pc1?: number,
): any;
declare function _Oc1(
	_fe: any,
	_kc1: any,
	_lc1: any,
	_mc1: any,
	_nc1: any,
	_oc1: any,
	_pc1: any,
): any;
declare function time_source_get_period(_fe: any): any;
declare function _Qc1(_fe: any): any;
declare function time_source_get_reps_completed(_fe: any): any;
declare function _Sc1(_fe: any): any;
declare function time_source_get_reps_remaining(_fe: any): any;
declare function _Uc1(_fe: any): any;
declare function time_source_get_units(_fe: any): any;
declare function _Wc1(_fe: any): any;
declare function time_source_get_time_remaining(_fe: any): any;
declare function _Yc1(_fe: any): any;
declare function time_source_get_state(_fe: any): any;
declare function __c1(_fe: any): any;
declare function time_source_get_parent(_fe: any): any;
declare function _1d1(_fe: any): any;
declare function time_source_get_children(_fe: any): any;
declare function _3d1(_fe: any): any;
declare function time_source_exists(_fe: any): boolean;
declare function _5d1(_fe: any): boolean;
declare function time_seconds_to_bpm(_6d1: any): number;
declare function _7d1(_6d1: any): number;
declare function time_bpm_to_seconds(_8d1: any): number;
declare function _ad1(_8d1: any): number;
declare function call_later(
	_kc1: any,
	_lc1: any,
	_mc1: any,
	_lr?: boolean,
): any;
declare function _bd1(_kc1: any, _lc1: any, _mc1: any, _lr: any): any;
declare function call_cancel(_l01: any): any;
declare function _ed1(_l01: any): any;
declare function timeline_exists(_U2: any): boolean;
declare function timeline_get_name(_U2: any): any;
declare function _gd1(_U2: any): any;
declare function timeline_add(): any;
declare function timeline_delete(_U2: any): void;
declare function timeline_clear(_U2: any): void;
declare function _id1(_U2: any, _p91: any, _jd1: any): void;
declare function timeline_moment_add_script(
	_U2: any,
	_p91: any,
	_st: any,
): void;
declare function timeline_size(_U2: any): number;
declare function timeline_max_moment(_U2: any): number;
declare function timeline_moment_clear(_U2: any, _p91: any): void;
declare function _nd1(_DZ: any): void;
declare function window_handle(): any;
declare function window_device(): any;
declare function _pd1(): boolean;
declare function window_set_fullscreen(_qd1: any): void;
declare function window_get_fullscreen(): any;
declare function window_set_showborder(_yZ: any): void;
declare function window_get_showborder(): boolean;
declare function _sd1(_yZ: any): void;
declare function _td1(): boolean;
declare function _ud1(_vd1: any): void;
declare function _wd1(): boolean;
declare function _xd1(_yd1: any): void;
declare function _zd1(): boolean;
declare function window_set_caption(_Ad1: any): void;
declare function window_set_min_width(_Q6: any): void;
declare function window_set_max_width(_Q6: any): void;
declare function window_set_min_height(_R6: any): void;
declare function window_set_max_height(_R6: any): void;
declare function window_get_caption(): string;
declare function _Bd1(_k01: any, _Cd1: any): void;
declare function window_set_cursor(_Dd1: any): void;
declare function window_get_cursor(): any;
declare function window_set_color(_Na: any): void;
declare var window_set_colour: typeof window_set_color;
declare function window_get_color(): number;
declare var window_get_colour: typeof window_get_color;
declare function _Od1(_ll: any, _Pd1: any): void;
declare function _Qd1(): void;
declare function window_set_position(_R3: any, _S3: any, _Rd1: any): void;
declare function window_set_size(_Eg: any, _Fg: any): void;
declare function window_set_rectangle(
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
): void;
declare function window_center(): void;
declare function _2e1(): void;
declare function window_get_x(): any;
declare function window_get_y(): any;
declare function window_get_width(): number;
declare function window_get_height(): number;
declare function window_get_visible_rects(): void;
declare function window_mouse_get_x(): number;
declare function window_mouse_get_y(): number;
declare function window_mouse_set(x: any, y: any): void;
declare function window_mouse_set_locked(_Xo: any): void;
declare function window_mouse_get_locked(): boolean;
declare function window_mouse_get_delta_x(): number;
declare function window_mouse_get_delta_y(): number;
declare function window_view_mouse_get_x(_fe: any): any;
declare function window_view_mouse_get_y(_fe: any): any;
declare function window_views_mouse_get_x(): any;
declare function window_views_mouse_get_y(): any;
declare var _8e1: any;
declare var os_win32: any;
declare var _9e1: any;
declare var os_macosx: any;
declare var _ae1: any;
declare var os_ios: any;
declare var os_android: any;
declare var of_challenge_win: any;
declare var of_challenge_lose: any;
declare var of_challenge_tie: any;
declare var leaderboard_type_number: any;
declare var leaderboard_type_time_mins_secs: any;
declare var _be1: number;
declare var _ce1: number,
	_de1: number,
	_ee1: number,
	_fe1: number,
	_ge1: number,
	_he1: number;
declare var _ie1: number;
declare function aa_1241_kz(): number;
declare function _je1(): void;
declare function code_is_compiled(): boolean;
declare function _ke1(_k01: any): void;
declare function achievement_available(): boolean;
declare function achievement_login(): void;
declare function achievement_logout(): void;
declare function achievement_login_status(): void;
declare function achievement_reset(): void;
declare function achievement_show_achievements(): void;
declare function achievement_show_leaderboards(): void;
declare function achievement_load_friends(): void;
declare function achievement_load_leaderboard(): void;
declare function achievement_get_pic(): void;
declare function achievement_load_progress(): void;
declare function achievement_send_challenge(): void;
declare function os_get_info(): number;
declare function achievement_event(): void;
declare function achievement_show(): void;
declare function achievement_get_info(): void;
declare function os_get_config(): any;
declare function url_open_full(_cD: any, _dl: any, _NR: any): void;
declare function url_open_ext(_cD: any, _dl: any): void;
declare function url_open(_cD: any): void;
declare function achievement_post_score(_me1: any, _ne1: any): void;
declare function achievement_post(_me1: any, _oe1: any): void;
declare function shop_leave_rating(
	_Gt: any,
	_pe1: any,
	_qe1: any,
	_cl: any,
): void;
declare var get_timer: () => number;
declare function virtual_key_add(
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
	_re1: any,
): any;
declare function virtual_key_delete(_fe: any): void;
declare function _ye1(): void;
declare function virtual_key_show(_fe: any): void;
declare function virtual_key_hide(_fe: any): void;
declare function device_get_tilt_x(): number;
declare function device_get_tilt_y(): number;
declare function device_get_tilt_z(): number;
declare function _Be1(): void;
declare function _Ce1(): void;
declare function _De1(): void;
declare function _Ee1(_9N: any, _iF: any): void;
declare function _Fe1(_9N: any, _iF: any, _iN: any): void;
declare function _Ge1(_9N: any, _iF: any, _iN: any): void;
declare function _He1(_9N: any): void;
declare function _Ie1(_9N: any, _iF: any, _iN: any): void;
declare function _Je1(_9N: any): void;
declare function _Ke1(): string;
declare function _Le1(): boolean;
declare function _Me1(_9N: any, _iF: any): void;
declare function device_is_keypad_open(): boolean;
declare function _Ne1(): void;
declare function url_get_domain(): string;
declare function _Oe1(): any;
declare function device_mouse_check_button(_Pe1: any, _tl: any): any;
declare function device_mouse_check_button_pressed(_Pe1: any, _tl: any): any;
declare function device_mouse_check_button_released(_Pe1: any, _tl: any): any;
declare function device_mouse_x(_Pe1: any): any;
declare function device_mouse_raw_x(_Pe1: any): any;
declare function device_mouse_y(_Pe1: any): any;
declare function device_mouse_raw_y(_Pe1: any): any;
declare function device_mouse_x_to_gui(_Pe1: any): number;
declare function device_mouse_y_to_gui(_Pe1: any): number;
declare function os_is_paused(): boolean;
declare function window_has_focus(): boolean;
declare function ds_exists(_U2: any, _db: any): 0 | 1;
declare function script_exists(_U2: any): 0 | 1;
declare function script_get_name(_U2: any): any;
declare function _Ve1(_U2: any): any;
declare function script_execute(_We1: any, _Cx: any, _92: any): any;
declare var method_call: typeof script_execute_ext;
declare function script_execute_ext(
	_We1: any,
	_Cx: any,
	_92: any,
	_Di: any,
	_4c: any,
	_F51: any,
): any;
declare function gml_release_mode(_Xo: any): void;
declare function application_surface_draw_enable(_Xo: any): void;
declare function application_surface_enable(_Xo: any): void;
declare function application_surface_is_enabled(): boolean;
declare function _3f1(): void;
declare function application_get_position(): any[];
declare function extension_stubfunc_real(): number;
declare function extension_stubfunc_string(): string;
declare function _xM1(): string;
declare function _zM1(): string;
declare function _BM1(): string;
declare function _CM1(_DM1: any, _NR: any): void;
declare var _D8: {
	_XQ1: number;
	_5N1: number;
	_YQ1: number;
	_79: number;
	_oa: number;
	_na: number;
	_la: number;
	_ma: number;
	_ka: number;
	_zb: number;
	_Fb: number;
	_Pb: number;
	_Nb: number;
	_ZQ1: number;
	__Q1: number;
	_0R1: number;
	_1R1: number;
	_2R1: number;
	_3R1: number;
	_4R1: number;
	_5R1: number;
	_6R1: number;
	_7R1: number;
	_8R1: number;
	_Rb: number;
	_Ab: number;
	_Cb: number;
	_Vb: number;
	_Gb: number;
	_Xb: number;
	_9R1: number;
	_aR1: number;
	_H8: number;
	_bR1: number;
	_J8: number;
	_E8: number;
	_G8: number;
	_cR1: number;
	_dR1: number;
	_I8: number;
	_eR1: number;
	_fR1: number;
	_gR1: number;
	_hR1: number;
	_iR1: number;
	_jR1: number;
	_kR1: number;
	_lR1: number;
	_Iq: number;
	_mR1: number;
	_Kq: number;
	_Lq: number;
	_Mq: number;
	_nR1: number;
	_tq: number;
	_oR1: number;
	_pR1: number;
	_wq: number;
	_7r: number;
	_R8: number;
	_S8: number;
	_Fq: number;
	_vq: number;
	_9r: number;
	_Ur: number;
	_sq: number;
	_Aq: number;
	_qR1: number;
	_Bq: number;
	_rR1: number;
	_Cq: number;
	_Dq: number;
	_sR1: number;
	_tR1: number;
	_uR1: number;
	_vR1: number;
	_wR1: number;
	_5r: number;
	_7P1: number;
	_xR1: number;
	_yR1: number;
	_cP1: number;
	_9P1: number;
	_fP1: number;
	_zR1: number;
	_AR1: number;
	_V8: number;
	_T8: number;
	_U8: number;
	_BR1: number;
	_Hq: number;
	_Jq: number;
	_CR1: number;
	_DR1: number;
	_ER1: number;
	_FR1: number;
	_GR1: number;
	_HR1: number;
	_IR1: number;
	_JR1: number;
	_KR1: number;
	_LR1: number;
	_MR1: number;
	_NR1: number;
	_OR1: number;
	_PR1: number;
	_QR1: number;
	_RR1: number;
	_SR1: number;
	_nr: number;
	_pr: number;
	_er: number;
	_gr: number;
	_mr: number;
	_or: number;
	_rr: number;
	_zr: number;
	_Cr: number;
	_wr: number;
	_Fr: number;
	_Gr: number;
	_TR1: number;
	_hr: number;
	_fr: number;
	_UR1: number;
	_VR1: number;
	_MO1: number;
	_WR1: number;
	_LO1: number;
	_XR1: number;
	_YR1: number;
	_ZR1: number;
	__R1: number;
	_0S1: number;
	_1S1: number;
	_2S1: number;
	_3S1: number;
	_4S1: number;
	_5S1: number;
	_6S1: number;
	_7S1: number;
	_8S1: number;
	_9S1: number;
	_aS1: number;
	_bS1: number;
	_rQ1: number;
	_cS1: number;
	_VP1: number;
	_WP1: number;
	_dS1: number;
	_eS1: number;
	_wP1: number;
	_fS1: number;
	_vP1: (_gS1: any, _hS1: any, _iS1: any) => void;
};
declare function _6N1(_jS1: any): void;
declare function _yN1(
	_FU1: any,
	_Q6: any,
	_R6: any,
	_GU1: any,
	_CP1: any,
	_HU1: any,
	_VV: any,
	_T51: any,
): void;
declare var _SU1: {
	_QU1: number;
	_BU1: number;
	_TU1: number;
	_UU1: number;
	_VU1: number;
	_WU1: number;
	_YP1: number;
	_XU1: number;
};
declare var _YU1: {
	_BU1: number;
	_ZU1: number;
	__U1: number;
	_TU1: number;
	_YP1: number;
	__P1: number;
	_RU1: number;
	_0V1: number;
	_XU1: number;
	_UU1: number;
	_1V1: number;
};
declare var _XP1: {
	_QU1: number;
	_BU1: number;
	_ZU1: number;
	__U1: number;
	_TU1: number;
	_YP1: number;
	__P1: number;
	_RU1: number;
	_0V1: number;
	_XU1: number;
};
declare function _2V1(_3V1: any): void;
declare function _RH(): void;
declare function _uV1(_vV1: any, _wV1: any, _xV1: any): void;
declare function _8N1(_EV1: any, _FV1: any, _GV1: any, _jS1: any): void;
declare function _AN1(_jS1: any): void;
declare function _Ha(__a: any, _WV1: any, _XV1: any): void;
declare function _9N1(_GV1: any, _hW1: any): void;
declare function _zN1(): void;
declare var _FW1: any;
declare function Long(_s81: any, _S81: any, _JW1: any): void;
declare namespace Long {
	var _KW1: typeof globalThis._KW1;
	var _NW1: typeof globalThis._NW1;
	var _QW1: typeof globalThis._QW1;
	var _PW1: typeof globalThis._PW1;
	var _YW1: typeof globalThis._YW1;
	var _EN: typeof globalThis._EN;
	var ZERO: any;
	var _RW1: any;
	var ONE: any;
	var _3X1: any;
	var _4X1: any;
	var MAX_VALUE: any;
	var _TW1: any;
	var MIN_VALUE: any;
	var _iY1: (_jY1: any, _JW1: any, _yX1: any) => any;
	var _kY1: (_jY1: any, _JW1: any) => any;
	var _lY1: (_jY1: any, _JW1: any) => any;
}
declare function _KW1(_pi: any): boolean;
declare var _LW1: {};
declare var _MW1: {};
declare function _NW1(value: any, _JW1: any): any;
declare function _QW1(value: any, _JW1: any): any;
declare function _PW1(_q81: any, _p81: any, _JW1: any): any;
declare var _XW1: (x: number, y: number) => number;
declare function _YW1(_ej: any, _JW1: any, _ZW1: any): any;
declare function _EN(_qc: any, _JW1: any): any;
declare var _0X1: number;
declare var _1X1: number;
declare var _WW1: number;
declare var _SW1: number;
declare var _UW1: number;
declare var _2X1: any;
declare var ZERO: any;
declare var _RW1: any;
declare var ONE: any;
declare var _3X1: any;
declare var _4X1: any;
declare var MAX_VALUE: any;
declare var _TW1: any;
declare var MIN_VALUE: any;
declare var _5X1: any;
declare function _nY1(vertices: any, vertexCount: any, color: any): void;
declare function _rY1(vertices: any, vertexCount: any, color: any): void;
declare function _tY1(_8i1: any, _fY: any, color: any): void;
declare function _uY1(_8i1: any, _fY: any, _Tm: any, color: any): void;
declare function _vY1(_Sm: any, _bi1: any, color: any): void;
declare function _wY1(_ah1: any): void;
declare function _CY1(_di1: any, _fY: any, _ei1: any, _U6: any): void;
declare function _3W(): void;
declare var _PY1: number,
	_QY1: number,
	_RY1: number,
	_SY1: number,
	_TY1: number,
	_UY1: number,
	_VY1: number,
	_WY1: number,
	_XY1: number,
	_YY1: number,
	_ZY1: number,
	__Y1: number,
	_0Z1: number,
	_1Z1: number,
	_2Z1: number,
	_3Z1: number,
	_4Z1: number,
	_5Z1: number,
	_6Z1: number,
	_7Z1: number,
	_8Z1: number,
	_9Z1: number,
	_aZ1: number,
	_bZ1: number,
	_cZ1: number;
declare function _dZ1(_eZ1: any): void;
declare function _pZ1(_qZ1: any, _rZ1: any, _V2: any, _W2: any): void;
declare var _f_1: number,
	_g_1: number,
	_h_1: number,
	_i_1: number,
	_j_1: number,
	_k_1: number,
	_l_1: number,
	_m_1: number,
	_n_1: number;
declare var _yY1: any;
declare function _o_1(): void;
declare function _V12(_W12: any): void;
declare function _022(_122: any, _222: any, _322: any): void;
declare function _UV(_QV: any, _522: any): void;
declare function _F22(_G22: any, _H22: any): void;
declare function _M42(_el: any): void;
declare namespace _M42 {
	var _R42: {
		_052: number;
		_S42: number;
		_W42: number;
		_X42: number;
		_Z42: number;
	};
	var _152: {
		name: string;
		_252: boolean;
		defaultValue: number;
		minValue: number;
		maxValue: number;
	}[];
}
declare function _352(_el: any): void;
declare namespace _352 {
	var _R42: {
		_052: number;
		_552: number;
		_752: number;
		_852: number;
		_952: number;
		_b52: number;
		_d52: number;
	};
	var _152: {
		name: string;
		_252: boolean;
		defaultValue: number;
		minValue: number;
		maxValue: number;
	}[];
}
declare function _f52(_el: any): void;
declare namespace _f52 {
	var _R42: {
		_052: number;
		Time: number;
		_h52: number;
		_Z42: number;
	};
	var _152: {
		name: string;
		_252: boolean;
		defaultValue: number;
		minValue: number;
		maxValue: number;
	}[];
}
declare function _j52(_el: any): void;
declare namespace _j52 {
	var _R42: {
		_052: number;
	};
	var _152: {
		name: string;
		_252: boolean;
		defaultValue: number;
		minValue: number;
		maxValue: number;
	}[];
}
declare function _G52(_el: any): void;
declare namespace _G52 {
	var _R42: {
		_052: number;
		_S42: number;
	};
	var _152: {
		name: string;
		_252: boolean;
		defaultValue: number;
		minValue: number;
		maxValue: number;
	}[];
}
declare function _p52(_el: any): void;
declare namespace _p52 {
	var _R42: {
		_052: number;
		_I52: number;
		_ko1: number;
		_S42: number;
	};
	var _152: {
		name: string;
		_252: boolean;
		defaultValue: number;
		minValue: number;
		maxValue: number;
	}[];
}
declare function _m52(_el: any): void;
declare namespace _m52 {
	var _R42: {
		_052: number;
		_r52: number;
		_ko1: number;
	};
	var _152: {
		name: string;
		_252: boolean;
		defaultValue: number;
		minValue: number;
		maxValue: number;
	}[];
}
declare function _n52(_el: any): void;
declare namespace _n52 {
	var _R42: {
		_052: number;
		_I52: number;
		_ko1: number;
		_S42: number;
	};
	var _152: {
		name: string;
		_252: boolean;
		defaultValue: number;
		minValue: number;
		maxValue: number;
	}[];
}
declare function _q52(_el: any): void;
declare namespace _q52 {
	var _R42: {
		_052: number;
		_r52: number;
		_ko1: number;
	};
	var _152: {
		name: string;
		_252: boolean;
		defaultValue: number;
		minValue: number;
		maxValue: number;
	}[];
}
declare function _o52(_el: any): void;
declare namespace _o52 {
	var _R42: {
		_052: number;
		_I52: number;
		_ko1: number;
		_S42: number;
	};
	var _152: {
		name: string;
		_252: boolean;
		defaultValue: number;
		minValue: number;
		maxValue: number;
	}[];
}
declare function _Q52(_el: any): void;
declare namespace _Q52 {
	var _R42: {
		_052: number;
		_S52: number;
		_T52: number;
		_Z42: number;
	};
	var _152: {
		name: string;
		_252: boolean;
		defaultValue: number;
		minValue: number;
		maxValue: number;
	}[];
}
declare function _V52(_el: any): void;
declare namespace _V52 {
	var _R42: {
		_052: number;
		_X52: number;
		_Z52: number;
		_062: number;
		_NY1: number;
	};
	var _152: {
		name: string;
		_252: boolean;
		defaultValue: number;
		minValue: number;
		maxValue: number;
	}[];
}
declare function _K11(): void;
declare namespace _K11 {
	var _362: number;
	var _762: (_Sw: any) => boolean;
	var _152: {
		name: string;
		_252: boolean;
		defaultValue: number;
		minValue: number;
		maxValue: number;
	}[];
}
declare function _J11(): void;
declare function _N42(): void;
declare namespace _N42 {
	var _V42: number;
	var _O42: {
		_P42: number;
		_g52: number;
		_S42: number;
		_L52: number;
		_O52: number;
		_R52: number;
		_W52: number;
		_P52: number;
		_H52: number;
		_N52: number;
		_k52: number;
		_452: number;
	};
	var _n62: (
		_db: any,
	) =>
		| "bitcrusher-processor"
		| "delay-processor"
		| "gain-processor"
		| "hpf2-processor"
		| "lpf2-processor"
		| "reverb1-processor"
		| "tremolo-processor"
		| "peak-eq-processor"
		| "hi-shelf-processor"
		| "lo-shelf-processor"
		| "compressor-processor";
}
declare function _q61(_db: any): void;
declare namespace _q61 {
	var _o62: (_db: any) => typeof _j52;
	var _r61: (_db: any, _el: any) => any;
	var _R42: {
		_052: number;
	};
	var _152: {
		name: string;
		_252: boolean;
		defaultValue: number;
		minValue: number;
		maxValue: number;
	}[];
}
declare class _X31 {
	constructor();
}
declare var _T31: {
	_U31: number;
	_W31: number;
	_Z31: number;
};
declare function _241(_121: any): void;
declare function _f21(): void;
declare namespace _f21 {
	var _D62: number;
	var _H62: number;
	var _E62: number;
	var _F62: boolean;
	var _G62: number;
	var _P62: number;
	var _I62: number;
	var _g21: (_j11: any) => number;
	var _l21: (_j11: any) => any;
	var _o21: (_j11: any) => number;
	var _Q62: (_041: any) => {
		gain: any;
		offset: any;
		pitch: any;
	};
	var _S62: (_m41: any) => {
		gain: any;
		pitch: any;
	};
	var _R62: (_p51: any) => {
		gain: any;
	};
}
declare function _T62(): void;
declare var _E52: any;
declare var _kk2: number,
	_lk2: number,
	_mk2: number,
	_nk2: number,
	_ok2: number,
	_pk2: number,
	_qk2: number,
	_rk2: number,
	_sk2: number,
	_tk2: number;
declare var _uk2: number, _vk2: number, _wk2: number, _xk2: number;
declare function _yk2(_db: any, _fe: any): void;
declare function _pQ1(_L71: any, _Y7: any): any;
declare var _Wk2: number, _Xk2: number, _Yk2: number;
declare var _Zk2: number, __k2: number, _0l2: number, _1l2: number;
declare var _2l2: number, _3l2: number;
declare var _4l2: {
	_bg1: number;
	_cg1: number;
	version: number;
};
declare function _5l2(_db: any, _fe: any): void;
declare function _El2(_Eg: any, _Fg: any, _mQ1: any): any;
declare var _7m2: number;
declare function _8m2(): void;
declare function _R11(_qm2: any): void;
declare function _pn2(): void;
declare function camera_create(): any;
declare function camera_create_view(
	_2p2: any,
	_3p2: any,
	_Q6: any,
	_R6: any,
	_V3: any,
	_dl: any,
	_4p2: any,
	_5p2: any,
	_6p2: any,
	_7p2: any,
): any;
declare function camera_destroy(_Nz: any): void;
declare function camera_apply(_Nz: any): void;
declare function camera_copy_transforms(_Nz: any, _Ie: any): void;
declare function camera_get_active(): any;
declare function camera_get_default(): any;
declare function camera_set_default(_Nz: any): void;
declare function camera_set_view_mat(_Nz: any, _Ie: any): void;
declare function camera_set_proj_mat(_Nz: any, _Ie: any): void;
declare function camera_set_view_target(_Nz: any, _Ie: any): void;
declare function camera_set_update_script(_Nz: any, _Ie: any): void;
declare function camera_set_begin_script(_Nz: any, _Ie: any): void;
declare function camera_set_end_script(_Nz: any, _Ie: any): void;
declare function _jp2(
	_Nz: any,
	_Ie: any,
	_hL: any,
	_xL: any,
	_yL: any,
	_KL: any,
	_LL: any,
	_kp2: any,
	_lp2: any,
	_mp2: any,
	_np2: any,
): void;
declare function camera_set_view_pos(_Nz: any, _Ie: any, _hL: any): void;
declare function camera_set_view_size(_Nz: any, _Ie: any, _hL: any): void;
declare function camera_set_view_speed(_Nz: any, _Ie: any, _hL: any): void;
declare function camera_set_view_border(_Nz: any, _Ie: any, _hL: any): void;
declare function camera_set_view_angle(_Nz: any, _Ie: any): void;
declare function camera_get_view_mat(_Nz: any): any;
declare function camera_get_proj_mat(_Nz: any): any;
declare function camera_get_view_target(_Nz: any): any;
declare function camera_get_update_script(_Nz: any): any;
declare function camera_get_begin_script(_Nz: any): any;
declare function camera_get_end_script(_Nz: any): any;
declare function camera_get_view_x(_Nz: any): any;
declare function camera_get_view_y(_Nz: any): any;
declare function camera_get_view_width(_Nz: any): any;
declare function camera_get_view_height(_Nz: any): any;
declare function camera_get_view_speed_x(_Nz: any): any;
declare function camera_get_view_speed_y(_Nz: any): any;
declare function camera_get_view_border_x(_Nz: any): any;
declare function camera_get_view_border_y(_Nz: any): any;
declare function camera_get_view_angle(_Nz: any): any;
declare var _op2: boolean,
	_9V: number,
	_cV: number,
	_pp2: number,
	_qp2: number,
	_rp2: number,
	_sp2: number,
	_tp2: number,
	_up2: number,
	_vp2: number,
	_wp2: number,
	_xp2: number,
	_yp2: number,
	_zp2: number,
	_Ap2: number,
	_Bp2: number[],
	_Cp2: number[],
	_Dp2: number[],
	_Ep2: number[],
	_Fp2: number[],
	_Gp2: number[],
	_Hp2: number[],
	_Ip2: number[],
	_Jp2: number[],
	_Kp2: number[],
	_Lp2: number,
	_Mp2: number;
declare function _Np2(): number;
declare function _aV(): void;
declare function _Pp2(): void;
declare function _Qp2(_cS: any, _R3: any, _S3: any, __a: any, _Eb: any): void;
declare function _Sp2(_cS: any, _R3: any, _S3: any, __a: any, _Eb: any): void;
declare function _Up2(_cS: any, _R3: any, _S3: any, __a: any, _Eb: any): void;
declare function _Vp2(_cS: any, _R3: any, _S3: any, __a: any, _Eb: any): void;
declare function _Xp2(_cS: any, _R3: any, _S3: any, __a: any, _Eb: any): void;
declare function _Yp2(_cS: any, _R3: any, _S3: any, __a: any, _Eb: any): void;
declare function _Zp2(_cS: any, _R3: any, _S3: any, __a: any, _Eb: any): void;
declare function _0q2(_cS: any, _R3: any, _S3: any, __a: any, _Eb: any): void;
declare function _2q2(_cS: any, _R3: any, _S3: any, __a: any, _Eb: any): void;
declare function _3q2(_cS: any, _R3: any, _S3: any, __a: any, _Eb: any): void;
declare function _4q2(_cS: any, _R3: any, _S3: any, __a: any, _Eb: any): void;
declare function _6q2(_cS: any, _R3: any, _S3: any, __a: any, _Eb: any): void;
declare function _bV(
	_cS: any,
	_Ea: any,
	_R3: any,
	_S3: any,
	__a: any,
	_Eb: any,
): void;
declare var _8q2: boolean, _Re1: boolean, _9q2: boolean;
declare function _aq2(_0W: any): void;
declare function _cq2(): void;
declare function _dq2(): void;
declare function _eq2(): void;
declare function _vq2(): void;
declare function _Eq2(): void;
declare function _3r2(): void;
declare function _8r2(): void;
declare function _er2(): void;
declare function _wx(_F1: any, _tx: any): number;
declare function _xx(_F1: any, _tx: any): any;
declare var _ev2: number;
declare var _fv2: number;
declare var _gv2: number;
declare var _hv2: number;
declare var _iv2: number;
declare var _jv2: number;
declare function _kv2(): void;
declare function _vv2(): void;
declare var _b5: number,
	_wv2: boolean,
	_xv2: boolean,
	_651: boolean,
	_yv2: number,
	_zv2: number,
	_Av2: number,
	_Bv2: number,
	_Cv2: number,
	_rD: number,
	_Dv2: number,
	_Ev2: number,
	_sD: number,
	_Fv2: number,
	_Gv2: number,
	_Hv2: number,
	_H11: number,
	_Iv2: number,
	_Jv2: number,
	_Kv2: number,
	_Lv2: number,
	_Mv2: number,
	_Nv2: number,
	_u11: number,
	_Ov2: number,
	_Pv2: number,
	_Qv2: number,
	_Rv2: number,
	_Sv2: number,
	_v11: number,
	_Tv2: number,
	_Uv2: number,
	_Vv2: number,
	_Wv2: number,
	_Xv2: number,
	_Yv2: number,
	_Zv2: number,
	__v2: number,
	_TZ: number,
	_UZ: number,
	_0w2: number,
	_1w2: number,
	_4Q: number,
	_2w2: number,
	_aG: number,
	_zl: number,
	_3w2: number,
	_4w2: number,
	_5w2: number,
	_TF: number,
	_VF: number,
	_gr2: number,
	_6w2: number,
	_E22: number,
	_gu2: number,
	_7w2: number,
	_Ax: number,
	_eu2: number,
	_iu2: number,
	_ku2: number,
	_mu2: number,
	_CF: number,
	_8w2: number,
	_SF: number,
	_9w2: number,
	_Cr2: number,
	_Ar2: number,
	_Er2: number,
	_kq2: number,
	_mq2: number,
	_As2: number,
	_Cs2: number,
	_Es2: number,
	_Gs2: number,
	_Is2: number,
	_Ks2: number,
	_p22: number,
	_Ns2: number,
	_Ps2: number,
	_jt2: number,
	_lt2: number,
	_nt2: number,
	_pt2: number,
	_rt2: number,
	_tt2: number,
	_vt2: number,
	_xt2: number,
	_zt2: number,
	_Bt2: number,
	_Dt2: number,
	_Ft2: number,
	_Ht2: number,
	_Jt2: number,
	_Lt2: number,
	_Nt2: number,
	_sq2: number,
	_Ss2: number,
	_Us2: number,
	_Ws2: number,
	_Ys2: number,
	__s2: number,
	_1t2: number,
	_3t2: number,
	_tq2: number,
	_6t2: number,
	_8t2: number,
	_at2: number,
	_ct2: number,
	_et2: number,
	_gt2: number,
	_it2: number,
	_e4: number,
	_L1: number,
	_Rt2: number,
	_Tt2: number,
	_Vt2: number,
	_Xt2: number,
	_0u2: number,
	_aw2: number,
	_bw2: number,
	_cw2: number,
	_dw2: number,
	_ew2: number,
	_fw2: number,
	_gw2: number,
	_hw2: number,
	_Zt2: number,
	_2u2: number,
	_4u2: number,
	_n51: number,
	_k61: number,
	_7u2: number,
	_9u2: number,
	_E31: number,
	_cu2: number,
	_Jq2: number,
	_Lq2: number,
	_Kq2: number,
	_Mq2: number,
	_Oq2: number,
	_Nq2: number,
	_Pq2: number,
	_Rq2: number,
	_Qq2: number,
	_0r2: number,
	_is2: number,
	_ks2: number,
	_1r2: number,
	_ns2: number,
	_ps2: number,
	_2r2: number,
	_ss2: number,
	_us2: number,
	_Sq2: number,
	_Tq2: number,
	_Uq2: number,
	_Vq2: number,
	_Wq2: number,
	_mr2: number,
	_nr2: number,
	_or2: number,
	_pr2: number,
	_qr2: number,
	_rr2: number,
	_sr2: number,
	_tr2: number,
	_ur2: number,
	_vr2: number,
	_wr2: number,
	_xr2: number,
	_pu2: number,
	_ru2: number,
	_tu2: number,
	_vu2: number,
	_xu2: number,
	_zu2: number,
	_Bu2: number,
	_Du2: number,
	_Fu2: number,
	_Hu2: number,
	_Ju2: number,
	_Lu2: number,
	_Nu2: number,
	_Pu2: number,
	_Ru2: number,
	_Tu2: number,
	_Vu2: number,
	_Xu2: number,
	_Zu2: number,
	_0v2: number,
	_2v2: number,
	_4v2: number,
	_6v2: number,
	_8v2: number,
	_av2: number,
	_cv2: number,
	_ir2: number,
	_jr2: number,
	_lr2: number,
	_yr2: number,
	_Fr2: number,
	_fu2: number,
	_Gr2: number,
	_Rx: number,
	_du2: number,
	_hu2: number,
	_ju2: number,
	_lu2: number,
	_kr2: number,
	_nu2: number,
	_dv2: number,
	_Qx: number,
	_kt2: number,
	_mt2: number,
	_ot2: number,
	_qt2: number,
	_st2: number,
	_ut2: number,
	_wt2: number,
	_yt2: number,
	_At2: number,
	_Ct2: number,
	_Et2: number,
	_Gt2: number,
	_It2: number,
	_Kt2: number,
	_Mt2: number,
	_Hr2: number,
	_Ir2: number,
	_Jr2: number,
	_Kr2: number,
	_Lr2: number,
	_Mr2: number,
	_Nr2: number,
	_Or2: number,
	_Pr2: number,
	_Qr2: number,
	_Rr2: number,
	_Sr2: number,
	_Tr2: number,
	_Ur2: number,
	_Vr2: number,
	_Wr2: number,
	_Xr2: number,
	_Yr2: number,
	_Zr2: number,
	__r2: number,
	_0s2: number,
	_1s2: number,
	_2s2: number,
	_3s2: number,
	_4s2: number,
	_5s2: number,
	_6s2: number,
	_7s2: number,
	_8s2: number,
	_9s2: number,
	_as2: number,
	_bs2: number,
	_cs2: number,
	_ds2: number,
	_es2: number,
	_fs2: number,
	_gs2: number,
	_hs2: number,
	_js2: number,
	_ls2: number,
	_ms2: number,
	_os2: number,
	_qs2: number,
	_rs2: number,
	_ts2: number,
	_vs2: number,
	_ws2: number,
	_ou2: number,
	_qu2: number,
	_su2: number,
	_uu2: number,
	_wu2: number,
	_yu2: number,
	_Au2: number,
	_Cu2: number,
	_Eu2: number,
	_Gu2: number,
	_Iu2: number,
	_Ku2: number,
	_Mu2: number,
	_Ou2: number,
	_Qu2: number,
	_Su2: number,
	_Uu2: number,
	_Wu2: number,
	_Yu2: number,
	__u2: number,
	_1v2: number,
	_3v2: number,
	_5v2: number,
	_7v2: number,
	_9v2: number,
	_bv2: number,
	_Br2: number,
	_zr2: number,
	_Dr2: number,
	_xs2: number,
	_ys2: number,
	_zs2: number,
	_Bs2: number,
	_Ds2: number,
	_Fs2: number,
	_Hs2: number,
	_Js2: number,
	_Ls2: number,
	_Ms2: number,
	_Os2: number,
	_Qs2: number,
	_Rs2: number,
	_Ts2: number,
	_Vs2: number,
	_Xs2: number,
	_Zs2: number,
	_0t2: number,
	_2t2: number,
	_4t2: number,
	_5t2: number,
	_7t2: number,
	_9t2: number,
	_bt2: number,
	_dt2: number,
	_ft2: number,
	_ht2: number,
	_Ot2: number,
	_Pt2: number,
	_Qt2: number,
	_St2: number,
	_Ut2: number,
	_Wt2: number,
	_iw2: number,
	_jw2: number,
	_Yt2: number,
	__t2: number,
	_1u2: number,
	_3u2: number,
	_5u2: number,
	_6u2: number,
	_8u2: number,
	_au2: number,
	_bu2: number,
	_kw2: number,
	_lw2: number,
	_mw2: number,
	_nw2: number,
	_ow2: number,
	_pw2: number,
	_qw2: number,
	_rw2: number,
	_sw2: number,
	_tw2: number,
	_uw2: number,
	_vw2: number,
	_ww2: number,
	_xw2: number,
	_yw2: number,
	_zw2: number,
	_Aw2: number,
	_Bw2: number,
	_Cw2: number,
	_Dw2: number,
	_Ew2: number,
	_Fw2: number,
	_Gw2: number,
	_Hw2: number,
	_Iw2: number,
	_Jw2: number,
	_Kw2: number,
	_Lw2: number,
	_Mw2: number,
	_Nw2: number,
	_Ow2: number,
	_Pw2: number,
	_Qw2: number,
	_Rw2: number,
	_Sw2: number,
	_Tw2: number,
	_Uw2: number,
	_Vw2: number,
	_Ww2: number,
	_Xw2: number,
	_Yw2: number,
	_Zw2: number,
	__w2: number,
	_0x2: number,
	_1x2: number,
	_2x2: number,
	_3x2: number,
	_4x2: number,
	_5x2: number,
	_6x2: number,
	_7x2: number,
	_8x2: number,
	_9x2: number,
	_ax2: number,
	_bx2: number,
	_cx2: number,
	_dx2: number,
	_ex2: number,
	_fx2: number,
	_gx2: number,
	_hx2: number,
	_ix2: number,
	_jx2: number,
	_kx2: number,
	_lx2: number,
	_mx2: number,
	_nx2: number,
	_ox2: number,
	_px2: number,
	_qx2: number,
	_rx2: number,
	_sx2: number,
	_tx2: number,
	_ux2: number,
	_vx2: number,
	_wx2: number,
	_xx2: number,
	_yx2: number,
	_zx2: number,
	_Ax2: number,
	_Bx2: number,
	_Cx2: number,
	_Dx2: number,
	_Ex2: number,
	_Fx2: number,
	_Gx2: number,
	_Hx2: number,
	_Ix2: number,
	_Jx2: number,
	_Kx2: number,
	_Lx2: number,
	_Mx2: number,
	_Nx2: number,
	_Ox2: number,
	_Px2: number,
	_Qx2: number,
	_Rx2: number,
	_Sx2: number,
	_Tx2: number,
	_Ux2: number,
	_Vx2: number,
	_Wx2: number,
	_Xx2: number,
	_Yx2: number,
	_Zx2: number,
	__x2: number,
	_0y2: number,
	_1y2: number,
	_2y2: number,
	_3y2: number,
	_4y2: number,
	_5y2: number,
	_6y2: number,
	_7y2: number,
	_8y2: number,
	_9y2: number,
	_ay2: number,
	_by2: number,
	_cy2: number,
	_dy2: number,
	_ey2: number,
	_fy2: number,
	_gy2: number,
	_hy2: number,
	_iy2: number,
	_jy2: number,
	_ky2: number,
	_ly2: number,
	_my2: number,
	_ny2: number,
	_oy2: number,
	_py2: number,
	_qy2: number,
	_ry2: number,
	_sy2: number,
	_ty2: number,
	_uy2: number,
	_vy2: number,
	_wy2: number,
	_xy2: number,
	_yy2: number,
	_zy2: number,
	_Ay2: number,
	_By2: number,
	_Cy2: number,
	_Dy2: number,
	_Ey2: number,
	_Fy2: number,
	_Gy2: number,
	_Hy2: number,
	_Iy2: number,
	_Jy2: number,
	_Ky2: number,
	_Ly2: number,
	_My2: number,
	_Ny2: number,
	_Oy2: number,
	_Py2: number,
	_Qy2: number,
	_Ry2: number,
	_Sy2: number,
	_Ty2: number,
	_Uy2: number,
	_Vy2: number,
	_Wy2: number,
	_Xy2: number,
	_Yy2: number,
	_Zy2: number,
	__y2: number,
	_0z2: number,
	_1z2: number,
	_2z2: number,
	_3z2: number,
	_4z2: number,
	_5z2: number,
	_6z2: number,
	_7z2: number,
	_8z2: number,
	_9z2: number,
	_az2: number,
	_bz2: number,
	_cz2: number,
	_dz2: number,
	_ez2: number,
	_fz2: number,
	_gz2: number,
	_hz2: number,
	_iz2: number,
	_jz2: number,
	_kz2: number,
	_lz2: number,
	_mz2: number,
	_nz2: number,
	_oz2: number,
	_pz2: number,
	_qz2: number,
	_rz2: number,
	_sz2: number,
	_tz2: number,
	_uz2: number,
	_vz2: number,
	_wz2: number,
	_xz2: number,
	_yz2: number,
	_zz2: number,
	_Az2: number,
	_Bz2: number,
	_Cz2: number,
	_Dz2: number,
	_Ez2: number,
	_Fz2: number,
	_Gz2: number,
	_Hz2: number,
	_Iz2: number,
	_Jz2: number,
	_Kz2: number,
	_Lz2: number,
	_Mz2: number,
	_Nz2: number,
	_Oz2: number,
	_Pz2: number,
	_Qz2: number,
	_Rz2: number,
	_Sz2: number,
	_Tz2: number,
	_Uz2: number,
	_Vz2: number,
	_Wz2: number,
	_Xz2: number,
	_Yz2: number,
	_Zz2: number,
	__z2: number,
	_0A2: number,
	_1A2: number,
	_2A2: number,
	_3A2: number,
	_4A2: number,
	_5A2: number,
	_6A2: number,
	_7A2: number,
	_8A2: number,
	_9A2: number,
	_aA2: number,
	_bA2: number,
	_cA2: number,
	_dA2: number,
	_eA2: number,
	_fA2: number,
	_gA2: number,
	_hA2: number,
	_iA2: number,
	_jA2: number,
	_kA2: number,
	_lA2: number,
	_mA2: number,
	_nA2: number,
	_oA2: number,
	_pA2: number,
	_qA2: number,
	_rA2: number,
	_sA2: number,
	_tA2: number,
	_uA2: number,
	_vA2: number,
	_wA2: number,
	_xA2: number,
	_yA2: number,
	_zA2: number,
	_AA2: number,
	_BA2: number,
	_CA2: number,
	_DA2: number,
	_EA2: number,
	_FA2: number,
	_GA2: number,
	_HA2: number,
	_IA2: number,
	_JA2: number,
	_KA2: number,
	_LA2: number,
	_MA2: number,
	_NA2: number,
	_OA2: number,
	_PA2: number,
	_QA2: number,
	_RA2: number,
	_SA2: number,
	_TA2: number,
	_UA2: number,
	_VA2: number,
	_WA2: number,
	_XA2: number,
	_YA2: number,
	_ZA2: number,
	__A2: number,
	_0B2: number,
	_1B2: number,
	_2B2: number,
	_3B2: number,
	_4B2: number,
	_5B2: any[],
	_fr2: number,
	_6B2: number,
	_7B2: number,
	_8B2: number,
	_cx: number,
	_pB: number,
	_9B2: number,
	_aB2: number,
	_bB2: number,
	_cB2: number,
	_dB2: number,
	_eB2: number,
	_fB2: number,
	_gB2: number,
	_AY1: number,
	_hB2: number,
	_iB2: number,
	_BY1: number,
	_jB2: number,
	_kB2: number,
	_lB2: number,
	_mB2: number,
	_vk: number,
	_nB2: number,
	_oB2: number,
	_pB2: number,
	_qB2: number,
	_rB2: number,
	_x61: number,
	_g11: number,
	_1b1: number,
	_IP1: number,
	_JP1: number,
	_KP1: number,
	_LP1: number,
	_MP1: number,
	_Uj: number,
	_NP1: number,
	_OP1: number,
	_Ra1: number,
	_Sa1: number,
	_Ta1: number,
	_Ua1: number,
	_Va1: number,
	_Wa1: number,
	_Xa1: number,
	global: any,
	_J1: any,
	_Ru: any,
	_qe: any,
	_Hz: any,
	g_pBuiltIn: any,
	_mt: any,
	_sB2: any,
	_Lz: any,
	_Rt: any,
	_Ij: any,
	_34: any,
	_tB2: any,
	_Tl: any,
	_OM: any,
	_9a1: any,
	_T32: any,
	_Iz: any,
	_Gx: any,
	_jj: any,
	_Kz: any,
	_Lb1: any,
	_Bd: any,
	_uB2: any,
	_U1: any,
	_vB2: any,
	_3e: any,
	_wB2: any,
	_xB2: any,
	_gS: any,
	_aS: any,
	_Kg: any,
	__i: any,
	_JD: any,
	_Yh: any,
	_dj: any,
	_Mh: any,
	_D5: any,
	_cj: any,
	_Vj: any,
	_yB2: any,
	_ze1: any,
	_ex: any,
	_gx: any,
	_zB2: any,
	_Wx: any,
	_Xx: any,
	_b7: any,
	_fv: any,
	_7e: any,
	_iC: any,
	_SC: any,
	_AB2: any,
	_BB2: any,
	_CB2: any,
	_DB2: any,
	_EB2: any,
	_Wo2: any,
	_ya1: any,
	_FB2: any,
	_V91: any,
	_Q91: number,
	_R91: any[],
	g_gmlConst: any,
	_N11: any;
declare function _iC2(): void;
declare function _jC2(): void;
declare function _mC2(_yQ1: any): number;
declare function _oC2(): void;
declare function _wC2(_xC2: any): number;
declare function _yC2(_R3: any, _S3: any): number;
declare function _fN(_R3: any): number;
declare function _LA(_Eb: any): string;
declare function _5k(_Eb: any, _Y7: any): string;
declare function _zC2(_xC2: any): number;
declare function _Oa(_Eb: any): number;
declare function _6x(_AC2: any): void;
declare function _yl(_wl: any, _Uh: any, _xl: any, _zW: any): any;
declare function _eE(_wl: any, _Uh: any, _xl: any, _zW: any): any;
declare function _FC2(): void;
declare var _tD: any;
declare function _pC2(): void;
declare function _PC2(): void;
declare var _QC2: number;
declare var _U41: number;
declare var _RC2: number;
declare var _SC2: number;
declare var _TC2: any;
declare var _UC2: any;
declare var _VC2: number, _WC2: number, _XC2: number, _YC2: number;
declare function _ZC2(): void;
declare function _hD2(
	_s91: any,
):
	| "MEDIA_ERR_ABORTED"
	| "MEDIA_ERR_NETWORK"
	| "MEDIA_ERR_DECODE"
	| "MEDIA_ERR_SRC_NOT_SUPPORTED"
	| "Unknown Error";
declare function _iD2(
	_s91: any,
):
	| "Unknown Error"
	| "NETWORK_EMPTY"
	| "NETWORK_IDLE"
	| "NETWORK_LOADING"
	| "NETWORK_NO_SOURCE";
declare function _jD2(_F1: any): void;
declare function _kD2(_F1: any): void;
declare function _lD2(_F1: any): void;
declare function _mD2(_F1: any): void;
declare function ClearEventListeners(_nD2: any): void;
declare function _oD2(_F1: any): void;
declare function _pD2(_F1: any): void;
declare function _qD2(_F1: any): void;
declare function _rD2(_F1: any): void;
declare function _sD2(_F1: any): void;
declare function _uD2(_Ji: any): any;
declare function _wD2(_1D: any): void;
declare function _xD2(_yD2: any): void;
declare function _BD2(_yD2: any): void;
declare function _CD2(_Ji: any): void;
declare function _FD2(_Ji: any): void;
declare var _Mw: any;
declare function _HD2(self: any, other: any, _ID2: any): any;
declare var _JD2: any[];
declare function _KD2(_yD2: any): void;
declare function _OD2(): void;
declare function _QD2(_RD2: any, _Ov: any): void;
declare function _YD2(): void;
declare function _ZD2(_yD2: any): void;
declare function _vC2(): any;
declare function __D2(): string;
declare function _mv(_gv: any): any;
declare var _cq: number;
declare var _gq: number;
declare var _kq: number;
declare var _oq: number;
declare var _dq: number;
declare var _Gp: number;
declare var _lq: number;
declare var _pq: number;
declare var _eq: number;
declare var _hq: number;
declare var _mq: number;
declare var _qq: number;
declare var _fq: number;
declare var _iq: number;
declare var _nq: number;
declare var _rq: number;
declare var _nE2: number;
declare var _oE2: number;
declare var _pE2: number;
declare var _qE2: number;
declare var _rE2: number;
declare var _sE2: number;
declare var _tE2: number;
declare var _uE2: number;
declare var _vE2: number;
declare var _wE2: number;
declare var _xE2: number;
declare var _yE2: number;
declare var _zE2: number;
declare var _AE2: number;
declare var _BE2: number;
declare var _CE2: number;
declare function _Qo(_xp: any): void;
declare function _mv2(): void;
declare function __j(): void;
declare function _V71(): void;
declare function _8E2(_L71: any): void;
declare function _mF2(): void;
declare function _oF2(): void;
declare function _pF2(): void;
declare function _qF2(): void;
declare function _rF2(): void;
declare function _wF2(): void;
declare function _zF2(): void;
declare function game_save(name: any): void;
declare function game_load(name: any): void;
declare function game_save_buffer(buffer: any): void;
declare function game_load_buffer(buffer: any): void;
declare function os_set_orientation_lock(): void;
declare function screen_save(_7y: any): void;
declare function screen_save_part(
	_7y: any,
	x: any,
	y: any,
	w: any,
	h: any,
): void;
declare function display_reset(_AF2: any): void;
declare function display_mouse_set(x: any, y: any): void;
declare var _BF2: any[];
declare var _CF2: boolean;
declare var _DF2: boolean;
declare function _EF2(): void;
declare function clipboard_has_text(): boolean;
declare function clipboard_get_text(): string;
declare function clipboard_set_text(_ej: any): void;
declare function keyboard_get_numlock(): void;
declare function keyboard_set_numlock(on: any): void;
declare function sprite_save_strip(_O7: any, _7y: any): void;
declare function get_open_filename(filter: any, _7y: any): void;
declare function get_save_filename(filter: any, _7y: any): void;
declare function get_open_filename_ext(
	filter: any,
	_7y: any,
	dir: any,
	title: any,
): void;
declare function get_save_filename_ext(
	filter: any,
	_7y: any,
	dir: any,
	title: any,
): void;
declare function _HF2(_ej: any): void;
declare function _IF2(_JF2: any): void;
declare function _KF2(_JF2: any, _LF2: any): void;
declare function texture_get_width(_JF2: any): void;
declare function texture_get_height(_JF2: any): void;
declare function _MF2(_0H: any): void;
declare function _NF2(repeat: any): void;
declare function _OF2(): void;
declare function _PF2(repeat: any): void;
declare function _QF2(_tr: any, _kr: any): void;
declare function texture_get_uvs(_S6: any): void;
declare function texture_global_scale(_RF2: any): void;
declare function _SF2(): void;
declare function _TF2(): void;
declare function _UF2(): number;
declare function _VF2(): number;
declare function zip_unzip(): void;
declare function zip_create(): void;
declare function zip_add_file(): void;
declare function zip_save(): void;
declare function game_change(): void;
declare function winphone_license_trial_version(): void;
declare function winphone_tile_title(): void;
declare function winphone_tile_count(): void;
declare function winphone_tile_back_title(): void;
declare function winphone_tile_back_content(): void;
declare function winphone_tile_back_content_wide(): void;
declare function winphone_tile_front_image(): void;
declare function winphone_tile_front_image_small(): void;
declare function winphone_tile_front_image_wide(): void;
declare function winphone_tile_back_image(): void;
declare function winphone_tile_back_image_wide(): void;
declare function winphone_tile_background_colour(): void;
declare function winphone_tile_background_color(): void;
declare function winphone_tile_icon_image(): void;
declare function winphone_tile_small_icon_image(): void;
declare function winphone_tile_wide_content(): void;
declare function winphone_tile_cycle_images(): void;
declare function winphone_tile_small_background_image(): void;
declare function push_local_notification(): void;
declare function push_get_first_local_notification(): number;
declare function push_get_next_local_notification(): number;
declare function push_cancel_local_notification(): number;
declare function push_get_application_badge_number(): number;
declare function push_set_application_badge_number(): number;
declare function surface_set_target_ext(): number;
declare function surface_get_target_ext(): number;
declare function audio_emitter_velocity(): void;
declare function audio_emitter_get_vx(): number;
declare function audio_emitter_get_vy(): number;
declare function audio_emitter_get_vz(): number;
declare function audio_set_listener_mask(): void;
declare function audio_sound_set_listener_mask(): void;
declare function audio_emitter_set_listener_mask(): void;
declare function audio_destroy_sync_group(): number;
declare function audio_create_sync_group(): number;
declare function audio_play_in_sync_group(): void;
declare function audio_start_sync_group(): void;
declare function audio_pause_sync_group(): void;
declare function audio_resume_sync_group(): void;
declare function audio_stop_sync_group(): void;
declare function audio_sync_group_get_track_pos(): number;
declare function audio_sync_group_is_playing(): number;
declare function audio_sync_group_is_paused(): number;
declare function audio_sync_group_debug(): void;
declare function _WF2(): void;
declare function _XF2(): void;
declare function _YF2(): number;
declare function _ZF2(): void;
declare function win8_livetile_tile_notification(): number;
declare function win8_livetile_tile_clear(): number;
declare function win8_livetile_badge_notification(): number;
declare function win8_livetile_badge_clear(): number;
declare function win8_livetile_queue_enable(): number;
declare function win8_secondarytile_pin(): number;
declare function win8_secondarytile_badge_notification(): number;
declare function win8_secondarytile_delete(): number;
declare function win8_settingscharm_add_xaml_entry(): void;
declare function win8_settingscharm_set_xaml_property(): void;
declare function win8_settingscharm_get_xaml_property(): void;
declare function win8_livetile_notification_begin(): number;
declare function win8_livetile_notification_secondary_begin(): number;
declare function win8_livetile_notification_expiry(): number;
declare function win8_livetile_notification_tag(): number;
declare function win8_livetile_notification_text_add(): number;
declare function win8_livetile_notification_image_add(): number;
declare function win8_livetile_notification_end(): number;
declare function win8_appbar_enable(): number;
declare function win8_appbar_add_element(): number;
declare function win8_appbar_remove_element(): number;
declare function win8_settingscharm_add_entry(): number;
declare function win8_settingscharm_add_html_entry(): number;
declare function win8_settingscharm_remove_entry(): number;
declare function win8_share_image(): number;
declare function win8_share_screenshot(): number;
declare function win8_share_file(): number;
declare function win8_share_url(): number;
declare function win8_share_text(): number;
declare function win8_search_enable(): number;
declare function win8_search_disable(): number;
declare function win8_search_add_suggestions(): number;
declare function win8_device_touchscreen_available(): number;
declare function win8_license_initialize_sandbox(): number;
declare function win8_license_trial_version(): number;
declare function uwp_livetile_tile_clear(): number;
declare function uwp_livetile_badge_notification(): number;
declare function uwp_livetile_badge_clear(): number;
declare function uwp_livetile_queue_enable(): number;
declare function uwp_secondarytile_pin(): number;
declare function uwp_secondarytile_badge_notification(): number;
declare function uwp_secondarytile_delete(): number;
declare function uwp_secondarytile_tile_clear(): number;
declare function uwp_secondarytile_badge_clear(): number;
declare function uwp_livetile_notification_begin(): number;
declare function uwp_livetile_notification_secondary_begin(): number;
declare function uwp_livetile_notification_expiry(): number;
declare function uwp_livetile_notification_tag(): number;
declare function uwp_livetile_notification_text_add(): number;
declare function uwp_livetile_notification_image_add(): number;
declare function uwp_livetile_notification_end(): number;
declare function uwp_livetile_notification_template_add(): number;
declare function uwp_appbar_enable(): number;
declare function uwp_appbar_add_element(): number;
declare function uwp_appbar_remove_element(): number;
declare function uwp_device_touchscreen_available(): number;
declare function external_define(): number;
declare function external_call(): number;
declare function external_free(): number;
declare function _3p(__F2: any, _0G2: any, _1G2: any): void;
declare function _NV(_aG2: any): void;
declare function _Ej(_eG2: any): void;
declare var _mG2: any[];
declare function _wj(_eG2: any): void;
declare function _Cj(_eG2: any): void;
declare function _MG2(
	_hF: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_Y7: any,
): any;
declare function _cD2(): void;
declare function _Bz(_92: any): boolean;
declare function _Cz(_92: any): any;
declare var _jH2: number,
	_kH2: number,
	_x71: number,
	_Rk: number,
	_U61: number,
	_fD: number,
	_tu: number,
	_lH2: number,
	_UQ: number,
	_561: number,
	_Dd: number,
	_d31: number,
	_mH2: number,
	_nu: number,
	_ru: number,
	_3D: number,
	_nH2: number,
	_2D: number;
declare var _oH2: any[];
declare var _pH2: any[];
declare function _qH2(_Uh: any, _mQ1: any): void;
declare function _mu(_Uh: any): any;
declare function _rH2(): void;
declare function _Pk(_F1: any): void;
declare function _Qk(_F1: any): void;
declare function _eD2(): void;
declare function _Zj(): void;
declare function _FH2(_eG2: any): any;
declare function _IH2(_eG2: any): void;
declare function _7D2(): void;
declare var _MH2: number,
	_NH2: number,
	_OH2: number,
	_PH2: number,
	_QH2: number;
declare var _YQ: number, _oh: number, _RH2: number, _b61: number, _SH2: number;
declare var _TH2: number,
	_PD: number,
	_UH2: number,
	_c61: number,
	_J51: number,
	_ph: number,
	_yh: number,
	_VH2: number,
	_w42: number,
	_WH2: number,
	_XH2: number,
	_YH2: number,
	_ZH2: number,
	__H2: number;
declare var _xh: number, _0I2: number, _a61: number;
declare function _1I2(
	data: any,
	_2I2: any,
	_yQ1: any,
	_3I2: any,
	_4I2: any,
	_5I2: any,
): any;
declare function _cI2(input: any, length: any): string;
declare function _8Q1(__a: any): number;
declare function _iI2(__a: any, _db: any, _jI2: any, _kI2: any): void;
declare function _zI2(_db: any): 2 | 1 | -1 | 4 | 8;
declare function _0y(_5u: any): string;
declare function _HI2(_db: any): number;
declare function _JI2(): void;
declare function _NI2(): any;
declare var _PI2: Uint32Array;
declare function _QI2(x: any, y: any, z: any): number;
declare function _RI2(x: any, y: any, z: any): number;
declare function _SI2(x: any, y: any, z: any): number;
declare function _TI2(x: any, y: any, z: any): number;
declare var _UI2: Uint32Array;
declare function _VI2(x: any, _U4: any): number;
declare var _WI2: Uint32Array;
declare function _XI2(
	_I2: any,
	_H2: any,
	c: any,
	_Em: any,
	x: any,
	_Hf: any,
	_Te: any,
): number;
declare function _YI2(
	_I2: any,
	_H2: any,
	c: any,
	_Em: any,
	x: any,
	_Hf: any,
	_Te: any,
): number;
declare function _ZI2(
	_I2: any,
	_H2: any,
	c: any,
	_Em: any,
	x: any,
	_Hf: any,
	_Te: any,
): number;
declare function __I2(
	_I2: any,
	_H2: any,
	c: any,
	_Em: any,
	x: any,
	_Hf: any,
	_Te: any,
): number;
declare function _t_1(_0J2: any, _1J2: any): void;
declare function _iJ2(_jJ2: any, _kJ2: any, _4c: any, _lJ2: any): void;
declare var _nJ2: Uint8Array;
declare function _oJ2(_jJ2: any): void;
declare function _qJ2(_rJ2: any, __a: any, _4c: any): any;
declare function _uJ2(): any[];
declare var _wJ2: any[];
declare function _xJ2(_H2: any, _gi: any, _hg: any): number;
declare function buffer_seek(buffer: any, _5K2: any, offset: any): any;
declare function buffer_read(buffer: any, type: any): any;
declare function buffer_peek(buffer: any, offset: any, type: any): any;
declare function buffer_poke(
	buffer: any,
	offset: any,
	type: any,
	value: any,
): any;
declare function buffer_create_from_vertex_buffer(
	_6K2: any,
	_db: any,
	_jI2: any,
): any;
declare function buffer_create_from_vertex_buffer_ext(
	_6K2: any,
	_db: any,
	_jI2: any,
	_cK2: any,
	_RQ1: any,
): any;
declare function buffer_copy_from_vertex_buffer(
	_6K2: any,
	_cK2: any,
	_RQ1: any,
	_dK2: any,
	_eK2: any,
): any;
declare function buffer_create(__a: any, _db: any, _jI2: any): any;
declare function _gK2(_hK2: any): any;
declare function buffer_exists(_l01: any): 0 | 1;
declare function buffer_write(_92: any, _db: any, _vj: any): any;
declare function buffer_tell(_92: any): any;
declare function _iK2(
	_jK2: any,
	_kK2: any,
	_lK2: any,
	_mK2: any,
	_nK2: any,
	_oK2: any,
	_pK2: any,
	_3P1: any,
	_qK2: any,
): 0 | 1;
declare function buffer_copy(
	_wK2: any,
	_xK2: any,
	size: any,
	_yK2: any,
	_zK2: any,
): number;
declare function _DK2(index: any, size: any): number;
declare function buffer_copy_stride(
	_EK2: any,
	_mK2: any,
	_nK2: any,
	_FK2: any,
	_GK2: any,
	_HK2: any,
	_oK2: any,
	_IK2: any,
): void;
declare function buffer_get_type(_92: any): any;
declare function buffer_get_alignment(_92: any): any;
declare function buffer_get_size(_92: any): any;
declare function buffer_resize(_92: any, _UK2: any): any;
declare function buffer_sizeof(_db: any): number;
declare function buffer_fill(
	buffer: any,
	offset: any,
	type: any,
	value: any,
	size: any,
): any;
declare function buffer_md5(buffer: any, offset: any, size: any): any;
declare function buffer_crc32(buffer: any, offset: any, size: any): any;
declare function buffer_sha1(buffer: any, offset: any, size: any): any;
declare function buffer_base64_encode(buffer: any, offset: any, size: any): any;
declare function _VK2(c: any): boolean;
declare function _XK2(_YK2: any): number;
declare function buffer_base64_decode(_YK2: any): any;
declare function buffer_compress(_4L2: any, _4c: any, __a: any): any;
declare function buffer_decompress(_C51: any): any;
declare function buffer_base64_decode_ext(
	buffer: any,
	_YK2: any,
	offset: any,
): number;
declare function buffer_save(buffer: any, filename: any): any;
declare function buffer_delete(_92: any): number;
declare function buffer_async_group_begin(): void;
declare function buffer_async_group_option(): void;
declare function buffer_async_group_end(): number;
declare var _6L2: number;
declare function buffer_load_async(_Oi: any, _gv: any, _4c: any, __a: any): any;
declare function buffer_load(_gv: any): any;
declare function buffer_save_ext(
	buffer: any,
	filename: any,
	offset: any,
	size: any,
): any;
declare function buffer_save_async(
	buffer: any,
	filename: any,
	offset: any,
	size: any,
): any;
declare function buffer_load_ext(buffer: any, filename: any, offset: any): void;
declare function buffer_load_partial(
	buffer: any,
	filename: any,
	_xK2: any,
	_hg: any,
	_dL2: any,
): number;
declare function buffer_get_address(_92: any): any;
declare function buffer_get_surface(_Oi: any, _eL2: any, _4c: any): boolean;
declare function buffer_set_used_size(_92: any, __a: any): boolean;
declare function buffer_set_surface(_Oi: any, _eL2: any, _4c: any): boolean;
declare var _7K2: any[];
declare var vertex_create_buffer: any,
	vertex_create_buffer_ext: any,
	vertex_delete_buffer: any,
	vertex_begin: any,
	vertex_end: any,
	vertex_position: any,
	vertex_position_3d: any,
	vertex_colour: any,
	vertex_color: any,
	_iL2: any,
	vertex_argb: any,
	vertex_texcoord: any,
	vertex_normal: any,
	vertex_float1: any,
	vertex_float2: any,
	vertex_float3: any,
	vertex_float4: any,
	vertex_ubyte4: any,
	vertex_freeze: any,
	vertex_submit: any,
	vertex_submit_ext: any,
	vertex_get_number: any,
	vertex_get_buffer_size: any,
	vertex_create_buffer_from_buffer: any,
	vertex_create_buffer_from_buffer_ext: any,
	vertex_update_buffer_from_buffer: any,
	vertex_update_buffer_from_vertex: any,
	draw_flush: any;
declare var _jL2: number;
declare function _kL2(): void;
declare function _oL2(_Oi: any, _T51: any, _mK2: any, _ML2: any): any;
declare function _nL2(_Oi: any, _T51: any): any;
declare function _PL2(_OL2: any, _QL2: any, _RL2: any): boolean;
declare function _pL2(
	_ZL2: any,
	_oK2: any,
	_EK2: any,
	_mK2: any,
	_nK2: any,
): void;
declare function _qL2(
	_ZL2: any,
	_2M2: any,
	_3M2: any,
	_4M2: any,
	_5M2: any,
): void;
declare function _lL2(): any;
declare function _mL2(__a: any): number;
declare function _rL2(_Oi: any): void;
declare function _sL2(_Oi: any, _T51: any): void;
declare function _tL2(_Oi: any): void;
declare function _uL2(_Oi: any, x: any, y: any): void;
declare function _vL2(_Oi: any, x: any, y: any, z: any): void;
declare function _wL2(_Oi: any, _N2: any, alpha: any): void;
declare function _xL2(_Oi: any, _Jb: any): void;
declare function _yL2(_Oi: any, _Lb: any): void;
declare function _zL2(_Oi: any, _n3: any, _o3: any): void;
declare function _AL2(_Oi: any, x: any, y: any, z: any): void;
declare function _BL2(_Oi: any, x: any): void;
declare function _CL2(_Oi: any, x: any, y: any): void;
declare function _DL2(_Oi: any, x: any, y: any, z: any): void;
declare function _EL2(_Oi: any, x: any, y: any, z: any, w: any): void;
declare function _FL2(_Oi: any, x: any, y: any, z: any, w: any): void;
declare function _GL2(_Oi: any): 0 | -1;
declare function _LL2(): void;
declare function _HL2(_Oi: any, _2c: any, _3c: any): void;
declare function _IL2(_Oi: any, _2c: any, _3c: any, _4c: any, _5c: any): void;
declare function _JL2(_Oi: any): any;
declare function _KL2(_Oi: any): any;
declare function __C2(): void;
declare var _SN2: string,
	_TN2: string,
	_UN2: string,
	_VN2: string,
	_WN2: string,
	_XN2: string;
declare var _XM: string;
declare var _YN2: string;
declare var _ZN2: string;
declare var __N2: string;
declare var _0O2: string;
declare var _1O2: string;
declare var _2O2: string;
declare var _3O2: string;
declare var _4O2: number, _5O2: number, _YM: number;
declare var _6O2: number,
	_8L: number,
	_7O2: number,
	_2N: number,
	_aL: number,
	_8O2: number;
declare var _9O2: number;
declare function _aO2(): number;
declare function _bO2(): void;
declare function _iO2(_eG2: any): void;
declare function _qO2(_rO2: any, _sO2: any, _tO2: any): void;
declare function _gP2(_hP2: any): void;
declare function _iP2(_jP2: any, _tO2: any, _kP2: any): void;
declare function _zP2(): void;
declare function _fD2(): void;
declare function _eQ2(): void;
declare function _Iw(): void;
declare function _VQ2(_Q51: any, _FQ2: any): any;
declare var _CR2: number,
	_DR2: number,
	_ER2: number,
	_FR2: number,
	_GR2: number;
declare function _9D2(): void;
declare function _xS2(_ej: any, _tw: any, _yS2: any): any;
declare var _vT2: any;
declare var _53: any;
declare var _wT2: any;
declare var _wa1: number;
declare var _xa1: number;
declare var __d1: number;
declare var _0e1: number;
declare var _vA: number;
declare var _wA: number;
declare var _xA: number;
declare var _yA: number;
declare var _CC: number;
declare var _DC: number;
declare var _AC: number;
declare var _BC: number;
declare var _Vo2: any[];
declare var _xT2: number;
declare var _e8: number;
declare var _mk: any;
declare var _qk: any;
declare var _qa1: any;
declare var _yT2: any;
declare var _kR2: any;
declare var _rA: any;
declare var _iR2: any;
declare var _zT2: any;
declare var _uk: any;
declare var _AT2: any;
declare var _BT2: any;
declare var _zA: any;
declare var _sA: any;
declare var _CT2: any;
declare var _Ak: any;
declare var _DT2: any;
declare var _ET2: any;
declare var _FT2: any;
declare var _oT2: any;
declare var _GT2: boolean;
declare function _HT2(): number;
declare function _IT2(): number;
declare function _d71(_JT2: any): void;
declare function _QT2(_JT2: any, _Xo: any): void;
declare function _6a1(_JT2: any): void;
declare function _RT2(_ar: any): void;
declare function _1D2(_DM1: any): void;
declare var _dU2: any[];
declare var _eU2: number;
declare function _3U2(): void;
declare function _4U2(): void;
declare function _q71(_L71: any): void;
declare function _4E2(_jU2: any): void;
declare function _kU2(): void;
declare function _jR2(
	_3c: any,
	_mU2: any,
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
	_Na: any,
): any;
declare function _f8(_L71: any, _Na: any): any;
declare function _GH2(_92: any): any;
declare function _ZT2(): void;
declare function __T2(_Eb: any): void;
declare function _WT2(_VN1: any, _WN1: any, _XN1: any, _YN1: any): void;
declare function _sU2(_R3: any, _S3: any, _Eg: any, _Fg: any, _V3: any): void;
declare function _0U2(_R3: any, _S3: any, _X2: any, _Y2: any, _V3: any): void;
declare function _1U2(_xp: any): void;
declare function _YT2(_tU2: any, _uU2: any, _vU2: any, _wU2: any): void;
declare function _XT2(
	_xU2: any,
	_yU2: any,
	_zU2: any,
	_AU2: any,
	_V3: any,
): void;
declare function _a7(_d2: any): any;
declare function _BU2(_Q6: any, _R6: any): any;
declare function _CU2(_CP1: any): any;
declare function _DU2(
	_3c: any,
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
	_DM1: any,
): void;
declare function _ik(_EU2: any): any;
declare function _6U2(): void;
declare function _7U2(): void;
declare function _gk(_L71: any): any;
declare function _N71(_L71: any): any[];
declare function _ST2(_L71: any, _R3: any, _S3: any, _Y7: any): void;
declare function _9U2(_L71: any, _R3: any, _S3: any, _Y7: any): void;
declare function _TT2(_L71: any, _R3: any, _S3: any, _Y7: any): void;
declare function _aU2(_L71: any, _R3: any, _S3: any, _Y7: any): void;
declare function _KU2(_DM1: any): boolean;
declare function _UT2(
	_L71: any,
	_R3: any,
	_S3: any,
	_LU2: any,
	_MU2: any,
	_NU2: any,
	_OU2: any,
	_Eb: any,
	_Y7: any,
): void;
declare function _VT2(
	_L71: any,
	_h71: any,
	_i71: any,
	_R3: any,
	_S3: any,
	_LU2: any,
	_MU2: any,
	_Z2: any,
	_8k: any,
	_9k: any,
	_XA: any,
	_YA: any,
	_Y7: any,
): void;
declare function _bU2(
	_L71: any,
	_h71: any,
	_i71: any,
	_R3: any,
	_S3: any,
	_LU2: any,
	_MU2: any,
	_Z2: any,
	_8k: any,
	_9k: any,
	_XA: any,
	_YA: any,
	_Y7: any,
): void;
declare function _rU2(
	_3c: any,
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
	_Eb: any,
): any;
declare function _SU2(): void;
declare function _TU2(
	_t9: any,
	_u9: any,
	_v9: any,
	_X4: any,
	_Y4: any,
	_Z4: any,
	__4: any,
	_w9: any,
	_x9: any,
	_y9: any,
	_z9: any,
	_A9: any,
	_B9: any,
): void;
declare function _2U2(
	_L71: any,
	_sk: any,
	_tk: any,
	_Q6: any,
	_R6: any,
	_R3: any,
	_S3: any,
	_xk: any,
	_yk: any,
	_zk: any,
	_Y7: any,
): void;
declare function _ok(
	_L71: any,
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
	_zk: any,
	_Y7: any,
): void;
declare function _Jk(
	_L71: any,
	_sk: any,
	_tk: any,
	_Q6: any,
	_R6: any,
	_R3: any,
	_S3: any,
	_xk: any,
	_yk: any,
	_Z2: any,
	_Fk: any,
	_Gk: any,
	_Hk: any,
	_Ik: any,
	_Y7: any,
): void;
declare function _Lk(): void;
declare function _VU2(_WU2: any, _XU2: any): boolean;
declare function _5U2(
	_lw: any,
	_5u: any,
	_R3: any,
	_S3: any,
	_xk: any,
	_yk: any,
	_V3: any,
	_Eb: any,
	_Y7: any,
): void;
declare function _Xj(_2V2: any, _Eg: any, _Fg: any): boolean;
declare function _8U2(_Gt: any): void;
declare var _4V2: any[];
declare function gif_open(width: any, height: any, _5V2: any): number;
declare function gif_save_buffer(_6V2: any): any;
declare function gif_save(_6V2: any, filename: any): void;
declare function gif_add_surface(
	_6V2: any,
	_8V2: any,
	_9V2: any,
	_aV2: any,
	_bV2: any,
	_cV2: any,
): number;
declare function _n1(_dV2: any): void;
declare function _s4(_kV2: any, _lV2: any, angle: any): any[];
declare var _qV2: number, _9L2: number;
declare function _XD(_rV2: any): void;
declare function _TD(_SD: any): any;
declare function _WD(_zV2: any, _AV2: any): any;
declare function _p31(_zV2: any): any;
declare function _QV2(_zV2: any): boolean;
declare function _RV2(_cD: any): boolean;
declare function _UV2(_Hm2: any, _6n2: any): any;
declare function _VV2(_Hm2: any, _6n2: any): any;
declare function _WV2(_Hm2: any): any;
declare function _Ni(_Ji: any, _1D: any): boolean;
declare function _Ri(_zV2: any, _AV2: any): any;
declare function _7L2(_zV2: any, _AV2: any): any;
declare function _YV2(_zV2: any, _AV2: any, _ZV2: any): any;
declare function _kv(_zV2: any, _AV2: any): boolean;
declare var __V2: any;
declare var _Jx: any;
declare var _Lx: number;
declare var _Nx: number;
declare var _gq2: number;
declare function _MF(
	_GV: any,
	_HV: any,
	_fe: any,
	_0W2: any,
	_1W2: any,
	_2W2: any,
): void;
declare function _AX2(_BX2: any): number;
declare function _cY2(
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_Ol: any,
	_Pl: any,
): boolean;
declare function _qY2(points: any): any[];
declare function _sY2(_Sm: any, _bi1: any): boolean;
declare function _wY2(
	points: any,
	_Tm: any,
): {
	min: number;
	max: number;
};
declare function _zY2(_rj1: any): any[];
declare function _AY2(_rj1: any, _sj1: any): boolean;
declare function _BY2(points: any): any;
declare function _CY2(_Sm: any, _bi1: any): boolean;
declare function _DY2(_Sm: any, _EY2: any, _Fd2: any, _Gd2: any): boolean;
declare function _GY2(_Sm: any, _bi1: any): boolean;
declare function _IY2(
	points: any,
	_Tm: any,
): {
	min: number;
	max: number;
};
declare function _JY2(_m5: any, _n5: any, _P4: any, _Q4: any): any;
declare function _kY2(
	_rj1: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
): boolean;
declare function _6Y2(_rj1: any, _m5: any, _n5: any): boolean;
declare function _hY2(
	_rj1: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
): boolean;
declare function _aY2(
	_rj1: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
): boolean;
declare function _2D2(): void;
declare function _tZ2(_Rl: any, _hK: any, _uZ2: any, _vZ2: any): void;
declare function _AZ2(_Rl: any, _hK: any, image_index: any): any;
declare var yyInst: typeof _Ze1;
declare function _Ye1(_G5: any, _Cx: any, _fe: any): any;
declare function _Ze1(_G5: any, _Cx: any, _fe: any): any;
declare function _BF(_wl: any): void;
declare function _LZ2(_8M: any, _R3: any, _S3: any, _Wi: any, _MZ2: any): any;
declare function _NZ2(_8M: any, _R3: any, _S3: any, _vL: any, _MZ2: any): any;
declare function _OZ2(_G5: any): any;
declare var _zG: number;
declare var _PZ2: number;
declare var _QZ2: number;
declare var _ve1: number;
declare var _Ae1: number;
declare var _RZ2: number;
declare var _ye: number;
declare var _we: number;
declare var _xe: number;
declare var _SZ2: number;
declare var _Be: number,
	_te: number,
	_re: number,
	_se: number,
	_De: number,
	_TZ2: number,
	_Ce: number,
	_UZ2: number,
	_VZ2: number,
	_nG: number,
	_Se1: boolean,
	_sG: number,
	_tG: number,
	_WZ2: boolean,
	_XZ2: number,
	_5e1: boolean,
	_6e1: number,
	_7e1: number;
declare var _lG: any[];
declare var _mG: any[];
declare var _oG: any[];
declare var _we1: any[];
declare var _Qe1: any[];
declare var _ue: any[];
declare var _YZ2: number;
declare var _ke: any[];
declare var _ZZ2: {
	8: string;
	9: number;
	13: number;
	16: number;
	17: number;
	18: number;
	19: number;
	20: number;
	27: number;
	22: number;
	32: string;
	34: number;
	35: number;
	36: number;
	37: number;
	38: number;
	39: number;
	40: number;
	45: number;
	46: number;
	47: number;
	48: string;
	49: string;
	50: string;
	51: string;
	52: string;
	53: string;
	54: string;
	55: string;
	56: string;
	57: string;
	58: string;
	59: string;
	61: string;
	65: string;
	66: string;
	67: string;
	68: string;
	69: string;
	70: string;
	71: string;
	72: string;
	73: string;
	74: string;
	75: string;
	76: string;
	77: string;
	78: string;
	79: string;
	80: string;
	81: string;
	82: string;
	83: string;
	84: string;
	85: string;
	86: string;
	87: string;
	88: string;
	89: string;
	90: string;
	91: number;
	92: number;
	93: number;
	96: string;
	97: string;
	98: string;
	99: string;
	100: string;
	101: string;
	102: string;
	103: string;
	104: string;
	105: string;
	106: string;
	107: string;
	109: string;
	110: string;
	111: string;
	112: number;
	113: number;
	114: number;
	115: number;
	116: number;
	117: number;
	118: number;
	119: number;
	120: number;
	121: number;
	122: number;
	123: number;
	144: number;
	145: number;
	173: string;
	186: string;
	187: string;
	188: string;
	189: string;
	190: string;
	191: string;
	192: string;
	219: string;
	220: string;
	221: string;
	222: string;
	223: string;
};
declare var __Z2: {
	8: string;
	9: number;
	13: number;
	16: number;
	17: number;
	18: number;
	19: number;
	20: number;
	27: number;
	22: number;
	32: string;
	34: number;
	35: number;
	36: number;
	37: number;
	38: number;
	39: number;
	40: number;
	45: number;
	46: number;
	47: number;
	48: string;
	49: string;
	50: string;
	51: string;
	52: string;
	53: string;
	54: string;
	55: string;
	56: string;
	57: string;
	58: string;
	59: string;
	61: string;
	65: string;
	66: string;
	67: string;
	68: string;
	69: string;
	70: string;
	71: string;
	72: string;
	73: string;
	74: string;
	75: string;
	76: string;
	77: string;
	78: string;
	79: string;
	80: string;
	81: string;
	82: string;
	83: string;
	84: string;
	85: string;
	86: string;
	87: string;
	88: string;
	89: string;
	90: string;
	91: number;
	92: number;
	93: number;
	96: string;
	97: string;
	98: string;
	99: string;
	100: string;
	101: string;
	102: string;
	103: string;
	104: string;
	105: string;
	106: string;
	107: string;
	109: string;
	110: string;
	111: string;
	112: number;
	113: number;
	114: number;
	115: number;
	116: number;
	117: number;
	118: number;
	119: number;
	120: number;
	121: number;
	122: number;
	123: number;
	144: number;
	145: number;
	173: string;
	186: string;
	187: string;
	188: string;
	189: string;
	190: string;
	191: string;
	192: string;
	219: string;
	220: string;
	221: string;
	222: string;
	223: string;
};
declare function _0_2(): void;
declare function _1_2(): void;
declare function _3_2(which: any): void;
declare function _4_2(_5_2: any, _6_2: any): boolean;
declare function _8_2(): void;
declare var _d_2: any;
declare var _e_2: any;
declare var _f_2: any;
declare var _g_2: any;
declare var _h_2: any;
declare var _i_2: any;
declare var _j_2: any;
declare var _k_2: any;
declare var _l_2: any;
declare var _m_2: any;
declare var _n_2: any;
declare function _o_2(): void;
declare function _v_2(): void;
declare function _w_2(): void;
declare function _ou(): void;
declare function _eu(): void;
declare function _A_2(_B_2: any): boolean;
declare function _z_2(_Zf: any): boolean;
declare function _x_2(_Zf: any): boolean;
declare function _C_2(_d2: any, _D_2: any): void;
declare function _jl(_D_2: any): void;
declare function _L91(_D_2: any): any;
declare function _M91(_D_2: any): boolean;
declare function _F_2(_D_2: any): void;
declare function _G_2(): any;
declare function _0D2(): void;
declare function _m03(): void;
declare function browser_input_capture(_Xo: any): void;
declare function _l03(): void;
declare function _2_2(): void;
declare function _V_2(): any;
declare function _W_2(_q03: any): void;
declare function _X_2(): any;
declare function _Y_2(): any;
declare function _Z_2(_Ai: any): boolean;
declare function ___2(_Ai: any): boolean;
declare function _003(_Ai: any): any;
declare function _103(_Ai: any): any;
declare function _203(_Ai: any): any;
declare function _303(_Ai: any): void;
declare function _n03(): void;
declare function _403(): any;
declare function _503(): any;
declare function _603(_tl: any): void;
declare function _703(_tl: any): void;
declare function _803(_tl: any): any;
declare function _903(_tl: any): any;
declare function _a03(_tl: any): any;
declare function _b03(_tl: any): void;
declare function _c03(): void;
declare function _o03(): void;
declare function _S_2(): void;
declare function _j03(): void;
declare function _d03(_v03: any): void;
declare function _w03(_x03: any): void;
declare function _h03(_y03: any): void;
declare function _e03(): void;
declare function _g03(): void;
declare function _i03(): void;
declare function _U_2(): void;
declare function _F03(): void;
declare function _G03(index: any): void;
declare function _te1(): any;
declare function _xe1(_H03: any): void;
declare function _I03(): void;
declare function _Wh(): void;
declare var _S03: number,
	_T03: number,
	_U03: number,
	_V03: number,
	_W03: number,
	_X03: number;
declare var _Y03: number,
	_Z03: number,
	__03: number,
	_013: number,
	_113: number,
	_213: number;
declare function _313(): void;
declare function _381(_eG2: any): void;
declare var _wX2: number, _yX2: number, _zX2: number;
declare function _p23(): void;
declare function _t23(): void;
declare function _v23(): void;
declare function _w23(_x23: any, _d2: any): void;
declare function _2E2(_D23: any, _E23: any): any;
declare function _LN2(_F1: any): number;
declare function _MN2(_F1: any, _tx: any): any;
declare function _3D2(): void;
declare function GetWithArray(_D23: any): any[];
declare function _Zi(): void;
declare var __23: number,
	_033: number,
	_133: number,
	_233: number,
	_333: number,
	_433: number,
	_5q2: number,
	__p2: number,
	_533: number,
	_Tp2: number,
	_633: number,
	_Wp2: number,
	_1q2: number,
	_Rp2: number,
	_733: number,
	_833: number,
	_7q2: number,
	_933: number,
	_a33: number,
	_b33: number,
	_c33: number,
	_d33: number,
	_e33: number,
	_f33: number,
	_g33: number,
	_h33: number,
	_i33: number,
	_j33: number,
	_k33: number,
	_l33: number,
	_m33: number;
declare var _n33: any[];
declare function _o33(): void;
declare function _p33(): void;
declare function _s33(): void;
declare function _t33(): void;
declare function _x33(): void;
declare function _E33(): void;
declare function _F33(): void;
declare function _rz(): void;
declare namespace _rz {
	var _7S: any[];
	var _r61: () => any;
	var _eE2: (json: any) => any;
	var _33: () => number;
	var _44: (index: any) => any;
	var _sz: (name: any) => number;
	var _Gz: () => any[];
}
declare function _EP(_Qa: any): number;
declare function _R33(_S33: any, _T33: any, _U33: any): any;
declare function _V33(_Fg: any, _Qa: any): number;
declare function _W33(_HF: any, _X33: any): number;
declare function _Y33(_HF: any, _X33: any): number;
declare function _Z33(__33: any): void;
declare function _dY(_cT: any, _R3: any, _S3: any, _rT: any): any;
declare function _xT(): any;
declare function _yT(_U2: any): boolean;
declare function _AT(_U2: any): boolean;
declare function _343(): void;
declare function _zT(_U2: any): boolean;
declare function _CT(_U2: any, _BT: any): void;
declare function _GT(_U2: any, _R1: any, _76: any, _ET: any, _443: any): void;
declare function _IT(_U2: any, _HT: any): void;
declare function _NT(
	_U2: any,
	_543: any,
	_643: any,
	_743: any,
	_843: any,
): void;
declare function _OT(
	_U2: any,
	_543: any,
	_643: any,
	_743: any,
	_843: any,
): void;
declare function _PT(
	_U2: any,
	_543: any,
	_643: any,
	_743: any,
	_843: any,
): void;
declare function _QT(_U2: any, _xk: any, _yk: any): void;
declare function _nU(_U2: any, _943: any, _a43: any): void;
declare function _qU(_U2: any, _b43: any, _c43: any): void;
declare function _tU(_U2: any, _d43: any, _e43: any): void;
declare function _EU(
	_U2: any,
	_f43: any,
	_g43: any,
	_h43: any,
	_i43: any,
): void;
declare function _JU(
	_U2: any,
	_j43: any,
	_k43: any,
	_l43: any,
	_m43: any,
): void;
declare function _zU(
	_U2: any,
	_n43: any,
	_o43: any,
	_p43: any,
	_q43: any,
	_r43: any,
): void;
declare function _MU(_U2: any, _s43: any, _t43: any): void;
declare function _7U(
	_U2: any,
	_1U: any,
	_2U: any,
	_3U: any,
	_4U: any,
	_5U: any,
	_6U: any,
): void;
declare function _0U(_U2: any, _8k: any, _9k: any): void;
declare function _eU(
	_U2: any,
	_8U: any,
	_9U: any,
	_aU: any,
	_bU: any,
	_cU: any,
	_dU: any,
): void;
declare function _UT(_U2: any, _u43: any): void;
declare function _WT(_U2: any, _u43: any, _v43: any): void;
declare function _YT(_U2: any, _u43: any, _w43: any, _v43: any): void;
declare function _gU(_U2: any, _x43: any): void;
declare function _iU(_U2: any, _x43: any, _y43: any): void;
declare function _kU(_U2: any, _x43: any, _z43: any, _y43: any): void;
declare function _ST(_U2: any, _RT: any): void;
declare var _uS: any[];
declare var _A43: {};
declare var _B43: number;
declare function _dE2(_yD2: any): boolean;
declare function _NU(_cS: any): number;
declare function _OU(_cS: any, _U2: any): boolean;
declare function _PU(_cS: any): boolean;
declare function _QU(_cS: any, _U2: any, _Xo: any): void;
declare function _RU(_cS: any, _U2: any): boolean;
declare function _SU(_cS: any, _U2: any): boolean;
declare function _YU(
	_cS: any,
	_U2: any,
	_TU: any,
	_UU: any,
	_VU: any,
	_WU: any,
	_BT: any,
	_H43: any,
): void;
declare function _I43(
	_cT: any,
	_m41: any,
	_R3: any,
	_S3: any,
	_rT: any,
	_hx: any,
	_J43: any,
	_Eb: any,
): void;
declare function _K43(
	_cT: any,
	_m41: any,
	_R3: any,
	_S3: any,
	_Q6: any,
	_R6: any,
	_BT: any,
	_U33: any,
	_L43: any,
	_hx: any,
): void;
declare function _ZU(_cS: any, _U2: any, _L43: any, _hx: any): void;
declare function __U(_cS: any, _U2: any, _L43: any, _hx: any): void;
declare function _S43(_m41: any): void;
declare function _3V(_cS: any, _U2: any, _0V: any, _1V: any, _2V: any): void;
declare function _T43(_m41: any): void;
declare function _7V(_cS: any, _U2: any, _4V: any, _5V: any, _6V: any): void;
declare function _8V(_cS: any, _U2: any, _Xo: any): void;
declare function _sT(_cS: any, _R3: any, _S3: any, _rT: any, _hx: any): void;
declare function _tT(
	_cS: any,
	_R3: any,
	_S3: any,
	_rT: any,
	_Eb: any,
	_hx: any,
): void;
declare function _uT(_cS: any, _R3: any, _S3: any, _aT: any): void;
declare function _vT(_cS: any): boolean;
declare function _W43(_X43: any, _92: any): void;
declare function _wT(_cS: any): number;
declare function _Y43(_TJ: any): any;
declare function _M33(_TJ: any, _dV: any, __43: any): any;
declare function _bT(_TJ: any, _dV: any): any;
declare function _eT(_cS: any): boolean;
declare function _dT(_cS: any): boolean;
declare function _053(): void;
declare function _fT(_cS: any, _153: any): void;
declare function _eV(_cS: any): any;
declare function _fV(_cS: any, _TJ: any): void;
declare function _gV(_cS: any, _Xo: any): void;
declare function _353(): void;
declare function _hT(_cS: any, _gT: any): void;
declare function _iT(_cS: any, _Wi: any): void;
declare function _jT(_cS: any, _zk: any, _Y7: any): void;
declare function _kT(_cS: any, _R3: any, _S3: any): void;
declare function _lT(_cS: any, _V3: any): void;
declare function _nT(_cS: any, _mT: any): void;
declare function _oT(_cS: any, _mT: any): void;
declare function _553(_cS: any, _653: any): void;
declare function _853(_cS: any, _653: any): void;
declare function _e53(_cS: any, _653: any): void;
declare function _pT(_cS: any): number;
declare function _h53(): void;
declare function _i53(_cS: any, _xp: any): void;
declare function _j53(
	_k53: any,
	__33: any,
	_vV: any,
	_wV: any,
	_zk: any,
	_Y7: any,
): void;
declare function _qT(_cS: any, _zk: any, _Y7: any): void;
declare function _v53(_yN: any): void;
declare function _w53(): void;
declare function _B53(): void;
declare function _F53(_cS: any): void;
declare function _G53(): number;
declare function _H53(_yN: any): number;
declare var _sO: number, _I53: number;
declare var _J53: number;
declare function _K53(_R3: any, _S3: any, _IF: any): void;
declare function _nV(): void;
declare function _cE2(_eG2: any): any;
declare var _Y53: any;
declare function _aD2(): void;
declare function _kP(): void;
declare function _IZ(): void;
declare function _6L(_n63: any): any[];
declare var _hp2: number;
declare function _gD2(): void;
declare function _za1(
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
	_V3: any,
	__n2: any,
): void;
declare function _ra1(_R3: any, _S3: any, _Eg: any, _Fg: any, _V3: any): void;
declare function _X63(
	_PT2: any,
	_ek: any,
	_Y63: any,
	_aC: any,
	_R3: any,
	_S3: any,
	_Wi: any,
): void;
declare function draw_tile(
	_G5: any,
	_ek: any,
	_s73: any,
	_aC: any,
	_R3: any,
	_S3: any,
): void;
declare function _R83(): void;
declare function _V93(_VP2: any, _1a3: any, _2a3: any, _3a3: any): void;
declare function _X93(_5a3: any, _xt: any): void;
declare function _W93(_6a3: any): void;
declare function _Y93(_6a3: any): void;
declare function _kA(): void;
declare function _4D2(): void;
declare function _i93(_Ha3: any): string;
declare function _fG2(): void;
declare function _683(type: any): boolean;
declare function _Sb3(): number;
declare function _yG2(): any;
declare function _vG2(): number;
declare function _Ub3(
	_jV2: any,
	x: any,
	y: any,
	_ZG: any,
	__G: any,
	rotation: any,
	_v83: any,
	_w83: any,
): void;
declare function _Xb3(
	_Yb3: any,
	_Zb3: any,
	__b3: any,
	_0c3: any,
	_1c3: any,
	_2c3: any,
	_3c3: any,
	_4c3: any,
): any;
declare function _7c3(_eG2: any): any;
declare function _C_(_eG2: any): void;
declare function _G_(_eG2: any): void;
declare function _9c3(_eG2: any): void;
declare function _y_(_eG2: any): void;
declare function _z_(_eG2: any): void;
declare function _J_(_eG2: any): void;
declare function _D_(_eG2: any): void;
declare function _S_(_eG2: any): void;
declare function _H_(_eG2: any): void;
declare function _A_(_eG2: any): void;
declare function _R_(_eG2: any): void;
declare function _B_(_eG2: any): void;
declare function _L_(_eG2: any): void;
declare function _N_(_eG2: any): void;
declare function _P_(_eG2: any): void;
declare function _F_(_eG2: any): void;
declare function _E_(_eG2: any): void;
declare function _Hc3(_eG2: any): void;
declare function _Jd3(): void;
declare function _w_(_eG2: any): void;
declare function _x_(_eG2: any): void;
declare function _Nd3(_eG2: any): void;
declare function _l_(_eG2: any): void;
declare function _Od3(_eG2: any): void;
declare function _m_(_eG2: any): void;
declare function _o_(_eG2: any): void;
declare function _t_(_eG2: any): void;
declare function _u_(_eG2: any): void;
declare function _r_(_eG2: any): void;
declare function _s_(_eG2: any): void;
declare function _v_(_eG2: any): void;
declare function _p_(_eG2: any): void;
declare function _n_(_eG2: any): void;
declare function _q_(_eG2: any): void;
declare function _k_(_db: any, _eG2: any): void;
declare function _h_(_db: any, _eG2: any): void;
declare var typeToEventLut: string[];
declare function _2_(_eG2: any): void;
declare function _dD2(): void;
declare function _zz(_92: any): boolean;
declare function _Az(_92: any): any;
declare var _ve3: any[];
declare var _we3: any[];
declare function _xe3(_ye3: any, _ze3: any): void;
declare function _Ce3(_ye3: any, _mX2: any): void;
declare function _De3(_ye3: any, _5K: any): void;
declare var _Fe3: any[];
declare function _Ge3(): void;
declare function _sK(
	_2c3: any,
	_5K: any,
	_0f3: any,
	_2f3: any,
	_Y73: any,
	_X73: any,
	_W73: any,
): void;
declare function _5f3(): void;
declare function _lK(_Z73: any, _6f3: any): boolean;
declare function _qf3(
	_U42: any,
	_S1: any,
	_G5: any,
	_0f3: any,
	_W73: any,
	_X73: any,
	_Y73: any,
	_Z73: any,
	_R1: any,
	_rf3: any,
	_sf3: any,
): void;
declare function _V_(_fe: any): void;
declare function _0g3(): void;
declare function _2g3(): void;
declare function _5g3(_jc1: any): void;
declare function _Vf3(): void;
declare function _ef3(_8f3: any, _8g3: any, _9g3: any): {};
declare var _u21: any[];
declare function _ag3(_bg3: any): void;
declare function _cg3(_tc1: any): void;
declare function _eg3(): void;
declare var _ig3: boolean;
declare function _S61(_cD: any, _fe: any, _Z41: any, _6D: any, _Tk2: any): any;
declare function _8D2(): void;
declare function _og3(): void;
declare function _tg3(): void;
declare var _1H: number, _X1: number, _he3: number;
declare var _Fg3: number;
declare var _m71: {
	_n71: number;
	_G71: number;
	_5Y2: number;
	_TX2: number;
};
declare function _0F(): void;
declare function _mE(): void;
declare function _Ku(): void;
declare function _j71(): void;
declare var _Kg3: (x: any) => number;
declare function _Ih3(_Jh3: any, _sv: any): void;
declare function _6E2(_Lh3: any): any;
declare function _Ph3(position: any, _fY: any): any;
declare function _eF(_n3: any, _o3: any, _Vh3: any, width: any): any;
declare function _5D2(): void;
declare function _hE2(): void;
declare function _6D2(): void;
declare function _ij3(_jj3: any): any;
declare function texture_is_ready(_kj3: any): boolean | 0 | 1 | -1;
declare function texture_prefetch(_kj3: any): number;
declare function texture_flush(_kj3: any): number;
declare function texturegroup_get_names(): any[];
declare function texturegroup_get_textures(_mj3: any): any[] | -1;
declare function texturegroup_get_sprites(_mj3: any): any[] | -1;
declare function texturegroup_get_fonts(_mj3: any): any[] | -1;
declare function texturegroup_get_tilesets(_mj3: any): any[] | -1;
declare function texturegroup_load(_mj3: any, _u71: any): void;
declare function texturegroup_unload(_mj3: any): void;
declare function texturegroup_get_status(_mj3: any): number;
declare function texturegroup_set_mode(_nj3: any, _oj3: any, _pj3: any): void;
declare var _qj3: number;
declare function texture_debug_messages(_Xo: any): number;
declare function _rj3(_hj3: any): void;
declare function _sj3(_hj3: any): void;
declare var _hc1: number, _ic1: number, _tj3: number;
declare var _uj3: number, _vj3: number;
declare var _wj3: number, _qc1: number;
declare var _xj3: number, _yj3: number, _zj3: number, _Aj3: number;
declare var _Bj3: number, _7c1: number, _3c1: number, _4c1: number;
declare function _Cj3(_Dj3: any): number;
declare function _Ej3(_Bv: any): number;
declare class _Fj3 {
	constructor(_fe: any);
	_Gc1(_Mg: any): void;
	_Fc1(): this;
	_Ec1(_Ij3: any): void;
	_cr2(_Jj3: any): void;
	_ar2(): void;
	_dr2(): void;
	_xc1(_kc1: any, _lc1: any, _mc1: any, _nc1: any, _oc1: any, _pc1: any): _Nj3;
	_dd1(_kc1: any, _lc1: any, _mc1: any, _lr: any): _Oj3;
	_Hj3(_4d1: any): void;
	_ec1(): any;
	_Cc1(): any;
	_gc1(): any;
	_fd1(_fe: any): any;
	_Hc1(): any;
	_2c1(): any;
}
declare class _Pj3 extends _Fj3 {
	constructor(_fe: any);
	_Xz(): void;
	_1W(): void;
	_Jc1(): void;
	_0d1(): any;
	_Qj3(_I21: any): void;
}
declare class _Nj3 extends _Pj3 {
	constructor(
		_jc1: any,
		_kc1: any,
		_lc1: any,
		_mc1: any,
		_nc1: any,
		_oc1: any,
		_pc1: any,
	);
	_Gc1(_Mg: any): void;
	_Fc1(): any;
	_cr2(_Jj3: any): void;
	_Mj3(): void;
	_Jc1(): void;
	_C61(): void;
	_0k3(): void;
	_Wz(): void;
	_Pc1(_kc1: any, _lc1: any, _mc1: any, _nc1: any, _oc1: any, _pc1: any): void;
	_Rc1(): any;
	_Xc1(): any;
	_Tc1(): any;
	_Vc1(): any;
	_Zc1(): any;
	_2d1(): any;
	_Dc1(): any;
	_Hc1(): any;
	_Ec1(_Ij3: any): void;
	_Lj3(): any;
	_Wj3(): void;
	_4k3(): void;
	_5k3(): void;
	__j3(): boolean;
	_Xj3(): boolean;
	_Yj3(): boolean;
	_Zj3(): void;
	_8k3(): void;
	_2k3(_kc1: any, _lc1: any): number;
	_1k3(_kc1: any, _lc1: any, _mc1: any, _nc1: any, _oc1: any, _pc1: any): void;
	_ak3(_kc1: any, _lc1: any): void;
	_9k3(_lc1: any): void;
	_bk3(_mc1: any): void;
	_ck3(_nc1: any): void;
	_dk3(_oc1: any): void;
	_ek3(_pc1: any): void;
}
declare class _Oj3 extends _Nj3 {
	constructor(_jc1: any, _kc1: any, _lc1: any, _mc1: any, _lr: any);
	_Zj3(): void;
}
declare const _9r2: _Fj3;
declare const _br2: _Pj3;
declare const _cd1: _Fj3;
declare const _ac1: any;
declare function _fk3(_eG2: any): void;
declare function _bD2(): void;
declare function _hk3(): void;
declare function _1E2(_jk3: any): void;
declare var _Fz: number,
	_fz: number,
	_gz: number,
	_iz: number,
	_hz: number,
	_kz: number,
	_nz: number,
	_lz: number,
	_mz: number,
	_oz: number,
	_pz: number,
	_qz: number,
	_tz: number,
	_lk3: number,
	_jz: number;
declare var _Mz: number;
declare var _mk3: number;
declare var _nk3: number;
declare var _ok3: number;
declare var _El: number;
declare var _pk3: number;
declare var _9S: number;
declare var _dS: number;
declare var _fS: number;
declare var _U_: number;
declare var _T71: number;
declare var _qk3: number;
declare var _rk3: number;
declare var _sk3: number;
declare var _tk3: number;
declare var _uk3: number;
declare var _vk3: number;
declare var _wk3: number;
declare var _xk3: number;
declare var _yk3: number;
declare var _6S: number;
declare var _Il: number;
declare var _zk3: number;
declare var _Ak3: number;
declare var _Bk3: number;
declare var _Ck3: number;
declare var _Dk3: number;
declare var _Ek3: number;
declare var _Fk3: number;
declare var _Gk3: number;
declare var _Hk3: number;
declare var _Ik3: number;
declare var _Jk3: number;
declare var _Kk3: number;
declare function _Gl(_db: any, _vj: any): void;
declare function _Dl(_I2: any, _H2: any): any;
declare function YYASSET_REF(_I2: any): any;
declare var _Lk3: {
	name: string;
	type: number;
}[];
declare function _Rv(_eP1: any): string;
declare function _Hv(_d2: any): number;
declare function yyGetReal(_Qa: any): any;
declare function yyGetInt64(_Qa: any): any;
declare function yyGetInt32(_Qa: any): any;
declare function yyGetBool(_Qa: any): boolean;
declare function _5S(
	_vj: any,
	_eP1: any,
	_Ok3: any,
	_Di: any,
	_Pk3: any,
): number;
declare var _Qk3: number;
declare var _Rk3: number;
declare var _Sk3: number;
declare var _Tk3: number;
declare var _Uk3: any;
declare function _Vk3(_Qa: any): any;
declare function _Wk3(_Qa: any): void;
declare function _Xk3(_Qa: any): void;
declare function yyGetString(_Qa: any): any;
declare var __k3: number;
declare var _0l3: number;
declare var _1l3: number;
declare var _2l3: number;
declare var _3l3: number;
declare var _4l3: number;
declare var _5l3: number;
declare var _6l3: number;
declare var _7l3: number;
declare var _8l3: number;
declare var _9l3: number;
declare var _al3: number;
declare var _bl3: number;
declare var _cl3: number;
declare var _dl3: number;
declare var _el3: number;
declare var _fl3: number;
declare function _gl3(_rV2: any): void;
declare function array_get_2D(_9N: any, _il3: any, _jl3: any): any;
declare function array_set_2D(_9N: any, _il3: any, _jl3: any, _Qa: any): void;
declare function array_set_2D_pre(
	_9N: any,
	_il3: any,
	_jl3: any,
	_Qa: any,
): any;
declare function array_set_2D_post(
	_9N: any,
	_il3: any,
	_jl3: any,
	_Qa: any,
): any;
declare function array_get(_9N: any, _il3: any): any;
declare function array_set(_9N: any, _il3: any, _Qa: any): void;
declare function array_set_pre(_9N: any, _il3: any, _Qa: any): any;
declare function array_set_post(_9N: any, _il3: any, _Qa: any): any;
declare function __yy_is_nullish(_Qa: any): boolean;
declare function __yy_gml_array_create(_9N: any): any;
declare function _Yw(): void;
declare function __yy_gml_object_create(_We1: any, _9N: any): any;
declare function is_method(_9N: any): boolean;
declare function is_callable(_Qa: any): boolean;
declare function is_handle(_Qa: any): boolean;
declare function __yyg_call_method(_Sh: any): any;
declare function __yy_method(_G5: any, _Sh: any): any;
declare function method(_G5: any, _Sh: any): any;
declare function _ml3(): any;
declare var _Ue1: any[];
declare function _Te1(): void;
declare function _LP2(name: any): any;
declare function method_get_self(_7x: any): any;
declare function method_get_index(_7x: any): any;
declare function _rl3(_9N: any): boolean;
declare function __yy_gml_array_check(_9N: any, _iF: any): any;
declare function __yy_gml_array_set_owner(_9N: any): void;
declare function __yy_gml_array_check_index(_9N: any, _iF: any): any;
declare function __yy_gml_array_check_index_set(_9N: any): any;
declare function __yy_gml_array_check_index_chain(_9N: any, _iF: any): any;
declare function __yy_gml_errCheck(_9N: any): any;
declare function _Th(_sl3: any, _tl3: any): any;
declare function _n91(_QW: any, _ul3: any, _vl3: any): number[];
declare function array_equals(_9N: any, _iF: any): boolean;
declare function array_create(__a: any, _12: any): any[];
declare function array_copy(
	_Jh: any,
	_xl3: any,
	_Ig: any,
	_yl3: any,
	_F51: any,
): void;
declare function array_resize(_Di: any, _zl3: any): void;
declare function array_push(_Di: any): void;
declare function array_pop(_Di: any): any;
declare function array_shift(_Di: any): any;
declare function array_insert(_Di: any, _92: any): void;
declare function array_delete(_Di: any, _92: any, _5c: any): void;
declare function array_sort(_Di: any, _Al3: any): void;
declare const _Bl3: (_Di: any, _4c: any, _F51: any) => void;
declare function array_shuffle(_Di: any, _4c: any, _F51: any): any;
declare function array_shuffle_ext(_Di: any, _4c: any, _F51: any): any;
declare function array_first(_Di: any): any;
declare function array_last(_Di: any): any;
declare function array_create_ext(__a: any, _Sh: any): any[];
declare function array_find_index(_Di: any, _Sh: any, _4c: any, _F51: any): any;
declare function array_get_index(_Di: any, _vj: any, _4c: any, _F51: any): any;
declare function array_contains(
	_Di: any,
	_vj: any,
	_4c: any,
	_F51: any,
): boolean;
declare function array_contains_ext(
	_Di: any,
	_Yt: any,
	_Cl3: any,
	_4c: any,
	_F51: any,
): boolean;
declare function array_any(_Di: any, _Sh: any, _4c: any, _F51: any): boolean;
declare function array_all(_Di: any, _Sh: any, _4c: any, _F51: any): boolean;
declare function array_foreach(_Di: any, _Sh: any, _4c: any, _F51: any): void;
declare function array_reduce(
	_Di: any,
	_Sh: any,
	_Gl3: any,
	_4c: any,
	_F51: any,
): any;
declare function array_filter(_Di: any, _Sh: any, _4c: any, _F51: any): any[];
declare function array_filter_ext(
	_Di: any,
	_Sh: any,
	_4c: any,
	_F51: any,
): number;
declare function array_map(_Di: any, _Sh: any, _4c: any, _F51: any): any[];
declare function array_map_ext(_Di: any, _Sh: any, _4c: any, _F51: any): number;
declare function array_copy_while(
	_Di: any,
	_Sh: any,
	_4c: any,
	_F51: any,
): any[];
declare function array_unique(_Di: any, _4c: any, _F51: any): any;
declare function array_unique_ext(_Di: any, _4c: any, _F51: any): any;
declare function array_reverse(_Di: any, _4c: any, _F51: any): any[];
declare function array_reverse_ext(_Di: any, _4c: any, _F51: any): any;
declare function array_concat(_Di: any): any;
declare function array_union(_Di: any): any;
declare function array_intersection(_Di: any): any[];
declare function _sh(_yQ1: any): string;
declare function _qh(_yQ1: any, _12: any): void;
declare function _Kl3(_iN: any): boolean;
declare function _Ll3(_iN: any): number;
declare function _wh(_5u: any): number;
declare function _zh(_yQ1: any, _Nl3: any): any;
declare function _Ql3(_d2: any): string;
declare function _Rl3(_d2: any): any;
declare function variable_global_exists(_Sl3: any): boolean;
declare function variable_global_get(_Sl3: any): boolean;
declare function variable_global_set(_Sl3: any, _12: any): void;
declare function variable_instance_get(_fe: any, _Sl3: any): any;
declare function variable_instance_set(_fe: any, _Sl3: any, _12: any): void;
declare function _Vl3(_fe: any, _Sl3: any, _12: any): any;
declare function variable_instance_exists(_fe: any, _Sl3: any): boolean;
declare function variable_instance_names_count(_fe: any): number;
declare function _Zk3(_2w: any, _Tl3: any): any[];
declare function variable_instance_get_names(_fe: any): any[];
declare function __yy_gml_copy_prototype(_Jh: any, _Mg: any): void;
declare function variable_struct_exists(_fe: any, _d2: any): boolean;
declare function variable_struct_set(_fe: any, _d2: any, _12: any): void;
declare function variable_struct_set_pre(_fe: any, _d2: any, _12: any): any;
declare function variable_struct_set_post(_fe: any, _d2: any, _12: any): any;
declare function variable_struct_get(_fe: any, _d2: any): any;
declare function variable_struct_get_names(_fe: any): any[];
declare function variable_struct_names_count(_fe: any): number;
declare function variable_struct_remove(_fe: any, _Sl3: any): void;
declare function struct_exists(_fe: any, _d2: any): boolean;
declare function struct_set(_fe: any, _d2: any, _12: any): void;
declare function struct_get(_fe: any, _d2: any): any;
declare function struct_get_names(_fe: any): any[];
declare function struct_names_count(_fe: any): number;
declare function struct_remove(_fe: any, _Sl3: any): void;
declare function struct_foreach(_fe: any, _Sh: any): void;
declare function struct_get_from_hash(_fe: any, _Yl3: any): any;
declare function struct_set_from_hash(_fe: any, _Yl3: any, _12: any): void;
declare function variable_get_hash(_d2: any): any;
declare function __l3(_12: any, _Wi: any): any;
declare function variable_clone(_12: any, _Wi: any): any;
declare var vertex_format_begin: any,
	vertex_format_end: any,
	vertex_format_delete: any,
	vertex_format_add_position: any,
	vertex_format_add_position_3d: any,
	vertex_format_add_colour: any,
	vertex_format_add_color: any,
	vertex_format_add_normal: any,
	vertex_format_add_texcoord: any,
	vertex_format_add_textcoord: any,
	vertex_format_add_custom: any,
	vertex_format_get_info: any;
declare var _0m3: any;
declare function _1m3(): void;
declare function _2m3(): void;
declare function _5m3(): void;
declare function _6m3(): void;
declare function _7m3(): void;
declare function _8m3(): void;
declare function _9m3(): void;
declare function _am3(_db: any, _cb: any): void;
declare function _3m3(): any;
declare function _4m3(_cm3: any): void;
declare function _bm3(_cm3: any): any;
declare var _gm3: boolean;
declare function video_get_format(): number;
declare function video_open(path: any): void;
declare function video_close(): void;
declare function _wm3(): 0 | -1;
declare var _xm3: number;
declare var _ym3: number;
declare var _zm3: number;
declare var _Am3: number;
declare function _Bm3(_Cm3: any, width: any, height: any): 0 | 1;
declare function _Dm3(): any;
declare function _Em3(): any;
declare function video_draw(): any[];
declare function video_set_volume(_Fm3: any): void;
declare function video_pause(): void;
declare function video_resume(): void;
declare function video_enable_loop(loop: any): void;
declare function video_seek_to(_gi: any): void;
declare function video_get_duration(): number;
declare function video_get_position(): number;
declare function video_get_status(): number;
declare function video_is_looping(): any;
declare function video_get_volume(): any;
declare function _rC2(): void;
declare function _r63(_Nm3: any): any;
declare function _Om3(): void;
declare function weak_ref_create(_Sm3: any): any;
declare function weak_ref_alive(_Um3: any): any;
declare function weak_ref_any_alive(_Di: any, _92: any, _F51: any): boolean;
declare var _I6: any;
declare var _lN1: boolean;
declare var _Wm3: any;
declare var _Xm3: any;
declare var _Yo: boolean;
declare var _Ym3: boolean,
	_Zo: boolean,
	_r53: number,
	_s53: number,
	_Zm3: number,
	__m3: number,
	_6r: number,
	_8r: number,
	_0n3: any[],
	_Vo: {
		_So: boolean;
		_To: boolean;
		_Uo: boolean;
		alpha: boolean;
	};
declare var _m9: number,
	_1n3: boolean,
	_2n3: boolean,
	_3n3: boolean,
	_4n3: number;
declare var _ep: any,
	_lp: any,
	_ip: any,
	_np: any,
	_tp: any,
	_jp: any[],
	_op: any[];
declare var _kp: number;
declare var _qp: number;
declare var _C42: boolean, _eC: boolean, _gC: number;
declare var _Jz: any[];
declare var _wp: any;
declare var _zp: number, _Dp: number, _RC: number, _5n3: number;
declare var _Ia: number;
declare var _6n3: number, _7n3: any[], _8n3: any[];
declare var _9n3: number;
declare var _eN1: any;
declare var _fN1: any;
declare var _gN1: any;
declare var _hN1: any;
declare var _iN1: any;
declare var _jN1: any;
declare var _kN1: any;
declare var _uN1: any;
declare var _qN1: boolean;
declare var _sN1: boolean;
declare var _rN1: boolean;
declare var _tN1: boolean;
declare var _oN1: boolean;
declare var _mN1: boolean;
declare var _nN1: boolean;
declare var _pN1: boolean;
declare var _vN1: boolean;
declare var _wN1: boolean;
declare function _cU2(): void;
declare function _xo3(_DM1: any): boolean;
declare function _sB(_hx: any): void;
declare function _uB(): number;
declare function _wo3(): void;
declare function _yo3(): boolean;
declare function _zo3(): boolean;
declare function _Ao3(): boolean;
declare function _Co3(): void;
declare function _ln3(): void;
declare function _mn3(): void;
declare function _in3(_Ho3: any): void;
declare function _jn3(_Ko3: any): void;
declare function _0p(): any;
declare function _en3(_tU2: any, _uU2: any, _vU2: any, _wU2: any): void;
declare function _bn3(
	_xU2: any,
	_yU2: any,
	_zU2: any,
	_AU2: any,
	_V3: any,
): void;
declare function _cn3(_VN1: any, _WN1: any, _XN1: any, _YN1: any): void;
declare function _fn3(_Eb: any): void;
declare function _Kn3(_Eb: any, _Y7: any): void;
declare function _an3(_Eb: any): number;
declare function _Mn3(_Y7: any): void;
declare function _dn3(_3S: any): void;
declare function _gn3(_R3: any, _S3: any, _X2: any, _Y2: any, _V3: any): void;
declare function _hn3(_xp: any): void;
declare function _kn3(
	_lw: any,
	_5u: any,
	_R3: any,
	_S3: any,
	_xk: any,
	_yk: any,
	_V3: any,
	_Eb: any,
	_Y7: any,
): void;
declare function _pn3(_L71: any, _R3: any, _S3: any, _Y7: any): void;
declare function _Sn3(
	_L71: any,
	_vU2: any,
	_wU2: any,
	_Po3: any,
	_Qo3: any,
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
	_8k: any,
	_9k: any,
	_XA: any,
	_YA: any,
): void;
declare function _qn3(
	_L71: any,
	_R3: any,
	_S3: any,
	_LU2: any,
	_MU2: any,
	vtiled: any,
	htiled: any,
	_Eb: any,
	_Y7: any,
): void;
declare function _tn3(
	_Zo3: any,
	_cP2: any,
	_O7: any,
	_v83: any,
	_w83: any,
	x: any,
	y: any,
	_ZG: any,
	__G: any,
	angle: any,
	color: any,
	alpha: any,
	__o3: any,
): void;
declare function _un3(
	_YB: any,
	_fp3: any,
	_gp3: any,
	_hp3: any,
	_ip3: any,
	_jp3: any,
	_kp3: any,
	__o3: any,
): number;
declare function _tp3(
	_YB: any,
	_fp3: any,
	_Ip3: any,
	_Jp3: any,
	_Kp3: any,
	_hp3: any,
	_Lp3: any,
	_jp3: any,
	_Mp3: any,
	_ip3: any,
	_Np3: any,
	_Op3: any,
	_Pp3: any,
	_kp3: any,
	__o3: any,
): number;
declare function _sp3(
	_fp3: any,
	_Jp3: any,
	_Kp3: any,
	_Lp3: any,
	_jp3: any,
	_Mp3: any,
	_Np3: any,
	_Op3: any,
	_Pp3: any,
	_kp3: any,
): number;
declare function _pp3(_fp3: any, _Lp3: any): any;
declare function _rn3(
	_L71: any,
	_h71: any,
	_i71: any,
	_R3: any,
	_S3: any,
	_LU2: any,
	_MU2: any,
	_Z2: any,
	_Eb: any,
	_9k: any,
	_XA: any,
	_YA: any,
	_Y7: any,
): void;
declare function _sn3(
	_L71: any,
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_ym: any,
	_zm: any,
	_Rb1: any,
	_Sb1: any,
	_Y7: any,
): void;
declare function _9q3(
	_L71: any,
	_h71: any,
	_i71: any,
	_Q6: any,
	_R6: any,
	_R3: any,
	_S3: any,
	_LU2: any,
	_MU2: any,
	_Z2: any,
	_Eb: any,
	_9k: any,
	_XA: any,
	_YA: any,
	_Y7: any,
): void;
declare function _on3(
	_3c: any,
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
	_DM1: any,
	_T51: any,
): void;
declare function _vn3(
	_L71: any,
	_sk: any,
	_tk: any,
	_Q6: any,
	_R6: any,
	_R3: any,
	_S3: any,
	_xk: any,
	_yk: any,
	_zk: any,
	_Y7: any,
): void;
declare function _wn3(_m5: any, _n5: any, _P4: any, _Q4: any, _MA: any): void;
declare function _xn3(
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_NA: any,
	_OA: any,
	_8k: any,
	_9k: any,
	_MA: any,
): void;
declare function _yn3(
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_8k: any,
	_9k: any,
	_XA: any,
	_YA: any,
	_MA: any,
): void;
declare function _Gn3(_R3: any, _S3: any, _Eb: any): void;
declare function _Cn3(
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_ym: any,
	_zm: any,
	_MA: any,
): void;
declare function _zn3(_R3: any, _S3: any): void;
declare function _An3(_R3: any, _S3: any): number | any[];
declare function _Bn3(_R3: any, _S3: any): any;
declare function _Dn3(
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_ym: any,
	_zm: any,
	_Fk: any,
	_Gk: any,
	_Hk: any,
	_MA: any,
): void;
declare function _En3(
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_8k: any,
	_9k: any,
	_MA: any,
): void;
declare function _Fn3(
	_R3: any,
	_S3: any,
	_2h: any,
	_8k: any,
	_9k: any,
	_MA: any,
): void;
declare function _Hn3(_m5: any, _n5: any, _P4: any, _Q4: any): void;
declare function _In3(_m5: any, _n5: any, _P4: any, _Q4: any, _Eg: any): void;
declare function _Jn3(
	_m5: any,
	_n5: any,
	_P4: any,
	_Q4: any,
	_Eg: any,
	_8k: any,
	_9k: any,
): void;
declare function _fq3(_L71: any, _Eg: any, _Fg: any, _T51: any): void;
declare function _Tn3(_Eg: any, _Fg: any, _T51: any, _H91: any): any;
declare function _Un3(_fe: any): number;
declare function _Vn3(_fe: any, _R3: any, _S3: any): number | any[];
declare function _Wn3(_fe: any, _R3: any, _S3: any): any;
declare function _Pn3(_fe: any, _R3: any, _S3: any): void;
declare function _gq3(
	_97: any,
	_X4: any,
	_Y4: any,
	_Z4: any,
	__4: any,
	_J9: any,
	_K9: any,
	_mi2: any,
	_ni2: any,
	_mn1: any,
	_hq3: any,
	_p3: any,
	_iq3: any,
	_Ig1: any,
	_Jg1: any,
	_Ug1: any,
	_iF2: any,
): boolean;
declare function _Xn3(_Na1: any, _kq3: any, _lq3: any, _Mg: any): void;
declare function _Yn3(
	_Na1: any,
	_kq3: any,
	_lq3: any,
	_Mg: any,
	_X2: any,
	_Y2: any,
	_Oa1: any,
	_Pa1: any,
): void;
declare function _Zn3(
	_U2: any,
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
	_Rj: any,
	_Sj: any,
): number;
declare function _oq3(
	_fe: any,
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
	_Rj: any,
	_Sj: any,
): any;
declare function _pq3(
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
	_Rj: any,
	_Sj: any,
): any;
declare function __n3(
	_fe: any,
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
	_Rj: any,
	_Sj: any,
	_h71: any,
	_i71: any,
): any;
declare function _0o3(
	_U2: any,
	_fe: any,
	_R3: any,
	_S3: any,
	_Eg: any,
	_Fg: any,
	_Rj: any,
	_Sj: any,
): any;
declare function _1o3(_WU2: any, _XU2: any): boolean;
declare function _Rn3(_fe: any): void;
declare function _Qn3(_fe: any, _vV: any, _wV: any, _sV: any): void;
declare function _nn3(_Gt: any): void;
declare function _Nn3(_Ig: any, _Jh: any): void;
declare function _On3(_qq3: any): void;
declare function _2o3(_S6: any): number;
declare function _3o3(_S6: any): number;
declare function _4o3(_f01: any, _3c: any): void;
declare function _1S2(_g01: any): 0 | 1;
declare function _2S2(_g01: any): void;
declare function _go3(_g01: any): any;
declare function _5o3(_g01: any, _h01: any): any;
declare function _6o3(_l01: any, _lP1: any): void;
declare function _7o3(_l01: any, _lP1: any): void;
declare function _8o3(_l01: any, _lP1: any): void;
declare function _9o3(_g01: any, _3c: any): number;
declare function _ao3(_k01: any): void;
declare function _bo3(_l01: any, _Di: any): void;
declare function _co3(_l01: any, _Di: any): void;
declare function _do3(_l01: any, _Oi: any, _4c: any, _ac: any): void;
declare function _eo3(_l01: any, _Di: any): void;
declare function _ho3(_NB: any): void;
declare function _io3(_sq3: any): void;
declare function _jo3(_f01: any, _sq3: any): void;
declare function _ko3(_ar: any): void;
declare function _lo3(_f01: any, _ar: any): void;
declare function _mo3(): any;
declare function _no3(_S6: any): 0 | 1;
declare function _oo3(_S6: any): 0 | 1;
declare function _po3(_S6: any): any[];
declare function _fo3(): number;
declare function _qo3(_Xo: any): void;
declare function _ro3(_vj: any): void;
declare function _so3(): 0 | 1;
declare function _to3(): number;
declare function _yp(_db: any, _xp: any): void;
declare function _Cp(_db: any): any;
declare function _Do3(): boolean;
declare function _Ln3(_Na: any): void;
declare function _f7(_L71: any): void;
declare function _h7(_S6: any, _RP1: any): void;
declare function _5l(_S6: any, _RP1: any): void;
declare function _PB(): void;
declare function _qQ1(_S6: any, _RP1: any): boolean;
declare function _7c(_S6: any): boolean;
declare function _uo3(
	_Oi: any,
	_eL2: any,
	_Gq: any,
	_4c: any,
	_vq3: any,
): boolean;
declare function _vo3(
	_Oi: any,
	_eL2: any,
	_Gq: any,
	_4c: any,
	_vq3: any,
): boolean;
declare var _wq3: number;
declare var _xq3: number;
declare var canvas: any;
declare var _yq3: any,
	_zq3: any,
	_Aq3: any,
	_Bq3: any,
	_Cq3: any,
	_Dq3: any,
	_Eq3: any,
	_Fq3: any;
declare var _XV2: boolean;
declare var _v8: any;
declare var g_CurrentGraphics: any;
declare var _Gq3: any;
declare var _ja3: any;
declare var _Hq3: number;
declare var _Iq3: boolean;
declare var _Jq3: number;
declare var _Kq3: number;
declare var _Op2: number;
declare var _Lq3: number;
declare var _Mq3: number;
declare var _Nq3: number;
declare var _vD: string;
declare var _A91: number;
declare var _O91: number;
declare var _P91: number;
declare var __e1: boolean;
declare var _0f1: boolean;
declare var _6f1: boolean;
declare var _1f1: number;
declare var _2f1: number;
declare var _C91: number;
declare var _D91: number;
declare var _B91: boolean;
declare var _5f1: boolean;
declare var _7f1: {
	x: number;
	y: number;
	w: number;
	h: number;
};
declare var _jA: boolean;
declare var _Oq3: boolean;
declare var _Pq3: number;
declare var _Qq3: number;
declare var _Rq3: number;
declare var _Sq3: number;
declare var _Tq3: number;
declare var _Uq3: number;
declare var _Yq3: any;
declare function _Zq3(_dC: any): boolean;
declare function exception_unhandled_handler(_CN: any): any;
declare function __q3(event: any): boolean;
declare function _1r3(error: any): boolean;
declare var GMS_API: {
	debug_msg: typeof show_debug_message;
	ds_list_size: typeof ds_list_size;
	ds_list_find_value: typeof ds_list_find_value;
	json_encode: typeof json_encode;
	json_decode: typeof json_decode;
	extension_get_option_value: typeof extension_get_option_value;
	send_async_event_social: typeof _7r3;
	get_facebook_app_id: typeof _8r3;
	get_app_version_string: typeof _9r3;
};
declare function _8r3(): any;
declare function _9r3(): string;
declare function _7r3(_ar3: any): void;
declare var _jt: any;
declare function _dr3(): void;
declare function _er3(): void;
declare function CreateDebugConsole(): void;
declare function _gr3(): void;
declare function _hr3(_5u: any): string;
declare function _ir3(): void;
declare function _6e(_DM1: any, _PT2: any): void;
declare function _jr3(_cD: any): void;
declare function _y_2(): void;
declare var _Zv: any;
declare function GameMaker_Init(): void;
declare function _Xq3(): void;
declare function _ur3(_JT2: any, x: any, y: any, colour: any, text: any): void;
declare function _qr3(_JT2: any, _Q6: any, _R6: any): void;
declare function _LD2(
	_v8: any,
	_Q6: any,
	_R6: any,
	_vr3: any,
	_8g3: any,
	_wr3: any,
): void;
declare function _zr3(_PP2: any): void;
declare function _Br3(_vi: any): number;
declare function _ko2(_hx: any, _Dr3: any): void;
declare function _Qr3(_Rr3: any): void;
declare function _sr3(): void;
declare function _Sr3(_26: any): void;
declare function _Tr3(): void;
declare function _Ur3(): void;
declare function _Vr3(): void;
declare function _Wr3(): void;
declare function _Xr3(): void;
declare function _da3(): void;
declare function _Yr3(): number;
declare function _Zr3(): number;
declare function _pA(): number;
declare function _qA(): number;
declare function __r3(string: any): string;
declare function _WK2(_1s3: any): boolean;
declare function _2s3(_1s3: any): boolean;
declare function _3s3(_1s3: any): boolean;
declare function _5s3(_yQ1: any): string;
declare function _6s3(_12: any): string;
declare function _7s3(_ej: any): Uint8Array;
declare function _9s3(_KI2: any): any;
declare function _as3(_KI2: any): any;
declare function _bs3(_ej: any): ArrayBuffer;
declare function _cs3(): void;
declare var _ds3: number;
declare var _es3: number;
declare function _tr3(): void;
type Functions =
	| gml_Room_rm_master_Create
	| gml_RoomCC_rm_master_2_Create
	| gml_RoomCC_rm_master_2_PreCreate
	| gml_RoomCC_rm_master_3_PreCreate
	| gml_RoomCC_rm_master_4_PreCreate
	| gml_RoomCC_rm_master_5_PreCreate
	| gml_RoomCC_rm_master_6_PreCreate
	| gml_RoomCC_rm_master_7_PreCreate
	| gml_RoomCC_rm_master_8_PreCreate
	| gml_RoomCC_rm_master_9_PreCreate
	| gml_RoomCC_rm_master_10_PreCreate
	| gml_RoomCC_rm_master_11_PreCreate
	| gml_RoomCC_rm_master_12_PreCreate
	| gml_RoomCC_rm_master_13_PreCreate
	| gml_RoomCC_rm_master_14_PreCreate
	| gml_RoomCC_rm_master_15_PreCreate
	| gml_RoomCC_rm_master_16_PreCreate
	| gml_RoomCC_rm_master_17_PreCreate
	| gml_RoomCC_rm_master_18_PreCreate
	| gml_RoomCC_rm_master_20_Create
	| gml_RoomCC_rm_master_20_PreCreate
	| gml_RoomCC_rm_master_21_Create
	| gml_RoomCC_rm_master_21_PreCreate
	| gml_RoomCC_rm_title_0_PreCreate
	| gml_Room_rm_details_Create
	| gml_RoomCC_rm_details_0_PreCreate
	| gml_RoomCC_rm_details_1_PreCreate
	| gml_RoomCC_rm_details_2_PreCreate
	| gml_RoomCC_rm_details_3_PreCreate
	| gml_RoomCC_rm_details_4_PreCreate
	| gml_RoomCC_rm_details_5_PreCreate
	| gml_RoomCC_rm_details_6_PreCreate
	| gml_RoomCC_rm_details_7_PreCreate
	| gml_RoomCC_rm_details_8_PreCreate
	| gml_RoomCC_rm_details_9_PreCreate
	| gml_RoomCC_rm_details_10_PreCreate
	| gml_RoomCC_rm_details_11_PreCreate
	| gml_RoomCC_rm_details_12_Create
	| gml_RoomCC_rm_details_12_PreCreate
	| gml_RoomCC_rm_details_13_PreCreate
	| gml_RoomCC_rm_details_14_PreCreate
	| gml_RoomCC_rm_details_15_PreCreate
	| gml_RoomCC_rm_details_16_PreCreate
	| gml_Room_rm_choose_team_Create
	| gml_RoomCC_rm_choose_team_0_PreCreate
	| gml_RoomCC_rm_choose_team_1_PreCreate
	| gml_RoomCC_rm_choose_team_2_PreCreate
	| gml_RoomCC_rm_choose_team_3_PreCreate
	| gml_RoomCC_rm_choose_team_6_PreCreate
	| gml_RoomCC_rm_choose_team_7_PreCreate
	| gml_RoomCC_rm_choose_team_8_PreCreate
	| gml_RoomCC_rm_choose_team_9_PreCreate
	| gml_RoomCC_rm_choose_team_10_PreCreate
	| gml_RoomCC_rm_choose_team_11_PreCreate
	| gml_Room_rm_choose_face_Create
	| gml_RoomCC_rm_choose_face_0_PreCreate
	| gml_RoomCC_rm_choose_face_1_PreCreate
	| gml_RoomCC_rm_choose_face_2_PreCreate
	| gml_RoomCC_rm_choose_face_3_PreCreate
	| gml_RoomCC_rm_choose_face_4_PreCreate
	| gml_Room_rm_draft_Create
	| gml_RoomCC_rm_draft_0_PreCreate
	| gml_RoomCC_rm_draft_1_PreCreate
	| gml_RoomCC_rm_draft_3_PreCreate
	| gml_RoomCC_rm_draft_4_PreCreate
	| gml_RoomCC_rm_draft_5_PreCreate
	| gml_RoomCC_rm_draft_6_PreCreate
	| gml_RoomCC_rm_draft_8_PreCreate
	| gml_RoomCC_rm_draft_9_PreCreate
	| gml_RoomCC_rm_draft_10_PreCreate
	| gml_Room_rm_edit_team_Create
	| gml_RoomCC_rm_edit_team_0_PreCreate
	| gml_RoomCC_rm_edit_team_1_PreCreate
	| gml_RoomCC_rm_edit_team_2_PreCreate
	| gml_RoomCC_rm_edit_team_3_PreCreate
	| gml_RoomCC_rm_edit_team_4_PreCreate
	| gml_RoomCC_rm_edit_team_5_PreCreate
	| gml_RoomCC_rm_edit_team_6_PreCreate
	| gml_RoomCC_rm_edit_team_7_PreCreate
	| gml_RoomCC_rm_edit_team_8_PreCreate
	| gml_RoomCC_rm_edit_team_9_PreCreate
	| gml_RoomCC_rm_edit_team_10_PreCreate
	| gml_RoomCC_rm_edit_team_11_PreCreate
	| gml_RoomCC_rm_edit_team_12_PreCreate
	| gml_RoomCC_rm_edit_team_13_PreCreate
	| gml_RoomCC_rm_edit_team_14_PreCreate
	| gml_RoomCC_rm_edit_team_15_PreCreate
	| gml_RoomCC_rm_edit_team_16_PreCreate
	| gml_RoomCC_rm_edit_team_17_PreCreate
	| gml_RoomCC_rm_edit_team_18_PreCreate
	| gml_RoomCC_rm_edit_team_19_PreCreate
	| gml_RoomCC_rm_edit_team_20_PreCreate
	| gml_RoomCC_rm_edit_team_21_PreCreate
	| gml_RoomCC_rm_edit_team_22_PreCreate
	| gml_RoomCC_rm_edit_team_23_PreCreate
	| gml_RoomCC_rm_edit_team_24_PreCreate
	| gml_RoomCC_rm_edit_team_27_PreCreate
	| gml_RoomCC_rm_edit_team_28_PreCreate
	| gml_RoomCC_rm_edit_team_29_PreCreate
	| gml_RoomCC_rm_edit_team_30_PreCreate
	| gml_RoomCC_rm_edit_team_31_PreCreate
	| gml_RoomCC_rm_edit_team_32_PreCreate
	| gml_RoomCC_rm_edit_team_33_PreCreate
	| gml_RoomCC_rm_edit_team_34_PreCreate
	| gml_RoomCC_rm_edit_team_35_PreCreate
	| gml_RoomCC_rm_edit_team_36_PreCreate
	| gml_RoomCC_rm_edit_team_37_PreCreate
	| gml_RoomCC_rm_edit_team_38_PreCreate
	| gml_RoomCC_rm_edit_team_39_PreCreate
	| gml_RoomCC_rm_edit_team_40_PreCreate
	| gml_RoomCC_rm_edit_team_41_PreCreate
	| gml_RoomCC_rm_edit_team_42_PreCreate
	| gml_RoomCC_rm_edit_team_43_PreCreate
	| gml_RoomCC_rm_edit_team_44_PreCreate
	| gml_Room_rm_freeagents_Create
	| gml_RoomCC_rm_freeagents_1_PreCreate
	| gml_RoomCC_rm_freeagents_2_PreCreate
	| gml_RoomCC_rm_freeagents_3_PreCreate
	| gml_RoomCC_rm_freeagents_5_PreCreate
	| gml_RoomCC_rm_freeagents_8_PreCreate
	| gml_Room_rm_freeagents2_Create
	| gml_RoomCC_rm_freeagents2_1_PreCreate
	| gml_RoomCC_rm_freeagents2_2_PreCreate
	| gml_RoomCC_rm_freeagents2_3_PreCreate
	| gml_RoomCC_rm_freeagents2_4_PreCreate
	| gml_RoomCC_rm_freeagents2_5_PreCreate
	| gml_RoomCC_rm_freeagents2_6_PreCreate
	| gml_RoomCC_rm_freeagents2_7_PreCreate
	| gml_RoomCC_rm_freeagents2_8_PreCreate
	| gml_RoomCC_rm_freeagents2_9_PreCreate
	| gml_RoomCC_rm_freeagents2_10_PreCreate
	| gml_RoomCC_rm_freeagents2_17_PreCreate
	| gml_RoomCC_rm_freeagents2_19_PreCreate
	| gml_RoomCC_rm_freeagents2_21_PreCreate
	| gml_RoomCC_rm_freeagents2_24_PreCreate
	| gml_RoomCC_rm_freeagents2_27_PreCreate
	| gml_RoomCC_rm_freeagents2_28_PreCreate
	| gml_RoomCC_rm_freeagents2_29_PreCreate
	| gml_Room_rm_frontoffice_Create
	| gml_RoomCC_rm_frontoffice_0_PreCreate
	| gml_RoomCC_rm_frontoffice_1_PreCreate
	| gml_RoomCC_rm_frontoffice_5_PreCreate
	| gml_RoomCC_rm_frontoffice_6_PreCreate
	| gml_RoomCC_rm_frontoffice_7_PreCreate
	| gml_RoomCC_rm_frontoffice_8_PreCreate
	| gml_RoomCC_rm_frontoffice_9_PreCreate
	| gml_RoomCC_rm_frontoffice_10_PreCreate
	| gml_RoomCC_rm_frontoffice_11_PreCreate
	| gml_RoomCC_rm_frontoffice_12_PreCreate
	| gml_RoomCC_rm_frontoffice_15_PreCreate
	| gml_RoomCC_rm_frontoffice_17_PreCreate
	| gml_RoomCC_rm_frontoffice_18_PreCreate
	| gml_RoomCC_rm_frontoffice_19_PreCreate
	| gml_RoomCC_rm_frontoffice_20_PreCreate
	| gml_RoomCC_rm_frontoffice_22_PreCreate
	| gml_RoomCC_rm_frontoffice_23_PreCreate
	| gml_RoomCC_rm_frontoffice_26_Create
	| gml_RoomCC_rm_frontoffice_26_PreCreate
	| gml_RoomCC_rm_frontoffice_27_PreCreate
	| gml_Room_rm_halloffame_Create
	| gml_RoomCC_rm_halloffame_0_PreCreate
	| gml_RoomCC_rm_halloffame_1_PreCreate
	| gml_RoomCC_rm_halloffame_2_PreCreate
	| gml_RoomCC_rm_halloffame_3_Create
	| gml_RoomCC_rm_halloffame_3_PreCreate
	| gml_RoomCC_rm_halloffame_4_PreCreate
	| gml_RoomCC_rm_halloffame_5_PreCreate
	| gml_RoomCC_rm_halloffame_6_PreCreate
	| gml_RoomCC_rm_halloffame_7_PreCreate
	| gml_RoomCC_rm_halloffame_8_Create
	| gml_RoomCC_rm_halloffame_8_PreCreate
	| gml_Room_rm_halloffame_retrobowls_Create
	| gml_RoomCC_rm_halloffame_retrobowls_0_PreCreate
	| gml_RoomCC_rm_halloffame_retrobowls_1_PreCreate
	| gml_RoomCC_rm_halloffame_retrobowls_2_PreCreate
	| gml_RoomCC_rm_halloffame_retrobowls_4_Create
	| gml_RoomCC_rm_halloffame_retrobowls_4_PreCreate
	| gml_RoomCC_rm_halloffame_retrobowls_5_Create
	| gml_RoomCC_rm_halloffame_retrobowls_5_PreCreate
	| gml_RoomCC_rm_halloffame_retrobowls_6_PreCreate
	| gml_RoomCC_rm_halloffame_retrobowls_7_PreCreate
	| gml_Room_rm_halloffame_players_Create
	| gml_RoomCC_rm_halloffame_players_0_PreCreate
	| gml_RoomCC_rm_halloffame_players_1_PreCreate
	| gml_RoomCC_rm_halloffame_players_2_PreCreate
	| gml_RoomCC_rm_halloffame_players_3_PreCreate
	| gml_RoomCC_rm_halloffame_players_4_PreCreate
	| gml_RoomCC_rm_halloffame_players_6_PreCreate
	| gml_RoomCC_rm_halloffame_players_7_Create
	| gml_RoomCC_rm_halloffame_players_7_PreCreate
	| gml_RoomCC_rm_halloffame_players_8_PreCreate
	| gml_RoomCC_rm_halloffame_players_9_PreCreate
	| gml_RoomCC_rm_halloffame_players_10_PreCreate
	| gml_Room_rm_halloffame_player_records_Create
	| gml_RoomCC_rm_halloffame_player_records_0_PreCreate
	| gml_RoomCC_rm_halloffame_player_records_1_PreCreate
	| gml_RoomCC_rm_halloffame_player_records_2_PreCreate
	| gml_RoomCC_rm_halloffame_player_records_3_Create
	| gml_RoomCC_rm_halloffame_player_records_3_PreCreate
	| gml_RoomCC_rm_halloffame_player_records_4_PreCreate
	| gml_RoomCC_rm_halloffame_player_records_5_Create
	| gml_RoomCC_rm_halloffame_player_records_5_PreCreate
	| gml_RoomCC_rm_halloffame_player_records_6_PreCreate
	| gml_RoomCC_rm_halloffame_player_records_7_PreCreate
	| gml_Room_rm_home_Create
	| gml_RoomCC_rm_home_1_PreCreate
	| gml_RoomCC_rm_home_2_PreCreate
	| gml_RoomCC_rm_home_3_PreCreate
	| gml_RoomCC_rm_home_4_PreCreate
	| gml_RoomCC_rm_home_5_PreCreate
	| gml_RoomCC_rm_home_6_PreCreate
	| gml_RoomCC_rm_home_7_PreCreate
	| gml_RoomCC_rm_home_8_PreCreate
	| gml_RoomCC_rm_home_9_PreCreate
	| gml_RoomCC_rm_home_10_PreCreate
	| gml_RoomCC_rm_home_16_PreCreate
	| gml_RoomCC_rm_home_17_PreCreate
	| gml_RoomCC_rm_home_18_PreCreate
	| gml_RoomCC_rm_home_20_Create
	| gml_RoomCC_rm_home_20_PreCreate
	| gml_RoomCC_rm_home_22_PreCreate
	| gml_RoomCC_rm_kongregate_0_PreCreate
	| gml_RoomCC_rm_kongregate_2_PreCreate
	| gml_RoomCC_rm_kongregate_3_PreCreate
	| gml_Room_rm_league_Create
	| gml_RoomCC_rm_league_0_PreCreate
	| gml_RoomCC_rm_league_1_PreCreate
	| gml_RoomCC_rm_league_2_PreCreate
	| gml_RoomCC_rm_league_3_PreCreate
	| gml_RoomCC_rm_league_4_PreCreate
	| gml_RoomCC_rm_league_5_PreCreate
	| gml_RoomCC_rm_league_6_PreCreate
	| gml_RoomCC_rm_league_7_PreCreate
	| gml_RoomCC_rm_league_8_PreCreate
	| gml_RoomCC_rm_league_10_PreCreate
	| gml_RoomCC_rm_league_11_PreCreate
	| gml_RoomCC_rm_league_12_PreCreate
	| gml_RoomCC_rm_league_14_PreCreate
	| gml_RoomCC_rm_league_15_PreCreate
	| gml_Room_rm_options_Create
	| gml_RoomCC_rm_options_0_PreCreate
	| gml_RoomCC_rm_options_1_PreCreate
	| gml_RoomCC_rm_options_2_PreCreate
	| gml_RoomCC_rm_options_3_PreCreate
	| gml_RoomCC_rm_options_4_PreCreate
	| gml_RoomCC_rm_options_6_PreCreate
	| gml_RoomCC_rm_options_7_PreCreate
	| gml_RoomCC_rm_options_8_PreCreate
	| gml_RoomCC_rm_options_9_PreCreate
	| gml_RoomCC_rm_options_11_PreCreate
	| gml_RoomCC_rm_options_12_PreCreate
	| gml_RoomCC_rm_options_13_PreCreate
	| gml_RoomCC_rm_options_14_PreCreate
	| gml_RoomCC_rm_options_15_PreCreate
	| gml_RoomCC_rm_options_16_PreCreate
	| gml_RoomCC_rm_options_17_PreCreate
	| gml_RoomCC_rm_options_18_PreCreate
	| gml_RoomCC_rm_options_19_PreCreate
	| gml_RoomCC_rm_options_20_PreCreate
	| gml_RoomCC_rm_options_21_PreCreate
	| gml_RoomCC_rm_options_22_PreCreate
	| gml_RoomCC_rm_options_23_PreCreate
	| gml_RoomCC_rm_options_25_PreCreate
	| gml_RoomCC_rm_options_26_PreCreate
	| gml_RoomCC_rm_options_27_PreCreate
	| gml_RoomCC_rm_options_28_PreCreate
	| gml_RoomCC_rm_options_29_PreCreate
	| gml_RoomCC_rm_options_30_PreCreate
	| gml_RoomCC_rm_options_31_PreCreate
	| gml_RoomCC_rm_options_32_PreCreate
	| gml_RoomCC_rm_options_33_PreCreate
	| gml_RoomCC_rm_options_34_PreCreate
	| gml_RoomCC_rm_options_35_PreCreate
	| gml_RoomCC_rm_options_36_PreCreate
	| gml_RoomCC_rm_options_37_PreCreate
	| gml_RoomCC_rm_options_38_PreCreate
	| gml_RoomCC_rm_options_39_PreCreate
	| gml_RoomCC_rm_options_40_PreCreate
	| gml_RoomCC_rm_options_41_PreCreate
	| gml_RoomCC_rm_options_42_PreCreate
	| gml_RoomCC_rm_options_44_Create
	| gml_RoomCC_rm_options_44_PreCreate
	| gml_RoomCC_rm_options_45_Create
	| gml_RoomCC_rm_options_45_PreCreate
	| gml_RoomCC_rm_options_46_Create
	| gml_RoomCC_rm_options_46_PreCreate
	| gml_Room_rm_playoffs_Create
	| gml_RoomCC_rm_playoffs_22_PreCreate
	| gml_RoomCC_rm_playoffs_23_PreCreate
	| gml_RoomCC_rm_playoffs_25_PreCreate
	| gml_RoomCC_rm_playoffs_26_PreCreate
	| gml_RoomCC_rm_playoffs_27_PreCreate
	| gml_RoomCC_rm_playoffs_28_PreCreate
	| gml_RoomCC_rm_playoffs_29_PreCreate
	| gml_RoomCC_rm_playoffs_30_PreCreate
	| gml_Room_rm_playoffs2_Create
	| gml_RoomCC_rm_playoffs2_12_PreCreate
	| gml_RoomCC_rm_playoffs2_13_PreCreate
	| gml_RoomCC_rm_playoffs2_15_PreCreate
	| gml_RoomCC_rm_playoffs2_16_PreCreate
	| gml_RoomCC_rm_playoffs2_17_PreCreate
	| gml_RoomCC_rm_playoffs2_18_PreCreate
	| gml_RoomCC_rm_playoffs2_21_PreCreate
	| gml_RoomCC_rm_playoffs2_22_PreCreate
	| gml_Room_rm_pre_match_Create
	| gml_RoomCC_rm_pre_match_0_PreCreate
	| gml_RoomCC_rm_pre_match_1_PreCreate
	| gml_RoomCC_rm_pre_match_2_PreCreate
	| gml_RoomCC_rm_pre_match_3_PreCreate
	| gml_RoomCC_rm_pre_match_4_PreCreate
	| gml_RoomCC_rm_pre_match_5_PreCreate
	| gml_RoomCC_rm_pre_match_6_PreCreate
	| gml_RoomCC_rm_pre_match_7_PreCreate
	| gml_RoomCC_rm_pre_match_8_PreCreate
	| gml_RoomCC_rm_pre_match_9_PreCreate
	| gml_RoomCC_rm_pre_match_10_PreCreate
	| gml_RoomCC_rm_pre_match_11_PreCreate
	| gml_RoomCC_rm_pre_match_12_PreCreate
	| gml_RoomCC_rm_pre_match_14_Create
	| gml_RoomCC_rm_pre_match_14_PreCreate
	| gml_Room_rm_profile_player_Create
	| gml_RoomCC_rm_profile_player_0_PreCreate
	| gml_RoomCC_rm_profile_player_1_PreCreate
	| gml_RoomCC_rm_profile_player_2_PreCreate
	| gml_RoomCC_rm_profile_player_3_PreCreate
	| gml_RoomCC_rm_profile_player_4_PreCreate
	| gml_RoomCC_rm_profile_player_8_PreCreate
	| gml_RoomCC_rm_profile_player_9_PreCreate
	| gml_RoomCC_rm_profile_player_10_PreCreate
	| gml_RoomCC_rm_profile_player_11_PreCreate
	| gml_RoomCC_rm_profile_player_13_PreCreate
	| gml_RoomCC_rm_profile_player_15_PreCreate
	| gml_RoomCC_rm_profile_player_16_PreCreate
	| gml_RoomCC_rm_profile_player_17_PreCreate
	| gml_RoomCC_rm_profile_player_18_PreCreate
	| gml_RoomCC_rm_profile_player_19_PreCreate
	| gml_RoomCC_rm_profile_player_20_PreCreate
	| gml_RoomCC_rm_profile_player_21_PreCreate
	| gml_RoomCC_rm_profile_player_22_PreCreate
	| gml_RoomCC_rm_profile_player_23_PreCreate
	| gml_RoomCC_rm_profile_player_24_PreCreate
	| gml_RoomCC_rm_profile_player_25_PreCreate
	| gml_RoomCC_rm_profile_player_26_PreCreate
	| gml_RoomCC_rm_profile_player_27_PreCreate
	| gml_RoomCC_rm_profile_player_28_PreCreate
	| gml_RoomCC_rm_profile_player_29_PreCreate
	| gml_RoomCC_rm_profile_player_30_PreCreate
	| gml_RoomCC_rm_profile_player_31_PreCreate
	| gml_RoomCC_rm_profile_player_32_PreCreate
	| gml_RoomCC_rm_profile_player_33_PreCreate
	| gml_RoomCC_rm_profile_player_36_PreCreate
	| gml_RoomCC_rm_profile_player_37_PreCreate
	| gml_RoomCC_rm_profile_player_38_PreCreate
	| gml_RoomCC_rm_profile_player_39_PreCreate
	| gml_RoomCC_rm_profile_player_40_PreCreate
	| gml_RoomCC_rm_profile_player_41_PreCreate
	| gml_RoomCC_rm_profile_player_42_PreCreate
	| gml_RoomCC_rm_profile_player_43_PreCreate
	| gml_RoomCC_rm_profile_player_44_PreCreate
	| gml_RoomCC_rm_profile_player_45_PreCreate
	| gml_RoomCC_rm_profile_player_46_PreCreate
	| gml_RoomCC_rm_profile_player_47_PreCreate
	| gml_RoomCC_rm_profile_player_48_PreCreate
	| gml_RoomCC_rm_profile_player_49_PreCreate
	| gml_RoomCC_rm_profile_player_50_PreCreate
	| gml_RoomCC_rm_profile_player_51_PreCreate
	| gml_Room_rm_profile_staff_Create
	| gml_RoomCC_rm_profile_staff_0_PreCreate
	| gml_RoomCC_rm_profile_staff_1_PreCreate
	| gml_RoomCC_rm_profile_staff_2_PreCreate
	| gml_RoomCC_rm_profile_staff_3_PreCreate
	| gml_RoomCC_rm_profile_staff_4_PreCreate
	| gml_RoomCC_rm_profile_staff_5_PreCreate
	| gml_RoomCC_rm_profile_staff_6_PreCreate
	| gml_RoomCC_rm_profile_staff_7_PreCreate
	| gml_RoomCC_rm_profile_staff_8_PreCreate
	| gml_RoomCC_rm_profile_staff_9_PreCreate
	| gml_RoomCC_rm_profile_staff_11_PreCreate
	| gml_RoomCC_rm_profile_staff_12_PreCreate
	| gml_RoomCC_rm_profile_staff_13_PreCreate
	| gml_RoomCC_rm_profile_staff_14_PreCreate
	| gml_RoomCC_rm_profile_staff_15_PreCreate
	| gml_RoomCC_rm_profile_staff_16_PreCreate
	| gml_RoomCC_rm_profile_staff_17_PreCreate
	| gml_RoomCC_rm_profile_staff_18_PreCreate
	| gml_RoomCC_rm_profile_staff_19_PreCreate
	| gml_RoomCC_rm_profile_staff_20_PreCreate
	| gml_RoomCC_rm_profile_staff_21_PreCreate
	| gml_RoomCC_rm_profile_staff_22_PreCreate
	| gml_Room_rm_post_match_Create
	| gml_RoomCC_rm_post_match_0_PreCreate
	| gml_RoomCC_rm_post_match_1_PreCreate
	| gml_RoomCC_rm_post_match_2_PreCreate
	| gml_RoomCC_rm_post_match_4_PreCreate
	| gml_RoomCC_rm_post_match_5_PreCreate
	| gml_RoomCC_rm_post_match_9_PreCreate
	| gml_RoomCC_rm_post_match_10_PreCreate
	| gml_Room_rm_roster_Create
	| gml_RoomCC_rm_roster_0_PreCreate
	| gml_RoomCC_rm_roster_1_PreCreate
	| gml_RoomCC_rm_roster_5_PreCreate
	| gml_RoomCC_rm_roster_7_PreCreate
	| gml_RoomCC_rm_roster_8_PreCreate
	| gml_RoomCC_rm_roster_10_PreCreate
	| gml_Room_rm_stats_Create
	| gml_RoomCC_rm_stats_2_PreCreate
	| gml_RoomCC_rm_stats_3_PreCreate
	| gml_Room_rm_stats_player_Create
	| gml_RoomCC_rm_stats_player_0_PreCreate
	| gml_RoomCC_rm_stats_player_1_PreCreate
	| gml_RoomCC_rm_stats_player_2_PreCreate
	| gml_RoomCC_rm_stats_player_3_PreCreate
	| gml_RoomCC_rm_stats_player_4_PreCreate
	| gml_RoomCC_rm_stats_player_5_PreCreate
	| gml_RoomCC_rm_stats_player_6_PreCreate
	| gml_RoomCC_rm_stats_player_7_PreCreate
	| gml_RoomCC_rm_stats_player_8_PreCreate
	| gml_RoomCC_rm_stats_player_10_PreCreate
	| gml_RoomCC_rm_stats_player_11_PreCreate
	| gml_RoomCC_rm_stats_player_12_PreCreate
	| gml_RoomCC_rm_stats_player_13_PreCreate
	| gml_RoomCC_rm_stats_player_14_PreCreate
	| gml_RoomCC_rm_stats_player_15_PreCreate
	| gml_RoomCC_rm_stats_player_16_PreCreate
	| gml_RoomCC_rm_stats_player_17_PreCreate
	| gml_RoomCC_rm_stats_player_18_PreCreate
	| gml_RoomCC_rm_stats_player_19_PreCreate
	| gml_RoomCC_rm_stats_player_20_PreCreate
	| gml_RoomCC_rm_stats_player_21_PreCreate
	| gml_RoomCC_rm_stats_player_22_Create
	| gml_RoomCC_rm_stats_player_22_PreCreate
	| gml_RoomCC_rm_stats_player_23_Create
	| gml_RoomCC_rm_stats_player_23_PreCreate
	| gml_Room_rm_meeting_player_Create
	| gml_RoomCC_rm_meeting_player_0_PreCreate
	| gml_RoomCC_rm_meeting_player_5_PreCreate
	| gml_RoomCC_rm_meeting_player_6_PreCreate
	| gml_RoomCC_rm_meeting_player_7_PreCreate
	| gml_RoomCC_rm_meeting_player_8_PreCreate
	| gml_RoomCC_rm_meeting_player_9_PreCreate
	| gml_RoomCC_rm_meeting_player_10_PreCreate
	| gml_RoomCC_rm_meeting_player_11_PreCreate
	| gml_RoomCC_rm_meeting_player_12_PreCreate
	| gml_RoomCC_rm_meeting_player_13_PreCreate
	| gml_RoomCC_rm_meeting_player_14_PreCreate
	| gml_RoomCC_rm_meeting_player_16_PreCreate
	| gml_RoomCC_rm_meeting_player_18_PreCreate
	| gml_RoomCC_rm_meeting_player_19_PreCreate
	| gml_Room_rm_team_editor_Create
	| gml_RoomCC_rm_team_editor_0_PreCreate
	| gml_RoomCC_rm_team_editor_1_PreCreate
	| gml_RoomCC_rm_team_editor_2_PreCreate
	| gml_RoomCC_rm_team_editor_3_PreCreate
	| gml_RoomCC_rm_team_editor_4_PreCreate
	| gml_RoomCC_rm_team_editor_5_PreCreate
	| gml_RoomCC_rm_team_editor_6_PreCreate
	| gml_RoomCC_rm_team_editor_7_PreCreate
	| gml_RoomCC_rm_team_editor_8_PreCreate
	| gml_RoomCC_rm_team_editor_9_PreCreate
	| gml_RoomCC_rm_team_editor_10_PreCreate
	| gml_RoomCC_rm_team_editor_12_PreCreate
	| gml_RoomCC_rm_team_editor_13_PreCreate
	| gml_RoomCC_rm_team_editor_14_PreCreate
	| gml_RoomCC_rm_team_editor_16_PreCreate
	| gml_RoomCC_rm_team_editor_17_PreCreate
	| gml_RoomCC_rm_team_editor_18_PreCreate
	| gml_RoomCC_rm_team_editor_19_PreCreate
	| gml_RoomCC_rm_team_editor_20_PreCreate
	| gml_RoomCC_rm_team_editor_21_PreCreate
	| gml_Room_rm_training_Create
	| gml_RoomCC_rm_training_0_PreCreate
	| gml_RoomCC_rm_training_1_PreCreate
	| gml_RoomCC_rm_training_2_PreCreate
	| gml_RoomCC_rm_training_3_PreCreate
	| gml_RoomCC_rm_training_5_PreCreate
	| gml_Room_rm_viewhires_Create
	| gml_RoomCC_rm_viewhires_0_PreCreate
	| gml_RoomCC_rm_viewhires_1_PreCreate
	| gml_RoomCC_rm_viewhires_2_PreCreate
	| gml_RoomCC_rm_viewhires_3_PreCreate
	| gml_RoomCC_rm_viewhires_4_PreCreate
	| gml_RoomCC_rm_viewhires_5_PreCreate
	| gml_RoomCC_rm_viewhires_6_PreCreate
	| gml_RoomCC_rm_viewhires_7_PreCreate
	| gml_RoomCC_rm_viewhires_8_PreCreate
	| gml_RoomCC_rm_viewhires_9_PreCreate
	| gml_RoomCC_rm_viewhires_10_PreCreate
	| gml_RoomCC_rm_viewhires_11_PreCreate
	| gml_RoomCC_rm_viewhires_12_PreCreate
	| gml_RoomCC_rm_viewhires_13_PreCreate
	| gml_RoomCC_rm_viewhires_14_PreCreate
	| gml_RoomCC_rm_viewhires_18_PreCreate
	| gml_Room_rm_watermark_Create
	| gml_RoomCC_rm_watermark_0_PreCreate
	| gml_RoomCC_rm_watermark_1_PreCreate
	| gml_RoomCC_rm_watermark_2_PreCreate
	| gml_RoomCC_rm_watermark_3_PreCreate
	| gml_RoomCC_rm_watermark_4_PreCreate
	| gml_RoomCC_rm_watermark_6_PreCreate
	| gml_RoomCC_rm_watermark_7_PreCreate
	| gml_Room_rm_winners_Create
	| gml_RoomCC_rm_winners_0_PreCreate
	| gml_RoomCC_rm_winners_1_PreCreate
	| gml_RoomCC_rm_winners_2_PreCreate
	| gml_RoomCC_rm_winners_3_PreCreate
	| gml_RoomCC_rm_winners_4_PreCreate
	| gml_RoomCC_rm_winners_5_PreCreate
	| gml_RoomCC_rm_winners_6_PreCreate
	| gml_Room_rm_xp_Create
	| gml_RoomCC_rm_xp_0_PreCreate
	| gml_RoomCC_rm_xp_1_PreCreate
	| gml_RoomCC_rm_xp_2_PreCreate
	| gml_RoomCC_rm_xp_3_PreCreate
	| gml_RoomCC_rm_xp_7_PreCreate
	| gml_RoomCC_rm_xp_9_PreCreate
	| gml_RoomCC_rm_xp_10_PreCreate
	| gml_RoomCC_rm_xp_15_PreCreate
	| gml_RoomCC_rm_xp_16_PreCreate
	| gml_RoomCC_rm_xp_17_PreCreate
	| gml_Room_rm_ad_retrogoal_Create
	| gml_RoomCC_rm_ad_retrogoal_1_PreCreate
	| gml_Room_rm_options2_Create
	| gml_RoomCC_rm_options2_0_PreCreate
	| gml_RoomCC_rm_options2_1_PreCreate
	| gml_RoomCC_rm_options2_2_PreCreate
	| gml_RoomCC_rm_options2_3_PreCreate
	| gml_RoomCC_rm_options2_4_PreCreate
	| gml_RoomCC_rm_options2_5_PreCreate
	| gml_RoomCC_rm_options2_6_PreCreate
	| gml_RoomCC_rm_options2_7_PreCreate
	| gml_RoomCC_rm_options2_8_PreCreate
	| gml_Room_rm_options_mapping_Create
	| gml_RoomCC_rm_options_mapping_0_PreCreate
	| gml_RoomCC_rm_options_mapping_1_PreCreate
	| gml_RoomCC_rm_options_mapping_2_PreCreate
	| gml_RoomCC_rm_options_mapping_3_PreCreate
	| gml_RoomCC_rm_options_mapping_4_PreCreate
	| gml_Room_rm_season_tally_Create
	| gml_RoomCC_rm_season_tally_0_PreCreate
	| gml_RoomCC_rm_season_tally_1_PreCreate
	| gml_RoomCC_rm_season_tally_2_PreCreate
	| gml_RoomCC_rm_season_tally_3_PreCreate
	| gml_RoomCC_rm_season_tally_4_PreCreate
	| gml_RoomCC_rm_season_tally_5_PreCreate
	| gml_RoomCC_rm_season_tally_8_PreCreate
	| gml_Room_rm_qb_life_Create
	| gml_RoomCC_rm_qb_life_0_PreCreate
	| gml_RoomCC_rm_qb_life_1_PreCreate
	| gml_RoomCC_rm_qb_life_4_PreCreate
	| gml_RoomCC_rm_qb_life_5_PreCreate
	| gml_RoomCC_rm_qb_life_6_PreCreate
	| gml_RoomCC_rm_qb_life_7_PreCreate
	| gml_RoomCC_rm_qb_life_8_PreCreate
	| gml_RoomCC_rm_qb_life_9_PreCreate
	| gml_RoomCC_rm_qb_life_10_PreCreate
	| gml_RoomCC_rm_qb_life_13_PreCreate
	| gml_RoomCC_rm_qb_life_14_PreCreate
	| gml_RoomCC_rm_qb_life_15_PreCreate
	| gml_RoomCC_rm_qb_life_16_PreCreate
	| gml_RoomCC_rm_qb_life_17_PreCreate
	| gml_RoomCC_rm_qb_life_18_PreCreate
	| gml_RoomCC_rm_qb_life_19_PreCreate
	| gml_Room_rm_qb_post_match_Create
	| gml_RoomCC_rm_qb_post_match_0_PreCreate
	| gml_RoomCC_rm_qb_post_match_3_PreCreate
	| gml_RoomCC_rm_qb_post_match_4_PreCreate
	| gml_RoomCC_rm_qb_post_match_5_PreCreate
	| gml_RoomCC_rm_qb_post_match_6_PreCreate
	| gml_RoomCC_rm_qb_post_match_7_PreCreate
	| gml_RoomCC_rm_qb_post_match_8_PreCreate
	| gml_RoomCC_rm_qb_post_match_10_PreCreate
	| gml_RoomCC_rm_qb_post_match_11_PreCreate
	| gml_RoomCC_rm_qb_post_match_13_PreCreate
	| gml_RoomCC_rm_qb_post_match_14_PreCreate
	| gml_Room_rm_qb_shopping_Create
	| gml_RoomCC_rm_qb_shopping_0_PreCreate
	| gml_RoomCC_rm_qb_shopping_1_PreCreate
	| gml_RoomCC_rm_qb_shopping_2_PreCreate
	| gml_RoomCC_rm_qb_shopping_3_PreCreate
	| gml_RoomCC_rm_qb_shopping_4_PreCreate
	| gml_RoomCC_rm_qb_shopping_5_PreCreate
	| gml_RoomCC_rm_qb_shopping_7_PreCreate
	| gml_RoomCC_rm_qb_shopping_8_PreCreate
	| gml_RoomCC_rm_qb_shopping_9_PreCreate
	| gml_RoomCC_rm_qb_shopping_10_PreCreate
	| gml_Room_rm_qb_contract_Create
	| gml_RoomCC_rm_qb_contract_0_PreCreate
	| gml_RoomCC_rm_qb_contract_1_PreCreate
	| gml_RoomCC_rm_qb_contract_3_PreCreate
	| gml_RoomCC_rm_qb_contract_4_PreCreate
	| gml_RoomCC_rm_qb_contract_5_PreCreate
	| gml_RoomCC_rm_qb_contract_6_PreCreate
	| gml_RoomCC_rm_qb_contract_7_PreCreate
	| gml_RoomCC_rm_qb_contract_8_PreCreate
	| gml_RoomCC_rm_qb_contract_9_PreCreate
	| gml_RoomCC_rm_qb_contract_10_PreCreate
	| gml_RoomCC_rm_qb_contract_12_PreCreate
	| gml_RoomCC_rm_qb_contract_13_PreCreate
	| gml_RoomCC_rm_qb_contract_14_PreCreate
	| gml_RoomCC_rm_qb_contract_15_PreCreate
	| gml_RoomCC_rm_qb_contract_16_PreCreate
	| gml_RoomCC_rm_qb_contract_17_PreCreate
	| gml_RoomCC_rm_qb_contract_18_PreCreate
	| gml_RoomCC_rm_qb_contract_19_PreCreate
	| gml_RoomCC_rm_qb_contract_20_PreCreate
	| gml_RoomCC_rm_qb_contract_21_PreCreate
	| gml_RoomCC_rm_qb_contract_22_PreCreate
	| gml_RoomCC_rm_qb_contract_23_PreCreate
	| gml_RoomCC_rm_qb_contract_24_PreCreate
	| gml_RoomCC_rm_qb_contract_25_PreCreate
	| gml_RoomCC_rm_qb_contract_26_PreCreate
	| gml_RoomCC_rm_qb_contract_27_PreCreate
	| gml_RoomCC_rm_qb_contract_28_PreCreate
	| gml_RoomCC_rm_qb_contract_30_PreCreate
	| gml_Room_rm_qb_negotiate_Create
	| gml_RoomCC_rm_qb_negotiate_0_PreCreate
	| gml_RoomCC_rm_qb_negotiate_1_PreCreate
	| gml_RoomCC_rm_qb_negotiate_2_PreCreate
	| gml_RoomCC_rm_qb_negotiate_3_PreCreate
	| gml_RoomCC_rm_qb_negotiate_5_PreCreate
	| gml_RoomCC_rm_qb_negotiate_6_PreCreate
	| gml_Room_rm_qb_post_training_Create
	| gml_RoomCC_rm_qb_post_training_0_PreCreate
	| gml_RoomCC_rm_qb_post_training_3_PreCreate
	| gml_RoomCC_rm_qb_post_training_4_PreCreate
	| gml_RoomCC_rm_qb_post_training_5_PreCreate
	| gml_RoomCC_rm_qb_post_training_6_PreCreate
	| gml_RoomCC_rm_qb_post_training_7_PreCreate
	| gml_RoomCC_rm_qb_post_training_8_PreCreate
	| gml_RoomCC_rm_qb_post_training_10_PreCreate
	| gml_RoomCC_rm_qb_post_training_11_PreCreate
	| gml_RoomCC_rm_qb_post_training_13_PreCreate
	| gml_RoomCC_rm_qb_post_training_14_PreCreate
	| gml_Room_rm_draft_college_Create
	| gml_Room_rm_profile_boss_Create
	| gml_RoomCC_rm_profile_boss_0_PreCreate
	| gml_RoomCC_rm_profile_boss_1_PreCreate
	| gml_RoomCC_rm_profile_boss_2_PreCreate
	| gml_RoomCC_rm_profile_boss_3_PreCreate
	| gml_RoomCC_rm_profile_boss_4_PreCreate
	| gml_RoomCC_rm_profile_boss_5_PreCreate
	| gml_RoomCC_rm_profile_boss_6_PreCreate
	| gml_RoomCC_rm_profile_boss_7_PreCreate
	| gml_RoomCC_rm_profile_boss_8_PreCreate
	| gml_RoomCC_rm_profile_boss_9_PreCreate
	| gml_RoomCC_rm_profile_boss_10_PreCreate
	| gml_RoomCC_rm_profile_boss_11_PreCreate
	| gml_RoomCC_rm_profile_boss_12_PreCreate
	| gml_RoomCC_rm_profile_boss_13_PreCreate
	| gml_RoomCC_rm_profile_boss_14_PreCreate
	| gml_RoomCC_rm_profile_boss_15_PreCreate
	| gml_RoomCC_rm_profile_boss_16_PreCreate
	| gml_Room_rm_exhibition_Create
	| gml_RoomCC_rm_exhibition_0_PreCreate
	| gml_RoomCC_rm_exhibition_1_PreCreate
	| gml_RoomCC_rm_exhibition_2_PreCreate
	| gml_RoomCC_rm_exhibition_3_PreCreate
	| gml_RoomCC_rm_exhibition_4_PreCreate
	| gml_RoomCC_rm_exhibition_5_PreCreate
	| gml_RoomCC_rm_exhibition_6_PreCreate
	| gml_RoomCC_rm_exhibition_7_PreCreate
	| gml_RoomCC_rm_exhibition_8_PreCreate
	| gml_RoomCC_rm_exhibition_9_PreCreate
	| gml_RoomCC_rm_exhibition_10_PreCreate
	| gml_RoomCC_rm_exhibition_11_PreCreate
	| gml_RoomCC_rm_exhibition_12_PreCreate
	| gml_RoomCC_rm_exhibition_13_PreCreate
	| gml_RoomCC_rm_exhibition_14_PreCreate
	| gml_RoomCC_rm_exhibition_15_PreCreate
	| gml_RoomCC_rm_exhibition_16_PreCreate
	| gml_RoomCC_rm_exhibition_17_PreCreate
	| gml_RoomCC_rm_exhibition_19_PreCreate
	| gml_RoomCC_rm_exhibition_20_PreCreate
	| gml_Room_rm_options_exh_Create
	| gml_RoomCC_rm_options_exh_0_PreCreate
	| gml_RoomCC_rm_options_exh_1_PreCreate
	| gml_RoomCC_rm_options_exh_2_PreCreate
	| gml_RoomCC_rm_options_exh_3_PreCreate
	| gml_RoomCC_rm_options_exh_4_PreCreate
	| gml_RoomCC_rm_options_exh_5_PreCreate
	| gml_RoomCC_rm_options_exh_6_PreCreate
	| gml_RoomCC_rm_options_exh_7_PreCreate
	| gml_RoomCC_rm_options_exh_8_PreCreate
	| gml_RoomCC_rm_options_exh_9_PreCreate
	| gml_Room_rm_exhibition_postmatch_Create
	| gml_RoomCC_rm_exhibition_postmatch_0_PreCreate
	| gml_RoomCC_rm_exhibition_postmatch_2_PreCreate
	| gml_Room_rm_exhibition_options_Create
	| gml_RoomCC_rm_exhibition_options_0_PreCreate
	| gml_RoomCC_rm_exhibition_options_1_PreCreate
	| gml_RoomCC_rm_exhibition_options_2_PreCreate
	| gml_RoomCC_rm_exhibition_options_3_PreCreate
	| gml_RoomCC_rm_exhibition_options_4_PreCreate
	| gml_RoomCC_rm_exhibition_options_5_PreCreate
	| gml_Room_rm_choose_team_college_Create
	| gml_RoomCC_rm_choose_team_college_0_PreCreate
	| gml_Room_rm_league_college_Create
	| gml_RoomCC_rm_league_college_0_PreCreate
	| gml_Room_rm_debug_Create
	| gml_RoomCC_rm_debug_0_PreCreate
	| gml_Room_rm_postseason_Create
	| gml_RoomCC_rm_postseason_0_PreCreate
	| gml_Room_rm_editor_Create
	| gml_RoomCC_rm_editor_0_PreCreate
	| gml_Room_rm_edit_competition_Create
	| gml_RoomCC_rm_edit_competition_0_PreCreate
	| gml_GlobalScript__poki_gameplay_start
	| gml_Script__poki_gameplay_start
	| gml_GlobalScript__poki_gameplay_stop
	| gml_Script__poki_gameplay_stop
	| gml_GlobalScript__poki_is_mobile
	| gml_Script__poki_is_mobile
	| gml_GlobalScript__poki_rewarded_ad
	| gml_Script__poki_rewarded_ad
	| gml_Script_browser_rewarded_ad_success
	| gml_GlobalScript_ads_scripts
	| gml_Script_s_interstitial_create
	| gml_Script_s_interstitial_step
	| gml_Script_anon_2053_adpool_ads_scripts
	| gml_Script_anon_2256_adpool_ads_scripts
	| gml_Script_anon_2498_adpool_ads_scripts
	| gml_Script_anon_2663_adpool_ads_scripts
	| gml_Script_adpool
	| gml_Script_anon_3037_ad_ads_scripts
	| gml_Script_ad
	| gml_GlobalScript_age_scripts
	| gml_Script_s_rookie_age_internal
	| gml_Script_s_max_age_player_internal
	| gml_Script_s_max_age_qb_internal
	| gml_Script_s_get_max_age
	| gml_GlobalScript_btn_click_AddSkill
	| gml_Script_btn_click_AddSkill
	| gml_GlobalScript_btn_click_AddSpeed
	| gml_Script_btn_click_AddSpeed
	| gml_GlobalScript_btn_click_AddStamina
	| gml_Script_btn_click_AddStamina
	| gml_GlobalScript_btn_click_AddStrength
	| gml_Script_btn_click_AddStrength
	| gml_GlobalScript_btn_click_BallStyle
	| gml_Script_btn_click_BallStyle
	| gml_GlobalScript_btn_click_BengRams
	| gml_Script_btn_click_BengRams
	| gml_Script_s_update_btn_bengrams
	| gml_Script_s_set_ui_colours
	| gml_GlobalScript_btn_click_Boost_Condition
	| gml_Script_btn_click_Boost_Condition
	| gml_GlobalScript_btn_click_Boost_Morale
	| gml_Script_btn_click_Boost_Morale
	| gml_GlobalScript_btn_click_Boost_Salary_Cap
	| gml_Script_btn_click_Boost_Salary_Cap
	| gml_GlobalScript_btn_click_Change_Favourite
	| gml_Script____struct___0_btn_click_Change_Favourite_btn_click_Change_Favourite
	| gml_Script_btn_click_Change_Favourite
	| gml_GlobalScript_btn_click_ChooseAFC
	| gml_Script_btn_click_ChooseAFC
	| gml_GlobalScript_btn_click_ChooseFace
	| gml_Script_btn_click_ChooseFace
	| gml_Script_s_goto_rm_choose_face
	| gml_GlobalScript_btn_click_ChooseFaceDone
	| gml_Script_btn_click_ChooseFaceDone
	| gml_Script_btn_click_cancel_chooseface
	| gml_GlobalScript_btn_click_ChooseFaceNext
	| gml_Script_btn_click_ChooseFaceNext
	| gml_GlobalScript_btn_click_ChooseFacePrev
	| gml_Script_btn_click_ChooseFacePrev
	| gml_GlobalScript_btn_click_ChooseNFC
	| gml_Script_btn_click_ChooseNFC
	| gml_GlobalScript_btn_click_ChooseReject
	| gml_Script_btn_click_ChooseReject_loading
	| gml_Script_btn_click_ChooseReject
	| gml_GlobalScript_btn_click_ChooseTeam
	| gml_Script_btn_click_ChooseTeam
	| gml_Script_btn_click_ChooseTeamExhibition
	| gml_Script_btn_click_ChoosePlayerExhibition
	| gml_Script_btn_click_ChoosePlayerExhibition_confirm
	| gml_Script_btn_click_ChoosePlayerExhibition_cancel
	| gml_GlobalScript_btn_click_ChooseTeamNew
	| gml_Script_btn_click_ChooseTeamNew
	| gml_Script_btn_click_qb_mode_ChooseTeamNew
	| gml_GlobalScript_btn_click_Continue
	| gml_Script_btn_click_Continue
	| gml_Script_btn_click_SimGame
	| gml_GlobalScript_btn_click_DeleteSlot1
	| gml_Script_btn_click_DeleteSlot1
	| gml_GlobalScript_btn_click_DeleteSlot2
	| gml_Script_btn_click_DeleteSlot2
	| gml_GlobalScript_btn_click_DeleteSlot3
	| gml_Script_btn_click_DeleteSlot3
	| gml_GlobalScript_btn_click_DeleteSlot4
	| gml_Script_btn_click_DeleteSlot4
	| gml_GlobalScript_btn_click_DeleteSlot5
	| gml_Script_btn_click_DeleteSlot5
	| gml_GlobalScript_btn_click_Details_Back
	| gml_Script_btn_click_Details_Back
	| gml_GlobalScript_btn_click_Details_Continue
	| gml_Script_btn_click_Details_Continue
	| gml_GlobalScript_btn_click_DraftDone
	| gml_Script_btn_click_DraftDone
	| gml_GlobalScript_btn_click_DraftNext
	| gml_Script_btn_click_DraftNext
	| gml_GlobalScript_btn_click_DraftPrev
	| gml_Script_btn_click_DraftPrev
	| gml_GlobalScript_btn_click_edit_conf1
	| gml_Script_btn_click_edit_conf1
	| gml_GlobalScript_btn_click_edit_conf2
	| gml_Script_btn_click_edit_conf2
	| gml_GlobalScript_btn_click_edit_div1
	| gml_Script_btn_click_edit_div1
	| gml_GlobalScript_btn_click_edit_div2
	| gml_Script_btn_click_edit_div2
	| gml_GlobalScript_btn_click_edit_div3
	| gml_Script_btn_click_edit_div3
	| gml_GlobalScript_btn_click_edit_div4
	| gml_Script_btn_click_edit_div4
	| gml_GlobalScript_btn_click_EditAFC
	| gml_Script_btn_click_EditAFC
	| gml_GlobalScript_btn_click_EditCopySlotA
	| gml_Script_btn_click_EditCopySlotA
	| gml_GlobalScript_btn_click_EditCopySlotB
	| gml_Script_btn_click_EditCopySlotB
	| gml_GlobalScript_btn_click_EditCopySlotC
	| gml_Script_btn_click_EditCopySlotC
	| gml_GlobalScript_btn_click_EditCopySlotD
	| gml_Script_btn_click_EditCopySlotD
	| gml_GlobalScript_btn_click_EditCopySlotE
	| gml_Script_btn_click_EditCopySlotE
	| gml_GlobalScript_btn_click_EditEndzone
	| gml_Script_btn_click_EditEndzone
	| gml_GlobalScript_btn_click_EditHelmet
	| gml_Script_btn_click_EditHelmet
	| gml_GlobalScript_btn_click_EditLogo
	| gml_Script_btn_click_EditLogo
	| gml_GlobalScript_btn_click_EditNFC
	| gml_Script_btn_click_EditNFC
	| gml_GlobalScript_btn_click_EditPants
	| gml_Script_btn_click_EditPants
	| gml_GlobalScript_btn_click_EditProfile
	| gml_Script_btn_click_EditProfile
	| gml_GlobalScript_btn_click_EditShirt
	| gml_Script_btn_click_EditShirt
	| gml_GlobalScript_btn_click_EditSleeve
	| gml_Script_btn_click_EditSleeve
	| gml_GlobalScript_btn_click_EditSocks1
	| gml_Script_btn_click_EditSocks1
	| gml_GlobalScript_btn_click_EditSocks2
	| gml_Script_btn_click_EditSocks2
	| gml_GlobalScript_btn_click_EditStripe
	| gml_Script_btn_click_EditStripe
	| gml_GlobalScript_btn_click_EditTeam
	| gml_Script_btn_click_EditTeam
	| gml_GlobalScript_btn_click_external_links
	| gml_Script_btn_click_BuyMerch
	| gml_Script_btn_click_MusicBy
	| gml_Script_btn_click_YouTube
	| gml_Script_btn_click_RecordBook
	| gml_Script_btn_click_Leagues
	| gml_Script_btn_click_ad_NSS
	| gml_Script_btn_click_ad_NSM
	| gml_Script_btn_click_ad_RG
	| gml_Script_btn_click_ad_NSB
	| gml_Script_btn_click_ad_RB
	| gml_Script_btn_click_ad_RBC
	| gml_Script_btn_click_ad_NSGP
	| gml_Script_btn_click_NewStarGames
	| gml_GlobalScript_btn_click_FacilityStadium
	| gml_Script_btn_click_FacilityStadium
	| gml_GlobalScript_btn_click_FacilityStaff
	| gml_Script_btn_click_FacilityStaff
	| gml_GlobalScript_btn_click_FacilityTraining
	| gml_Script_btn_click_FacilityTraining
	| gml_GlobalScript_btn_click_FieldGoal
	| gml_Script_btn_click_FieldGoal
	| gml_GlobalScript_btn_click_FreeAgents
	| gml_Script_btn_click_FreeAgents
	| gml_GlobalScript_btn_click_FreeAgents2
	| gml_Script_btn_click_FreeAgents2
	| gml_GlobalScript_btn_click_FreeAgentsBack
	| gml_Script_btn_click_FreeAgentsBack
	| gml_GlobalScript_btn_click_FreeAgentsNext
	| gml_Script_btn_click_FreeAgentsNext
	| gml_GlobalScript_btn_click_FreeAgentsPrev
	| gml_Script_btn_click_FreeAgentsPrev
	| gml_GlobalScript_btn_click_FreeAgentsReset
	| gml_Script_btn_click_FreeAgentsReset
	| gml_GlobalScript_btn_click_FrontOffice
	| gml_Script_btn_click_FrontOffice
	| gml_GlobalScript_btn_click_GenerateCharacter
	| gml_Script_btn_click_GenerateCharacter
	| gml_GlobalScript_btn_click_HallOfFame
	| gml_Script_btn_click_HallOfFame
	| gml_GlobalScript_btn_click_HireStaff
	| gml_Script_btn_click_HireStaff
	| gml_GlobalScript_btn_click_HOF_Coach
	| gml_Script_btn_click_HOF_Coach
	| gml_GlobalScript_btn_click_HOF_player_records
	| gml_Script_btn_click_HOF_player_records
	| gml_GlobalScript_btn_click_HOF_players
	| gml_Script_btn_click_HOF_players
	| gml_GlobalScript_btn_click_HOF_Select
	| gml_Script_btn_click_HOF_Select
	| gml_GlobalScript_btn_click_HofNext
	| gml_Script_btn_click_HofNext
	| gml_GlobalScript_btn_click_HofPrev
	| gml_Script_btn_click_HofPrev
	| gml_GlobalScript_btn_click_Home
	| gml_Script_btn_click_Home
	| gml_Script_btn_click_Play1
	| gml_Script_btn_click_Options_Exit
	| gml_Script_btn_click_Home_rm_winners
	| gml_GlobalScript_btn_click_InputEndzone
	| gml_Script_btn_click_InputEndzone
	| gml_GlobalScript_btn_click_InputHelmet
	| gml_Script_btn_click_InputHelmet
	| gml_GlobalScript_btn_click_InputLogo
	| gml_Script_btn_click_InputLogo
	| gml_GlobalScript_btn_click_InputPants
	| gml_Script_btn_click_InputPants
	| gml_GlobalScript_btn_click_InputShirt
	| gml_Script_btn_click_InputShirt
	| gml_GlobalScript_btn_click_InputSleeve
	| gml_Script_btn_click_InputSleeve
	| gml_GlobalScript_btn_click_InputSocks1
	| gml_Script_btn_click_InputSocks1
	| gml_GlobalScript_btn_click_InputSocks2
	| gml_Script_btn_click_InputSocks2
	| gml_GlobalScript_btn_click_InputStripe
	| gml_Script_btn_click_InputStripe
	| gml_GlobalScript_btn_click_InvertedThrowing
	| gml_Script_btn_click_InvertedThrowing
	| gml_GlobalScript_btn_click_Kit1
	| gml_Script_btn_click_Kit1
	| gml_GlobalScript_btn_click_Kit2
	| gml_Script_btn_click_Kit2
	| gml_GlobalScript_btn_click_Kit3
	| gml_Script_btn_click_Kit3
	| gml_GlobalScript_btn_click_Kit4
	| gml_Script_btn_click_Kit4
	| gml_GlobalScript_btn_click_KR_Select
	| gml_Script_btn_click_KR_Select
	| gml_GlobalScript_btn_click_League_Back
	| gml_Script_btn_click_League_Back
	| gml_GlobalScript_btn_click_League
	| gml_Script____struct___1_btn_click_League_btn_click_League
	| gml_Script_btn_click_League
	| gml_GlobalScript_btn_click_LeagueAFC
	| gml_Script_btn_click_LeagueAFC
	| gml_GlobalScript_btn_click_LeagueMode
	| gml_Script_btn_click_LeagueMode
	| gml_GlobalScript_btn_click_LeagueNFC
	| gml_Script_btn_click_LeagueNFC
	| gml_GlobalScript_btn_click_LeaguePanel
	| gml_Script_btn_click_LeaguePanel
	| gml_GlobalScript_btn_click_LeagueReportNext
	| gml_Script_btn_click_LeagueReportNext
	| gml_GlobalScript_btn_click_LeagueReportPrev
	| gml_Script_btn_click_LeagueReportPrev
	| gml_GlobalScript_btn_click_LeagueSchedule
	| gml_Script_btn_click_LeagueSchedule
	| gml_GlobalScript_btn_click_Meeting_Condition
	| gml_Script_btn_click_Meeting_Condition
	| gml_GlobalScript_btn_click_Meeting_ExtendContract
	| gml_Script_btn_click_Meeting_ExtendContract
	| gml_GlobalScript_btn_click_Meeting_LevelUp
	| gml_Script_btn_click_Meeting_LevelUp
	| gml_GlobalScript_btn_click_Meeting_Morale
	| gml_Script_btn_click_Meeting_Morale
	| gml_GlobalScript_btn_click_MeetingNext
	| gml_Script_btn_click_MeetingNext
	| gml_GlobalScript_btn_click_MeetingPrev
	| gml_Script_btn_click_MeetingPrev
	| gml_GlobalScript_btn_click_Options
	| gml_Script_btn_click_Options
	| gml_GlobalScript_btn_click_OptionsAutoRun
	| gml_Script_btn_click_OptionsAutoRun
	| gml_GlobalScript_btn_click_OptionsControls
	| gml_Script_btn_click_OptionsControls
	| gml_Script_btn_click_OptionsControls1
	| gml_Script_btn_click_OptionsControls2
	| gml_Script_btn_click_OptionsControls3
	| gml_Script_s_update_control_screen
	| gml_GlobalScript_btn_click_OptionsDifficulty
	| gml_Script_btn_click_OptionsDifficulty
	| gml_GlobalScript_btn_click_OptionsDriveBoth
	| gml_Script_btn_click_OptionsDriveBoth
	| gml_GlobalScript_btn_click_OptionsDriveLeft
	| gml_Script_btn_click_OptionsDriveLeft
	| gml_Script_btn_click_OptionsDriveLeft_Exh
	| gml_GlobalScript_btn_click_OptionsDriveRight
	| gml_Script_btn_click_OptionsDriveRight
	| gml_GlobalScript_btn_click_OptionsKickReturns
	| gml_Script_btn_click_OptionsKickReturns
	| gml_Script_btn_click_OptionsKickReturns_Exh
	| gml_GlobalScript_btn_click_OptionsMatchLength
	| gml_Script_btn_click_OptionsMatchLength
	| gml_Script_btn_click_OptionsMatchLength_Exh
	| gml_GlobalScript_btn_click_OptionsNewGame
	| gml_Script_btn_click_OptionsNewGame
	| gml_GlobalScript_btn_click_OptionsReplays
	| gml_Script_btn_click_OptionsReplays
	| gml_GlobalScript_btn_click_OptionsSalaryCap
	| gml_Script_btn_click_OptionsSalaryCap
	| gml_Script_salary_cap_toggle_roster_size
	| gml_Script_s_get_roster_cap
	| gml_GlobalScript_btn_click_OptionsScanlines
	| gml_Script_btn_click_OptionsScanlines
	| gml_GlobalScript_btn_click_OptionsSoundFX
	| gml_Script_btn_click_OptionsSoundFX
	| gml_GlobalScript_btn_click_OptionsTeamEditor
	| gml_Script_btn_click_OptionsTeamEditor
	| gml_GlobalScript_btn_click_OptionsWeather
	| gml_Script_btn_click_OptionsWeather
	| gml_Script_btn_click_OptionsWeather_Exh
	| gml_GlobalScript_btn_click_OptionsZoom
	| gml_Script_btn_click_OptionsZoom
	| gml_GlobalScript_btn_click_Passing
	| gml_Script_btn_click_Passing
	| gml_GlobalScript_btn_click_PlayerProfile_Back
	| gml_Script_btn_click_PlayerProfile_Back
	| gml_GlobalScript_btn_click_PlayerProfile
	| gml_Script_btn_click_PlayerProfile
	| gml_GlobalScript_btn_click_PlayOffs_Back
	| gml_Script_btn_click_PlayOffs_Back
	| gml_GlobalScript_btn_click_PlayOffs
	| gml_Script_btn_click_PlayOffs
	| gml_GlobalScript_btn_click_PlayOffsPlay
	| gml_Script_btn_click_PlayOffsPlay
	| gml_GlobalScript_btn_click_PlayOffsSkip
	| gml_Script_btn_click_PlayOffsSkip
	| gml_GlobalScript_btn_click_Profile_Back
	| gml_Script_btn_click_Profile_Back
	| gml_GlobalScript_btn_click_Profile_Cut
	| gml_Script_btn_click_Profile_Cut
	| gml_Script_btn_click_Profile_JefeBoost
	| gml_Script_btn_click_Profile_JefeBoostAge
	| gml_Script_btn_click_Profile_JefeBoostAge_Ancient
	| gml_Script_btn_click_Profile_JefeBoostAge_Max
	| gml_Script_btn_click_Profile_JefeBoostStats
	| gml_Script_s_JefeBoost_Skill
	| gml_Script_s_JefeBoost_Speed
	| gml_Script_s_JefeBoost_Strength
	| gml_Script_s_JefeBoost_Stamina
	| gml_Script_s_JefeBoost
	| gml_Script_btn_click_Profile_JefeOutOfRetirement
	| gml_Script_s_JefeOutOfRetirement
	| gml_GlobalScript_btn_click_Profile_Not_Interested
	| gml_Script_btn_click_Profile_Not_Interested
	| gml_GlobalScript_btn_click_Profile_Pick
	| gml_Script_btn_click_Profile_Pick
	| gml_GlobalScript_btn_click_Profile_Rest
	| gml_Script_btn_click_Profile_Rest
	| gml_GlobalScript_btn_click_Profile_ScoutPlayer
	| gml_Script_btn_click_Profile_ScoutPlayer
	| gml_GlobalScript_btn_click_Profile_Stats
	| gml_Script_btn_click_Profile_Stats
	| gml_GlobalScript_btn_click_Profile_Trade
	| gml_Script_btn_click_Profile_Trade
	| gml_GlobalScript_btn_click_Profile
	| gml_Script_btn_click_Profile
	| gml_GlobalScript_btn_click_ProfileNext
	| gml_Script_btn_click_ProfileNext
	| gml_GlobalScript_btn_click_ProfilePrev
	| gml_Script_btn_click_ProfilePrev
	| gml_GlobalScript_btn_click_qb_items
	| gml_Script_btn_click_qb_items
	| gml_Script_btn_click_qb_vehicles
	| gml_Script_btn_click_qb_property
	| gml_GlobalScript_btn_click_qb_training
	| gml_Script_btn_click_qb_training
	| gml_Script_s_do_qb_training
	| gml_GlobalScript_btn_click_Records_Reset
	| gml_Script_btn_click_Records_Reset
	| gml_GlobalScript_btn_click_RestAll
	| gml_Script_btn_click_RestAll
	| gml_GlobalScript_btn_click_RestoreAllTeams
	| gml_Script_btn_click_RestoreAllTeams
	| gml_GlobalScript_btn_click_Roster_Back
	| gml_Script_btn_click_Roster_Back
	| gml_Script_btn_click_Profile_Back_To_Draft
	| gml_Script_btn_click_Profile_Back_To_Draft_Continue
	| gml_GlobalScript_btn_click_Roster_List
	| gml_Script_btn_click_Roster_List
	| gml_GlobalScript_btn_click_Roster
	| gml_Script_btn_click_Roster
	| gml_GlobalScript_btn_click_Running
	| gml_Script_btn_click_Running
	| gml_GlobalScript_btn_click_ScheduleNext
	| gml_Script_btn_click_ScheduleNext
	| gml_GlobalScript_btn_click_SchedulePrev
	| gml_Script_btn_click_SchedulePrev
	| gml_GlobalScript_btn_click_SeasonReview
	| gml_Script_btn_click_SeasonReview
	| gml_GlobalScript_btn_click_SeasonReviewBack
	| gml_Script____struct___2_btn_click_SeasonReviewBack_btn_click_SeasonReviewBack
	| gml_Script_btn_click_SeasonReviewBack
	| gml_GlobalScript_btn_click_StaffProfile
	| gml_Script_btn_click_StaffProfile
	| gml_GlobalScript_btn_click_StaffProfileBack
	| gml_Script_btn_click_StaffProfileBack
	| gml_GlobalScript_btn_click_StaffProfileNext
	| gml_Script_btn_click_StaffProfileNext
	| gml_GlobalScript_btn_click_StaffProfilePrev
	| gml_Script_btn_click_StaffProfilePrev
	| gml_GlobalScript_btn_click_StatsNext
	| gml_Script_btn_click_StatsNext
	| gml_GlobalScript_btn_click_StatsPrev
	| gml_Script_btn_click_StatsPrev
	| gml_GlobalScript_btn_click_StatsView1
	| gml_Script_btn_click_StatsView1
	| gml_GlobalScript_btn_click_StatsView2
	| gml_Script_btn_click_StatsView2
	| gml_GlobalScript_btn_click_TeamEditCancel
	| gml_Script_btn_click_TeamEditCancel
	| gml_GlobalScript_btn_click_TeamEditDone
	| gml_Script_btn_click_TeamEditDone
	| gml_GlobalScript_btn_click_TeamEditMore
	| gml_Script_btn_click_TeamEditMore
	| gml_GlobalScript_btn_click_TeamEditMoreDone
	| gml_Script_btn_click_TeamEditMoreDone
	| gml_GlobalScript_btn_click_TeamEditRestore
	| gml_Script_btn_click_TeamEditRestore
	| gml_GlobalScript_btn_click_Training
	| gml_Script_btn_click_Training
	| gml_GlobalScript_btn_click_TrainingHard
	| gml_Script_btn_click_TrainingHard
	| gml_GlobalScript_btn_click_TrainingLight
	| gml_Script_btn_click_TrainingLight
	| gml_GlobalScript_btn_click_TrainingNormal
	| gml_Script_btn_click_TrainingNormal
	| gml_GlobalScript_btn_click_Uniform_Away
	| gml_Script_btn_click_Uniform_Away
	| gml_GlobalScript_btn_click_Uniform_Home
	| gml_Script_btn_click_Uniform_Home
	| gml_GlobalScript_btn_click_Uniforms
	| gml_Script_btn_click_Uniforms
	| gml_GlobalScript_btn_click_ViewHires
	| gml_Script_btn_click_ViewHires
	| gml_GlobalScript_btn_click_ViewHiresBack
	| gml_Script_btn_click_ViewHiresBack
	| gml_GlobalScript_btn_click_ViewHiresProfile
	| gml_Script_btn_click_ViewHiresProfile
	| gml_GlobalScript_btn_click_ViewHiresReset
	| gml_Script_btn_click_ViewHiresReset
	| gml_GlobalScript_btn_click_XP_Back
	| gml_Script_btn_click_XP_Back
	| gml_GlobalScript_btn_click_XP_Continue
	| gml_Script_btn_click_XP_Continue
	| gml_GlobalScript_btn_match_kick
	| gml_Script_btn_match_kick
	| gml_Script_btn_match_goforit
	| gml_Script_btn_match_gofor1pt
	| gml_GlobalScript_btn_meet_teammate
	| gml_Script_btn_meet_teammate
	| gml_Script_s_confirm_teammate_meeting
	| gml_GlobalScript_btn_response_1pt
	| gml_Script_btn_response_1pt
	| gml_GlobalScript_btn_response_2pt
	| gml_Script_btn_response_2pt
	| gml_GlobalScript_btn_response_boost_condition
	| gml_Script_btn_response_boost_condition
	| gml_GlobalScript_btn_response_boost_morale
	| gml_Script_btn_response_boost_morale
	| gml_GlobalScript_btn_response_boost_salary_cap
	| gml_Script_btn_response_boost_salary_cap
	| gml_GlobalScript_btn_response_clearfreeagents
	| gml_Script_btn_response_clearfreeagents
	| gml_GlobalScript_btn_response_cointoss_kick
	| gml_Script_btn_response_cointoss_kick
	| gml_GlobalScript_btn_response_cointoss_receive
	| gml_Script_btn_response_cointoss_receive
	| gml_GlobalScript_btn_response_confirm_new_team
	| gml_Script_btn_response_confirm_new_team_loading
	| gml_Script_btn_response_confirm_new_team
	| gml_GlobalScript_btn_response_cut_player_yes
	| gml_Script_btn_response_cut_player_yes
	| gml_GlobalScript_btn_response_deletegame1
	| gml_Script_btn_response_deletegame1
	| gml_GlobalScript_btn_response_deletegame2
	| gml_Script_btn_response_deletegame2
	| gml_GlobalScript_btn_response_deletegame3
	| gml_Script_btn_response_deletegame3
	| gml_GlobalScript_btn_response_deletegame4
	| gml_Script_btn_response_deletegame4
	| gml_GlobalScript_btn_response_deletegame5
	| gml_Script_btn_response_deletegame5
	| gml_GlobalScript_btn_response_fg_yes
	| gml_Script_btn_response_fg_yes
	| gml_GlobalScript_btn_response_hirestaff
	| gml_Script_btn_response_hirestaff
	| gml_GlobalScript_btn_response_hof_select
	| gml_Script_btn_response_hof_select
	| gml_GlobalScript_btn_response_in_trade_player_yes
	| gml_Script_btn_response_in_trade_player_yes
	| gml_GlobalScript_btn_response_kick_no
	| gml_Script_btn_response_kick_no
	| gml_GlobalScript_btn_response_newgame_commit
	| gml_Script_btn_response_newgame_commit
	| gml_GlobalScript_btn_response_onsidekick_no
	| gml_Script_btn_response_onsidekick_no
	| gml_GlobalScript_btn_response_onsidekick_yes
	| gml_Script_btn_response_onsidekick_yes
	| gml_GlobalScript_btn_response_out_trade_player_no
	| gml_Script_btn_response_out_trade_player_no
	| gml_GlobalScript_btn_response_out_trade_player_yes
	| gml_Script_btn_response_out_trade_player_yes
	| gml_GlobalScript_btn_response_pick_player_yes
	| gml_Script_btn_response_pick_player_yes
	| gml_GlobalScript_btn_response_player_meeting_condition_yes
	| gml_Script_btn_response_player_meeting_condition_yes
	| gml_GlobalScript_btn_response_player_meeting_extend_contract
	| gml_Script_btn_response_player_meeting_extend_contract
	| gml_GlobalScript_btn_response_player_meeting_levelup_yes
	| gml_Script_btn_response_player_meeting_levelup_yes
	| gml_GlobalScript_btn_response_player_meeting_morale_yes
	| gml_Script_btn_response_player_meeting_morale_yes
	| gml_GlobalScript_btn_response_punt_yes
	| gml_Script_btn_response_punt_yes
	| gml_GlobalScript_btn_response_quit_yes
	| gml_Script_btn_response_quit_yes
	| gml_GlobalScript_btn_response_records_reset
	| gml_Script_btn_response_records_reset
	| gml_GlobalScript_btn_response_rest_player_yes
	| gml_Script_btn_response_rest_player_yes
	| gml_GlobalScript_btn_response_review_yes
	| gml_Script_btn_response_review_yes
	| gml_Script_btn_response_review_no
	| gml_GlobalScript_btn_response_skip_draft_yes
	| gml_Script_btn_response_skip_draft_yes
	| gml_GlobalScript_btn_response_skip_tutorial
	| gml_Script_btn_response_skip_tutorial
	| gml_GlobalScript_btn_step_check_fullversion
	| gml_Script_btn_step_check_fullversion
	| gml_GlobalScript_btn_step_check_iaps
	| gml_Script_btn_step_check_iaps
	| gml_GlobalScript_chk_click_gamepad
	| gml_Script_chk_click_gamepad
	| gml_GlobalScript_debug_scripts
	| gml_Script_s_debug_window_size
	| gml_Script_s_is_debug_desktop
	| gml_Script_s_set_desktop_dev_window_size
	| gml_Script____struct___3_s_co_debug_access_debug_scripts
	| gml_Script_s_co_debug_access
	| gml_Script_s_debug_bypass
	| gml_Script_s_debug_room_init
	| gml_Script____struct___4_s_debug_init_menu_debug_scripts
	| gml_Script____struct___5_s_debug_init_menu_debug_scripts
	| gml_Script____struct___6_s_debug_init_menu_debug_scripts
	| gml_Script____struct___7_s_debug_init_menu_debug_scripts
	| gml_Script____struct___8_s_debug_init_menu_debug_scripts
	| gml_Script____struct___9_s_debug_init_menu_debug_scripts
	| gml_Script____struct___10_s_debug_init_menu_debug_scripts
	| gml_Script____struct___11_s_debug_init_menu_debug_scripts
	| gml_Script____struct___12_s_debug_init_menu_debug_scripts
	| gml_Script____struct___13_s_debug_init_menu_debug_scripts
	| gml_Script____struct___14_s_debug_init_menu_debug_scripts
	| gml_Script____struct___15_s_debug_init_menu_debug_scripts
	| gml_Script____struct___16_s_debug_init_menu_debug_scripts
	| gml_Script____struct___17_s_debug_init_menu_debug_scripts
	| gml_Script____struct___18_s_debug_init_menu_debug_scripts
	| gml_Script____struct___19_s_debug_init_menu_debug_scripts
	| gml_Script_s_debug_init_menu
	| gml_Script_s_give_debug_cc
	| gml_Script_btn_click_debug_main
	| gml_Script____struct___20_btn_click_debug_team_ranking_debug_scripts
	| gml_Script_btn_click_debug_team_ranking
	| gml_Script_btn_click_debug_test_screen
	| gml_Script_btn_click_debug_review_screen
	| gml_Script_btn_click_debug_skip_regular_season
	| gml_Script_btn_click_debug_skip_next_match
	| gml_Script_btn_click_debug_force_skip_result
	| gml_Script_s_get_forced_skip_result_readout
	| gml_Script_btn_click_debug_test_pool_creation
	| gml_Script_btn_click_debug_team_editor_franchise_screen
	| gml_Script_btn_click_debug_editor_screen
	| gml_Script_btn_click_debug_switch_data_version
	| gml_Script_s_get_alternative_data_version
	| gml_Script____struct___21_s_debug_init_team_ranking_debug_scripts
	| gml_Script____struct___22_s_debug_init_team_ranking_debug_scripts
	| gml_Script____struct___23_s_debug_init_team_ranking_debug_scripts
	| gml_Script____struct___24_s_debug_init_team_ranking_debug_scripts
	| gml_Script_anon_7817_s_debug_init_team_ranking_debug_scripts
	| gml_Script_s_debug_init_team_ranking
	| gml_Script_btn_dbg_list_prev_conference
	| gml_Script_btn_dbg_list_next_conference
	| gml_Script_s_clamp_conference_id
	| gml_Script_s_dbg_team_ranking_draw_gui
	| gml_Script_btn_click_debug_test_sim_odds
	| gml_Script_s_debug_list_bracketed_fixtures
	| gml_Script_s_debug_start_time
	| gml_Script_s_debug_show_time
	| gml_Script_s_set_exception_reporter
	| gml_Script_s_fake_crash
	| gml_Script_s_fake_crash_safe
	| gml_Script_s_safe_run
	| gml_Script_s_safe_run_catch
	| gml_Script_s_safe_run_msg
	| gml_Script_s_safe_run_crash_report
	| gml_Script_s_safe_run_crash_save
	| gml_GlobalScript_exhibition_scripts
	| gml_Script_btn_click_exhibition_start
	| gml_Script_btn_click_exhibition_exit
	| gml_Script_s_exhibition_exit
	| gml_Script_s_exhibition_lost_two_controllers
	| gml_Script_s_exhibition_assign_lost_controller
	| gml_Script_s_exhibition_abandon
	| gml_Script_s_set_up_uniforms_exhibition
	| gml_Script_s_create_exhibition_fixture
	| gml_Script_btn_click_exhibition_controller_0
	| gml_Script_btn_click_exhibition_controller_1
	| gml_Script_s_update_exhibition_controllers
	| gml_Script_btn_click_ChangeTeamAway
	| gml_Script_btn_click_ChangeTeamHome
	| gml_Script_btn_click_Exhibition_Play
	| gml_Script_s_update_options_exh
	| gml_Script_s_force_kick_direction
	| gml_Script_s_count_audibles
	| gml_Script_s_update_audibles
	| gml_Script_s_set_audibles
	| gml_Script_s_count_timeouts
	| gml_Script_s_update_timeouts
	| gml_Script_s_set_timeouts
	| gml_Script_s_set_exhibition_buttons
	| gml_Script_btn_click_exhibition_switch_start
	| gml_Script_s_exhibition_controller_check_continue
	| gml_Script_btn_click_exhibition_controllers
	| gml_Script_btn_exhibition_controllers_refresh
	| gml_Script_rm_exhibition_options_create
	| gml_Script_s_exh_teamswap_allowed
	| gml_Script_get_ex_teamset_0
	| gml_Script_get_ex_teamset_1
	| gml_Script_get_ex_uniform_file
	| gml_Script_btn_click_ExhibitionLoadUniformsA
	| gml_Script_btn_click_ExhibitionLoadUniformsB
	| gml_Script_btn_click_ExhibitionLoadUniformsC
	| gml_Script_btn_click_ExhibitionLoadUniformsD
	| gml_Script_btn_click_ExhibitionLoadUniformsE
	| gml_Script_btn_click_ExhibitionLoadUniforms
	| gml_Script_s_get_save_from_number
	| gml_Script_s_load_save_team_exhibitionA
	| gml_Script_s_load_save_team_exhibitionB
	| gml_Script_s_load_save_team_exhibitionC
	| gml_Script_s_load_save_team_exhibitionD
	| gml_Script_s_load_save_team_exhibitionE
	| gml_Script_s_load_save_team_exhibition
	| gml_Script_exh_refresh_roster_from_save
	| gml_Script_s_load_html_save1_exhibition
	| gml_Script_btn_click_RestoreAllTeams_ex
	| gml_Script_s_restore_uniforms_all_ex
	| gml_Script_s_exhibition_team_management_start
	| gml_Script_s_exhibition_team_management_clear
	| gml_Script_s_exhibition_wipe_list
	| gml_Script_s_refresh_exhibition_team_load_buttons
	| gml_Script_refresh_exh_roster_buttons
	| gml_Script_btn_click_RosterTeamAway
	| gml_Script_btn_click_RosterTeamHome
	| gml_Script_btn_click_Profile_Back_To_Exhibition
	| gml_Script_rm_player_profile_exhibition_create
	| gml_Script_rm_roster_exhibition_create
	| gml_Script_exhibition_handle_exit_match
	| gml_GlobalScript_font_scripts
	| gml_Script_s_data_path
	| gml_Script_s_fonts_init
	| gml_Script_s_erase_text_background
	| gml_Script_draw_hd_text
	| gml_Script_draw_hd_text_color
	| gml_Script_draw_hd_text_ext
	| gml_Script_draw_hd_text_ext_color
	| gml_Script_draw_hd_text_transformed
	| gml_Script_draw_hd_text_transformed_color
	| gml_Script_draw_hd_text_ext_transformed
	| gml_Script_string_hd_width
	| gml_Script_string_hd_width_ext
	| gml_Script_string_hd_height
	| gml_Script_string_hd_height_ext
	| gml_GlobalScript_gmcallback_poki_loadbar
	| gml_Script_gmcallback_poki_loadbar
	| gml_GlobalScript_is_defensiveback
	| gml_Script_is_defensiveback
	| gml_GlobalScript_keyboard_scripts
	| gml_Script_s_keyboard_custom_enabled
	| gml_Script____struct___25_s_keyboard_custom_init_keyboard_scripts
	| gml_Script_s_keyboard_custom_init
	| gml_Script_s_keyboard_custom_show
	| gml_Script_s_keyboard_custom_hide
	| gml_Script_s_keyboard_custom_layer
	| gml_Script_s_keyboard_custom_create
	| gml_Script_s_keyboard_custom_destroy
	| gml_Script_s_keyboard_custom_create_button
	| gml_Script_s_custkb_base_draw_gui
	| gml_Script_s_custkb_base_step
	| gml_Script_s_custkb_confirm
	| gml_Script_s_custkb_delete
	| gml_Script_s_custkb_shift_toggle
	| gml_Script_s_custkb_add_text
	| gml_Script_s_custkb_key_init
	| gml_Script_s_custkb_key_draw_gui
	| gml_Script_s_custkb_key_step
	| gml_Script_s_custkb_key_tap
	| gml_GlobalScript_nrg
	| gml_Script_btn_click_nrg_buy
	| gml_Script_btn_click_nrg_drink
	| gml_Script_s_drink_nrg
	| gml_Script_s_get_condition_colour
	| gml_Script_s_get_condition_icon
	| gml_GlobalScript_nx_scripts
	| gml_Script_s_nx_init
	| gml_Script_s_nx_commit
	| gml_Script_s_nx_get_open_user
	| gml_Script_s_is_switch
	| gml_GlobalScript_pause_scripts
	| gml_Script_s_pause_toggle
	| gml_Script_s_pause_is_available
	| gml_Script_s_pause_step
	| gml_Script_s_is_paused_or_just_unpaused
	| gml_Script_s_draw_pause
	| gml_Script_s_pause_btn_init
	| gml_Script_s_pause_btn_step
	| gml_Script_s_pause_btn_draw_gui
	| gml_Script_s_pause_btn_recenter
	| gml_Script_s_pause_options_init
	| gml_Script_s_pause_options_recenter
	| gml_Script_s_pause_options_dismiss
	| gml_Script_s_pause_options_draw_gui
	| gml_Script_s_pause_options_layer
	| gml_Script_s_pause_options_add_button
	| gml_Script_s_pause_options_add_quit
	| gml_Script_s_pause_options_update_buttons
	| gml_Script_s_pause_options_button_action
	| gml_Script_s_pause_options_quit_game
	| gml_Script_btn_response_quit_exhibition_cancel
	| gml_Script_btn_response_quit_exhibition_confirm
	| gml_GlobalScript_poki_btn_click_CoinBoost
	| gml_Script_poki_btn_click_CoinBoost
	| gml_Script_poki_CoinBoost_No
	| gml_Script_poki_CoinBoost_Yes
	| gml_GlobalScript_poki_pause
	| gml_Script_poki_pause
	| gml_GlobalScript_poki_resume
	| gml_Script_poki_resume
	| gml_GlobalScript_qb_contract_scripts
	| gml_Script_s_qb_mode_set_up_contract_screen
	| gml_Script____struct___26_s_qb_mode_new_contract_qb_contract_scripts
	| gml_Script_s_qb_mode_new_contract
	| gml_Script_btn_contract_negotiate
	| gml_Script_btn_contract_salary_minus
	| gml_Script_btn_contract_salary_plus
	| gml_Script_btn_contract_tdbonus_minus
	| gml_Script_btn_contract_tdbonus_plus
	| gml_Script_btn_contract_length_minus
	| gml_Script_btn_contract_length_plus
	| gml_Script_btn_negotiate_higher
	| gml_Script_btn_negotiate_lower
	| gml_Script_s_check_negotiate
	| gml_Script_s_check_hilo_buttons
	| gml_Script_s_accept_contract
	| gml_Script_s_reject_contract
	| gml_GlobalScript_s_achievements
	| gml_Script_s_complete_achievement
	| gml_Script_s_achievement_is_valid
	| gml_Script_s_exists_in_list
	| gml_Script_s_count_achievement
	| gml_Script_s_get_achievement
	| gml_Script_s_get_achievement_percentage
	| gml_Script_s_get_filtered_achievements
	| gml_Script_s_get_ach_desc
	| gml_GlobalScript_s_action_result
	| gml_Script_s_action_result
	| gml_GlobalScript_s_add_news
	| gml_Script_s_add_news
	| gml_Script_s_add_news_if_new
	| gml_Script_s_remove_news
	| gml_Script_s_add_news_dyn
	| gml_GlobalScript_s_add_to_human_fixtures
	| gml_Script_s_add_to_human_fixtures
	| gml_GlobalScript_s_add_xp_gain_all
	| gml_Script_s_add_xp_gain_all
	| gml_GlobalScript_s_adjust_team_morale
	| gml_Script_s_adjust_team_morale
	| gml_Script_s_adjust_team_morale_ignore_freshman
	| gml_GlobalScript_s_aim_AI_defense
	| gml_Script_s_aim_AI_defense
	| gml_GlobalScript_s_aim_AI_kickoff
	| gml_Script_s_aim_AI_kickoff
	| gml_GlobalScript_s_aim_AI_offense
	| gml_Script_s_aim_AI_offense
	| gml_GlobalScript_s_aim_for_nearest_opponent
	| gml_Script_s_aim_for_nearest_opponent
	| gml_GlobalScript_s_aiming
	| gml_Script_s_aiming
	| gml_GlobalScript_s_all_players_resting
	| gml_Script_s_all_players_resting
	| gml_GlobalScript_s_apple_arcade_helpers
	| gml_Script_s_aa_debug_give_cc
	| gml_GlobalScript_s_award_sb_rings
	| gml_Script_s_award_sb_rings
	| gml_GlobalScript_s_ball_holder_goalside
	| gml_Script_s_ball_holder_goalside
	| gml_GlobalScript_s_benched
	| gml_Script_s_player_benched
	| gml_GlobalScript_s_can_run
	| gml_Script_s_can_run
	| gml_GlobalScript_s_can_throw
	| gml_Script_s_can_throw
	| gml_GlobalScript_s_can_touchback
	| gml_Script_s_can_touchback
	| gml_GlobalScript_s_canvas_fullscreen
	| gml_Script_s_canvas_fullscreen
	| gml_GlobalScript_s_change_possession
	| gml_Script_s_change_possession
	| gml_Script_s_force_possession
	| gml_GlobalScript_s_change_wind
	| gml_Script_s_change_wind
	| gml_GlobalScript_s_check_ball_collision
	| gml_Script_Debug_S_Log
	| gml_Script_get_color_by_index
	| gml_Script_s_check_ball_collision
	| gml_GlobalScript_s_check_ball_position
	| gml_Script_s_check_ball_position
	| gml_GlobalScript_s_check_contracts_expiring
	| gml_Script_s_check_contracts_expiring
	| gml_GlobalScript_s_check_dive
	| gml_Script_s_check_dive
	| gml_GlobalScript_s_check_draft_qb
	| gml_Script_s_check_draft_QB
	| gml_Script_s_do_qb_draft_round
	| gml_Script_s_get_weakest_player_by_position
	| gml_Script_s_find_draft_player_by_position
	| gml_Script_s_get_player_by_position_for_qb_draft
	| gml_Script_s_do_contract_news
	| gml_Script_s_goto_room_contract
	| gml_Script_btn_qb_mode_interested_teams
	| gml_GlobalScript_s_check_draft
	| gml_Script_s_check_draft
	| gml_GlobalScript_s_check_dummy_collision
	| gml_Script_s_check_dummy_collision
	| gml_Script_s_sound_training_success
	| gml_GlobalScript_s_check_expired_contract_message
	| gml_Script_s_check_expired_contract_message
	| gml_GlobalScript_s_check_for_injury
	| gml_Script_s_check_for_injury
	| gml_GlobalScript_s_check_for_news
	| gml_Script_s_check_for_news
	| gml_Script_s_has_news
	| gml_GlobalScript_s_check_human_control
	| gml_Script_s_check_human_control
	| gml_Script_s_do_dive
	| gml_Script_s_do_stutterstep
	| gml_GlobalScript_s_check_ingame_control_change
	| gml_Script_s_check_ingame_control_change
	| gml_GlobalScript_s_check_intro
	| gml_Script_s_check_intro
	| gml_Script_s_check_intro_college
	| gml_Script_s_check_intro_rm_home
	| gml_Script_s_check_intro_rm_home_college
	| gml_Script_s_check_intro_rm_roster
	| gml_Script_s_check_intro_rm_roster_college
	| gml_Script_s_check_intro_rm_frontoffice
	| gml_Script_s_check_intro_rm_frontoffice_college
	| gml_Script_s_check_intro_rm_profile_staff
	| gml_Script_s_check_intro_rm_profile_staff_college
	| gml_Script_s_check_intro_rm_profile_boss
	| gml_Script_s_check_intro_rm_profile_boss_college
	| gml_Script_s_check_intro_case1
	| gml_Script_s_check_intro_case2
	| gml_Script_s_check_intro_case3
	| gml_Script_s_check_intro_case4
	| gml_Script_s_check_intro_case5
	| gml_Script_s_check_intro_case6
	| gml_Script_s_check_intro_case7
	| gml_Script_s_check_intro_case8
	| gml_Script_s_check_intro_case2_b
	| gml_Script_s_check_intro_case2_c
	| gml_Script_s_check_intro_case2_d
	| gml_Script_s_check_intro_case2_e
	| gml_Script_s_check_intro_case2_f
	| gml_Script_s_check_intro_case2_g
	| gml_Script_s_info_gpa_explanation_open
	| gml_Script_btn_info_gpa_explanation_intro_close
	| gml_Script_s_check_intro_case5_b
	| gml_Script_s_check_intro_case5_second_msg
	| gml_GlobalScript_s_check_qb_mode_benched
	| gml_Script_s_qb_mode_benched_status
	| gml_GlobalScript_s_check_record_text
	| gml_Script_s_check_record_text
	| gml_GlobalScript_s_check_record
	| gml_Script_s_check_record
	| gml_GlobalScript_s_check_repeat_retrobowls
	| gml_Script_s_check_repeat_retrobowls
	| gml_GlobalScript_s_check_tackling
	| gml_Script_s_check_tackling
	| gml_GlobalScript_s_check_tipped
	| gml_Script_s_check_tipped
	| gml_GlobalScript_s_check_win_after_turnover
	| gml_Script_s_check_win_after_turnover
	| gml_Script_s_both_teams_had_possession
	| gml_GlobalScript_s_choose_defensive_formation
	| gml_Script_s_choose_defensive_formation
	| gml_GlobalScript_s_choose_dilemma
	| gml_Script_s_choose_dilemma
	| gml_Script_s_extract_dilemma_from_pool
	| gml_Script_s_add_tag_matches_to_list
	| gml_Script_s_reject_dilemma_not_enough_RC
	| gml_GlobalScript_s_choose_face
	| gml_Script_s_choose_face
	| gml_Script_s_face_from_set
	| gml_Script_s_face_from_set_direct
	| gml_GlobalScript_s_choose_mode_hc
	| gml_Script_s_choose_mode_HC
	| gml_Script_s_choose_mode_QB
	| gml_Script_s_choose_mode_CO_loading
	| gml_Script_s_choose_mode_CO
	| gml_Script_s_setup_for_mode_CO
	| gml_Script_s_update_details_screen
	| gml_GlobalScript_s_choose_random_face_for_me
	| gml_Script_s_choose_random_face_for_me
	| gml_GlobalScript_s_clear_clock
	| gml_Script_s_clear_clock
	| gml_GlobalScript_s_clear_freeagents
	| gml_Script_s_clear_freeagents
	| gml_GlobalScript_s_clear_playoff_fixtures
	| gml_Script_s_clear_playoff_fixtures
	| gml_GlobalScript_s_clear_storelist
	| gml_Script_s_clear_storelist
	| gml_GlobalScript_s_clear_trade_offers
	| gml_Script_s_clear_trade_offers
	| gml_GlobalScript_s_coach_trait_experience
	| gml_Script_s_coach_trait_experience
	| gml_GlobalScript_s_coach_trait_motivator
	| gml_Script_s_coach_trait_motivator
	| gml_GlobalScript_s_coach_trait_talentspotter
	| gml_Script_s_coach_trait_talentspotter
	| gml_GlobalScript_s_col_hex_to_b
	| gml_Script_s_col_hex_to_b
	| gml_GlobalScript_s_col_hex_to_g
	| gml_Script_s_col_hex_to_g
	| gml_GlobalScript_s_col_hex_to_r
	| gml_Script_s_col_hex_to_r
	| gml_GlobalScript_s_college_admissions_draft
	| gml_Script_s_check_draft_CO
	| gml_Script_s_college_free_agent_check
	| gml_Script_btn_respose_college_free_agent_yes
	| gml_Script_btn_respose_college_free_agent_no
	| gml_Script_s_college_dilemma_check
	| gml_Script_s_college_admissions_check_trigger
	| gml_Script_s_college_admissions_pick_player
	| gml_Script_s_college_admissions_players_lost_per_round
	| gml_Script_s_college_admissions_draft_done
	| gml_Script_btn_response_college_admissions_draft_done_yes
	| gml_GlobalScript_s_college_balance
	| gml_Script_s_college_balance_create_new_roster
	| gml_GlobalScript_s_college_choose_team
	| gml_Script____struct___27_s_rm_choose_team_co_init_s_college_choose_team
	| gml_Script____struct___28_s_rm_choose_team_co_init_s_college_choose_team
	| gml_Script____struct___29_s_rm_choose_team_co_init_s_college_choose_team
	| gml_Script____struct___30_s_rm_choose_team_co_init_s_college_choose_team
	| gml_Script____struct___31_s_rm_choose_team_co_init_s_college_choose_team
	| gml_Script_s_rm_choose_team_co_init
	| gml_Script_s_btn_minor
	| gml_Script_s_btn_major
	| gml_Script_s_choose_team_refresh_subdivision
	| gml_Script_s_choose_team_refresh_conference
	| gml_Script____struct___32_s_choose_team_create_conference_buttons_s_college_choose_team
	| gml_Script____struct___33_s_choose_team_create_conference_buttons_s_college_choose_team
	| gml_Script____struct___34_s_choose_team_create_conference_buttons_s_college_choose_team
	| gml_Script____struct___35_s_choose_team_create_conference_buttons_s_college_choose_team
	| gml_Script_s_choose_team_create_conference_buttons
	| gml_Script_s_choose_team_btn_conference
	| gml_Script____struct___36_s_choose_team_create_team_buttons_s_college_choose_team
	| gml_Script____struct___37_s_choose_team_create_team_buttons_s_college_choose_team
	| gml_Script____struct___39_s_choose_team_create_team_buttons_s_college_choose_team
	| gml_Script____struct___40_s_choose_team_create_team_buttons_s_college_choose_team
	| gml_Script_s_choose_team_create_team_buttons
	| gml_Script_s_choose_team_btn_fav_team
	| gml_Script_s_choose_team_btn_new_team
	| gml_Script_s_choose_team_btn_back
	| gml_Script_s_choose_team_btn_reject
	| gml_Script_s_choose_team_conference_mode
	| gml_Script_s_choose_team_subdivision_mode
	| gml_Script_s_refresh_main_sections_buttons
	| gml_GlobalScript_s_college_competitions_seeding
	| gml_Script_s_get_team_from_tag
	| gml_Script_s_get_winner_by_cid
	| gml_Script_s_get_winner_by_mid
	| gml_Script_s_get_co_conference_winner
	| gml_Script_s_get_co_division_winner
	| gml_Script_s_get_co_conference_best
	| gml_Script_s_get_co_subdivision_best
	| gml_Script_s_get_co_bowl_seed
	| gml_Script_s_get_co_prestige_bowl_seed
	| gml_Script_s_create_prestige_pool
	| gml_Script_s_prestige_pool_sort_order_ranking
	| gml_Script_s_prestige_pool_list
	| gml_Script____struct___41_s_prestige_pool_add_s_college_competitions_seeding
	| gml_Script_s_prestige_pool_add
	| gml_Script_s_get_prestige_pool
	| gml_Script_s_get_team_in_prestige_pool
	| gml_Script_s_prestige_pool_force_one_per_conf
	| gml_Script_s_prestige_pool_fill_per_rank
	| gml_Script_s_get_bowl_seed_first_loop_pool
	| gml_Script_s_get_bowl_seed_second_loop_pool
	| gml_Script_s_get_bowl_seed_third_loop_pool
	| gml_Script_s_get_first_team_data
	| gml_Script____struct___42_s_get_competition_pool_s_college_competitions_seeding
	| gml_Script_s_get_competition_pool
	| gml_Script_s_competition_pool_team
	| gml_Script_s_get_competition_winner
	| gml_Script_s_competition_pool_fill_from_rankings
	| gml_Script_s_competition_pool_exclude_teams
	| gml_Script_s_competition_pool_add_team
	| gml_Script_s_competition_pool_rankings_exclude
	| gml_Script____struct___43_s_get_tagged_source_s_college_competitions_seeding
	| gml_Script_s_get_tagged_source
	| gml_Script_s_get_pool_position
	| gml_Script_s_competitions_debug_printout
	| gml_GlobalScript_s_college_competitions
	| gml_Script_s_get_competition_id_from_fix
	| gml_Script_s_get_competition_by_conference_division
	| gml_Script_s_get_competition
	| gml_Script_s_get_competitions_in_editor_group
	| gml_Script_s_get_last_schedule_week
	| gml_Script_s_get_postseason_fixture_by_week
	| gml_Script_s_get_player_schedule_fixture_by_week
	| gml_Script____struct___44_s_get_competition_win_access_list_s_college_competitions
	| gml_Script_s_get_competition_win_access_list
	| gml_Script_s_schedule_generation
	| gml_Script_s_is_cyclic_competition_year
	| gml_Script_s_schedule_add_game
	| gml_Script_s_schedule_add_championship
	| gml_Script_s_get_schedule_fix_template
	| gml_Script_s_fixture_victory_screen
	| gml_Script_s_handle_fixture_notification
	| gml_Script_s_fixture_notifications_roster_cv_entry
	| gml_Script_s_handle_fixture_history_record
	| gml_Script_s_handle_fixture_reward
	| gml_Script____struct___45_s_reset_competitions_and_subdivisions_pools_and_rankings_s_college_competitions
	| gml_Script____struct___46_s_reset_competitions_and_subdivisions_pools_and_rankings_s_college_competitions
	| gml_Script____struct___47_s_reset_competitions_and_subdivisions_pools_and_rankings_s_college_competitions
	| gml_Script_s_reset_competitions_and_subdivisions_pools_and_rankings
	| gml_Script_s_competitions_status_update
	| gml_Script_s_competitions_update_quick_standings
	| gml_Script_s_resolve_non_champ_conferences
	| gml_Script_s_schedule_advance_teams
	| gml_Script_s_schedule_move_better_team_to_home_slot
	| gml_Script____struct___48_s_schedule_add_fixtag_s_college_competitions
	| gml_Script_s_schedule_add_fixtag
	| gml_Script_s_get_fixtag_priority
	| gml_Script_s_fixtag_sort_priority
	| gml_Script_s_competition_update_standings
	| gml_Script_s_competition_reset_standings
	| gml_Script_s_conference_update_standings
	| gml_Script_s_subdivision_update_rankings
	| gml_Script_s_conference_reset_standings
	| gml_Script_s_subdivision_get_player_ranking
	| gml_Script_s_subdivision_get_team_ranking
	| gml_Script_s_get_my_conference_current_place
	| gml_Script_s_update_human_postseason_fixtures
	| gml_GlobalScript_s_college_custom_data
	| gml_Script_s_custom_data_file_exists_safe
	| gml_Script_s_custom_data_load
	| gml_Script_s_custom_data_file_delete
	| gml_Script_s_custom_data_patch
	| gml_Script_s_custom_data_update_from_editor
	| gml_Script_s_custom_data_save
	| gml_Script_s_custom_data_delete
	| gml_Script_s_custom_data_reset
	| gml_Script____struct___49_s_custom_data_template_s_college_custom_data
	| gml_Script____struct___50_s_custom_data_template_s_college_custom_data
	| gml_Script____struct___51_s_custom_data_template_s_college_custom_data
	| gml_Script____struct___52_s_custom_data_template_s_college_custom_data
	| gml_Script_s_custom_data_template
	| gml_Script_s_custom_data_restore
	| gml_Script_s_custom_data_copy_from
	| gml_Script_s_copy_uniforms_from
	| gml_Script_s_college_restore_all_uniforms
	| gml_Script_s_custom_data_exists
	| gml_Script_s_is_custom_data_active
	| gml_Script_s_set_custom_data_active
	| gml_Script_s_get_custom_data_subdivision
	| gml_Script_s_get_custom_data_conference
	| gml_Script_s_get_custom_data_competition
	| gml_Script_s_get_custom_data_filename
	| gml_Script____struct___53_s_get_or_create_custom_data_conference_s_college_custom_data
	| gml_Script_s_get_or_create_custom_data_conference
	| gml_Script____struct___54_s_get_or_create_custom_data_competition_s_college_custom_data
	| gml_Script_s_get_or_create_custom_data_competition
	| gml_Script_s_get_custom_data_suffix
	| gml_Script_s_get_custom_data_comp_name_prefix
	| gml_Script_s_get_custom_data_comp_name_suffix
	| gml_Script_s_get_bowl_split_name
	| gml_GlobalScript_s_college_data_versioning
	| gml_Script_s_get_versioned_path
	| gml_Script_s_is_newer_data_available
	| gml_Script_s_is_team_active_in_new_data
	| gml_Script_s_get_build_data_version
	| gml_Script_s_get_build_year_offset
	| gml_Script_s_get_data_version_string
	| gml_Script____struct___55_s_reset_to_version_s_college_data_versioning
	| gml_Script_s_reset_to_version
	| gml_Script_s_data_upgrade_teams
	| gml_Script_s_offer_data_upgrade
	| gml_Script_s_data_upgrade_offer_deny
	| gml_Script_s_data_upgrade_offer_accept
	| gml_GlobalScript_s_college_details
	| gml_Script____struct___56_s_college_details_init_s_college_details
	| gml_Script____struct___57_s_college_details_init_s_college_details
	| gml_Script_s_college_details_init
	| gml_Script____struct___58_s_reset_team_selections_s_college_details
	| gml_Script_s_reset_team_selections
	| gml_Script_anon_2333_s_college_details_hide_s_college_details
	| gml_Script_s_college_details_hide
	| gml_Script_anon_2464_s_college_details_center_s_college_details
	| gml_Script_s_college_details_center
	| gml_Script____struct___59_s_college_details_bottom_panel_init_s_college_details
	| gml_Script____struct___60_s_college_details_bottom_panel_init_s_college_details
	| gml_Script____struct___61_s_college_details_bottom_panel_init_s_college_details
	| gml_Script_s_college_details_bottom_panel_init
	| gml_Script_s_college_details_bottom_panel_draw_gui
	| gml_Script____struct___62_s_college_details_bottom_panel_create_buttons_s_college_details
	| gml_Script____struct___63_s_college_details_bottom_panel_create_buttons_s_college_details
	| gml_Script_s_college_details_bottom_panel_create_buttons
	| gml_Script_s_college_details_favorite_btn_action
	| gml_Script_s_college_details_starting_btn_action
	| gml_Script_s_college_details_difficulty_btn_action
	| gml_Script_s_get_college_details_favorite_label_text
	| gml_Script_s_get_college_details_starting_label_text
	| gml_Script_s_get_college_details_difficulty_label_text
	| gml_Script_s_college_details_btn_draw
	| gml_Script_s_create_starting_teams_list
	| gml_Script_s_add_starting_team
	| gml_Script_s_is_starting_team_selectable
	| gml_Script_s_count_starting_team_selectable_conference
	| gml_Script_s_get_random_non_rival_team
	| gml_GlobalScript_s_college_draft
	| gml_Script_s_college_draft_ranking
	| gml_Script_s_college_draft_team_ranking
	| gml_Script_s_college_draft_team_pick
	| gml_Script_s_calculate_college_draft
	| gml_Script_s_destroy_college_draft
	| gml_Script____struct___64_s_display_college_draft_debug_s_college_draft
	| gml_Script_s_display_college_draft_debug
	| gml_Script_s_message_college_draft_pick
	| gml_Script_s_college_draft_check_achievements
	| gml_Script_s_message_college_draft_notpick
	| gml_Script_s_message_college_draft_nottrydraft_y3
	| gml_Script_s_message_college_draft_early_y3
	| gml_Script_s_message_college_draft_pick_continue
	| gml_Script_s_message_college_earyly_yes
	| gml_Script_s_message_college_earyly_no
	| gml_Script_s_message_college_earyly_info
	| gml_Script_s_college_draft_earyly_info_return
	| gml_Script_s_college_draft_refresh_current_attitude
	| gml_Script_s_doing_college_draft
	| gml_Script_s_check_college_draft_start
	| gml_Script_s_start_college_draft
	| gml_Script_s_draft_set_epilogue
	| gml_Script_s_end_college_draft
	| gml_Script_s_end_college_draft_late_msg_clear
	| gml_Script____struct___65_s_end_college_draft_late_s_college_draft
	| gml_Script_s_end_college_draft_late
	| gml_Script_s_college_draft_new_season_loading
	| gml_Script_s_college_draft_new_season
	| gml_Script_btn_click_college_draft_next
	| gml_Script_s_college_draft_refresh
	| gml_Script_btn_click_college_draft_skip
	| gml_Script_college_draft_do_skip
	| gml_Script_s_college_draft_player_pick
	| gml_Script____struct___66_s_display_college_draft_roster_s_college_draft
	| gml_Script____struct___67_s_display_college_draft_roster_s_college_draft
	| gml_Script____struct___68_s_display_college_draft_roster_s_college_draft
	| gml_Script____struct___69_s_display_college_draft_roster_s_college_draft
	| gml_Script____struct___70_s_display_college_draft_roster_s_college_draft
	| gml_Script_s_display_college_draft_roster
	| gml_Script____struct___71_s_card_layout_pos_s_college_draft
	| gml_Script_s_card_layout_pos
	| gml_Script_s_load_pro_teams
	| gml_GlobalScript_s_college_edit_competition
	| gml_Script____struct___72_s_rm_edit_competition_init_s_college_edit_competition
	| gml_Script____struct___73_s_rm_edit_competition_init_s_college_edit_competition
	| gml_Script____struct___74_s_rm_edit_competition_init_s_college_edit_competition
	| gml_Script____struct___75_s_rm_edit_competition_init_s_college_edit_competition
	| gml_Script_s_rm_edit_competition_init
	| gml_Script_s_btn_edit_comp_confirm
	| gml_Script_s_btn_edit_comp_cancel
	| gml_Script____struct___76_s_editor_create_competition_fields_s_college_edit_competition
	| gml_Script_s_editor_create_competition_fields
	| gml_Script____struct___77_s_editor_create_text_field_s_college_edit_competition
	| gml_Script_s_editor_create_text_field
	| gml_Script____struct___78_s_editor_create_partial_text_field_s_college_edit_competition
	| gml_Script____struct___79_s_editor_create_partial_text_field_s_college_edit_competition
	| gml_Script____struct___80_s_editor_create_partial_text_field_s_college_edit_competition
	| gml_Script____struct___81_s_editor_create_partial_text_field_s_college_edit_competition
	| gml_Script_s_editor_create_partial_text_field
	| gml_Script____struct___82_s_editor_create_location_field_s_college_edit_competition
	| gml_Script____struct___83_s_editor_create_location_field_s_college_edit_competition
	| gml_Script____struct___84_s_editor_create_location_field_s_college_edit_competition
	| gml_Script_s_editor_create_location_field
	| gml_Script____struct___85_s_editor_create_field_label_s_college_edit_competition
	| gml_Script_s_editor_create_field_label
	| gml_Script_s_ui_field_label_draw_gui
	| gml_Script_s_editor_field_validate
	| gml_Script_s_editor_location_is_neutral
	| gml_Script_s_editor_location_toggle_neutral_state
	| gml_Script____struct___86_s_get_editor_mode_data_s_college_edit_competition
	| gml_Script_s_get_editor_mode_data
	| gml_GlobalScript_s_college_editor
	| gml_Script____struct___87_s_rm_editor_init_s_college_editor
	| gml_Script____struct___88_s_rm_editor_init_s_college_editor
	| gml_Script____struct___89_s_rm_editor_init_s_college_editor
	| gml_Script____struct___90_s_rm_editor_init_s_college_editor
	| gml_Script____struct___91_s_rm_editor_init_s_college_editor
	| gml_Script____struct___92_s_rm_editor_init_s_college_editor
	| gml_Script____struct___93_s_rm_editor_init_s_college_editor
	| gml_Script____struct___94_s_rm_editor_init_s_college_editor
	| gml_Script____struct___95_s_rm_editor_init_s_college_editor
	| gml_Script____struct___96_s_rm_editor_init_s_college_editor
	| gml_Script_s_rm_editor_init
	| gml_Script_s_goto_editor
	| gml_Script_s_btn_editor_done
	| gml_Script_s_btn_editor_major
	| gml_Script_s_btn_editor_minor
	| gml_Script_s_btn_editor_bowls
	| gml_Script_s_btn_editor_back
	| gml_Script____struct___97_s_btn_editor_edit_subdivision_s_college_editor
	| gml_Script_s_btn_editor_edit_subdivision
	| gml_Script____struct___98_s_btn_editor_edit_conference_s_college_editor
	| gml_Script_s_btn_editor_edit_conference
	| gml_Script_s_btn_editor_conference
	| gml_Script_s_btn_editor_select_team
	| gml_Script_s_btn_editor_select_bowl_group
	| gml_Script____struct___99_s_btn_editor_select_bowl_competition_s_college_editor
	| gml_Script_s_btn_editor_select_bowl_competition
	| gml_Script____struct___100_s_save_editor_status_s_college_editor
	| gml_Script_s_save_editor_status
	| gml_Script____struct___101_s_get_editor_status_s_college_editor
	| gml_Script_s_get_editor_status
	| gml_Script_s_reset_editor_status
	| gml_Script_s_editor_subdivision_mode
	| gml_Script_s_editor_conference_mode
	| gml_Script_s_editor_bowls_group_mode
	| gml_Script_s_editor_bowls_competition_mode
	| gml_Script_s_editor_set_buttons
	| gml_Script_s_editor_refresh_bowls_groups
	| gml_Script____struct___102_s_editor_create_bowls_buttons_s_college_editor
	| gml_Script____struct___103_s_editor_create_bowls_buttons_s_college_editor
	| gml_Script_s_editor_create_bowls_buttons
	| gml_Script____struct___104_s_create_slot_label_s_college_editor
	| gml_Script_s_create_slot_label
	| gml_Script_s_ui_label_draw_gui
	| gml_Script_s_get_editor_bowl_group_name_by_tag
	| gml_Script____struct___105_s_editor_copy_buttons_s_college_editor
	| gml_Script____struct___106_s_editor_copy_buttons_s_college_editor
	| gml_Script____struct___107_s_editor_copy_buttons_s_college_editor
	| gml_Script____struct___108_s_editor_copy_buttons_s_college_editor
	| gml_Script____struct___109_s_editor_copy_buttons_s_college_editor
	| gml_Script_s_editor_copy_buttons
	| gml_Script_s_init_btn_editor_copy
	| gml_Script_s_btn_editor_copy
	| gml_Script_s_btn_editor_confirm_copy
	| gml_Script_s_btn_editor_restore_all
	| gml_Script_s_btn_editor_confirm_restore_all
	| gml_GlobalScript_s_college_gui_helpers
	| gml_Script_buttons_college_custom
	| gml_Script_draw_custom_increase_wallet
	| gml_Script_draw_custom_recruitment_credits_display
	| gml_Script_rm_player_profile_show_noncollege_elements
	| gml_Script_rm_player_profile_show_more
	| gml_Script____struct___110_rm_player_profile_college_create_p1_s_college_gui_helpers
	| gml_Script____struct___111_rm_player_profile_college_create_p1_s_college_gui_helpers
	| gml_Script____struct___112_rm_player_profile_college_create_p1_s_college_gui_helpers
	| gml_Script____struct___113_rm_player_profile_college_create_p1_s_college_gui_helpers
	| gml_Script____struct___114_rm_player_profile_college_create_p1_s_college_gui_helpers
	| gml_Script____struct___115_rm_player_profile_college_create_p1_s_college_gui_helpers
	| gml_Script____struct___116_rm_player_profile_college_create_p1_s_college_gui_helpers
	| gml_Script____struct___118_rm_player_profile_college_create_p1_s_college_gui_helpers
	| gml_Script____struct___119_rm_player_profile_college_create_p1_s_college_gui_helpers
	| gml_Script_rm_player_profile_college_create_p1
	| gml_Script____struct___120_rm_player_profile_college_create_p2_s_college_gui_helpers
	| gml_Script____struct___121_rm_player_profile_college_create_p2_s_college_gui_helpers
	| gml_Script____struct___122_rm_player_profile_college_create_p2_s_college_gui_helpers
	| gml_Script____struct___123_rm_player_profile_college_create_p2_s_college_gui_helpers
	| gml_Script____struct___124_rm_player_profile_college_create_p2_s_college_gui_helpers
	| gml_Script____struct___125_rm_player_profile_college_create_p2_s_college_gui_helpers
	| gml_Script____struct___126_rm_player_profile_college_create_p2_s_college_gui_helpers
	| gml_Script____struct___127_rm_player_profile_college_create_p2_s_college_gui_helpers
	| gml_Script____struct___128_rm_player_profile_college_create_p2_s_college_gui_helpers
	| gml_Script_rm_player_profile_college_create_p2
	| gml_Script_rm_player_profile_college_create
	| gml_Script_btn_rm_player_profile_college_showP1
	| gml_Script_btn_rm_player_profile_college_showP2
	| gml_Script_rm_player_profile_college_step
	| gml_Script_btn_click_Profile_College_Cut
	| gml_Script_btn_click_Profile_College_Cut_During_Admission_Draft
	| gml_Script_btn_response_cut_player_for_RC_yes
	| gml_Script_s_get_college_player_cut_RC
	| gml_Script_btn_rm_stats_player_showAwards
	| gml_Script_btn_rm_stats_player_showEpilogue
	| gml_Script____struct___129_stats_player_button_entry_s_college_gui_helpers
	| gml_Script_stats_player_button_entry
	| gml_Script____struct___130_rm_stats_player_configure_college_s_college_gui_helpers
	| gml_Script____struct___131_rm_stats_player_configure_college_s_college_gui_helpers
	| gml_Script_rm_stats_player_configure_college
	| gml_Script_s_change_panel_division_mode
	| gml_Script_s_panel_skip_independents_cnf_view
	| gml_Script_s_panel_scroll_init
	| gml_Script_s_panel_scroll_step
	| gml_Script_s_panel_scroll_set_height
	| gml_Script_s_panel_scroll_global_flick
	| gml_Script_s_panel_scroll_draw_gui
	| gml_Script_s_panel_scroll_is_inside
	| gml_GlobalScript_s_college_gui_panels
	| gml_Script____struct___132_s_co_subdivision_create_s_college_gui_panels
	| gml_Script_s_co_subdivision_create
	| gml_Script_s_co_subdivision_init
	| gml_Script_s_co_subdivision_hidden_draw_gui
	| gml_Script_s_co_division_create
	| gml_Script_s_co_division_init
	| gml_Script_s_co_division_step
	| gml_Script_s_fit_string
	| gml_Script_s_co_division_draw_gui
	| gml_GlobalScript_s_college_league
	| gml_Script____struct___133_s_rm_league_co_init_s_college_league
	| gml_Script____struct___134_s_rm_league_co_init_s_college_league
	| gml_Script____struct___135_s_rm_league_co_init_s_college_league
	| gml_Script____struct___136_s_rm_league_co_init_s_college_league
	| gml_Script____struct___137_s_rm_league_co_init_s_college_league
	| gml_Script____struct___138_s_rm_league_co_init_s_college_league
	| gml_Script____struct___139_s_rm_league_co_init_s_college_league
	| gml_Script____struct___140_s_rm_league_co_init_s_college_league
	| gml_Script____struct___141_s_rm_league_co_init_s_college_league
	| gml_Script____struct___142_s_rm_league_co_init_s_college_league
	| gml_Script____struct___143_s_rm_league_co_init_s_college_league
	| gml_Script____struct___144_s_rm_league_co_init_s_college_league
	| gml_Script____struct___145_s_rm_league_co_init_s_college_league
	| gml_Script____struct___146_s_rm_league_co_init_s_college_league
	| gml_Script____struct___147_s_rm_league_co_init_s_college_league
	| gml_Script____struct___148_s_rm_league_co_init_s_college_league
	| gml_Script____struct___149_s_rm_league_co_init_s_college_league
	| gml_Script____struct___150_s_rm_league_co_init_s_college_league
	| gml_Script_s_rm_league_co_init
	| gml_Script_s_btn_league_view
	| gml_Script____struct___151_s_btn_league_mode_s_college_league
	| gml_Script_s_btn_league_mode
	| gml_Script____struct___152_s_btn_league_subdivision_s_college_league
	| gml_Script_s_btn_league_subdivision
	| gml_Script_s_btn_division_home_view
	| gml_Script_s_btn_division_postmatch_view
	| gml_Script____struct___153_s_btn_league_next_conference_s_college_league
	| gml_Script_s_btn_league_next_conference
	| gml_Script_anon_5862_s_set_league_mode_btn_colour_s_college_league
	| gml_Script_s_set_league_mode_btn_colour
	| gml_Script_anon_6028_s_set_league_tier_btn_colour_s_college_league
	| gml_Script_s_set_league_tier_btn_colour
	| gml_Script_s_set_var_if_missing
	| gml_Script_s_league_get_btn_back_image
	| gml_Script_s_league_refresh_subdivision
	| gml_Script____struct___154_s_league_create_conference_buttons_s_college_league
	| gml_Script_s_league_create_conference_buttons
	| gml_Script____struct___155_s_league_btn_conference_s_college_league
	| gml_Script_s_league_btn_conference
	| gml_Script_s_league_create_conference_panels
	| gml_Script____struct___156_s_league_create_conference_division_s_college_league
	| gml_Script____struct___157_s_league_create_conference_division_s_college_league
	| gml_Script_s_league_create_conference_division
	| gml_Script____struct___158_s_league_create_ranking_panels_s_college_league
	| gml_Script____struct___159_s_league_create_ranking_panels_s_college_league
	| gml_Script_s_league_create_ranking_panels
	| gml_Script_s_is_prev_rank_visible
	| gml_Script____struct___160_s_league_create_schedule_panels_s_college_league
	| gml_Script____struct___161_s_league_create_schedule_panels_s_college_league
	| gml_Script____struct___162_s_league_create_schedule_panels_s_college_league
	| gml_Script_s_league_create_schedule_panels
	| gml_Script_s_co_schedule_init
	| gml_Script_s_league_btn_week
	| gml_Script_s_league_btn_page
	| gml_Script_s_co_schedule_sort_order
	| gml_Script_s_league_get_own_bracket_page
	| gml_Script_s_co_schedule_refresh
	| gml_Script_s_co_schedule_step
	| gml_Script____struct___163_s_co_schedule_filter_format_s_college_league
	| gml_Script_s_co_schedule_filter_format
	| gml_Script____struct___164_s_set_matchlist_bracket_coords_s_college_league
	| gml_Script____struct___165_s_set_matchlist_bracket_coords_s_college_league
	| gml_Script____struct___166_s_set_matchlist_bracket_coords_s_college_league
	| gml_Script____struct___167_s_set_matchlist_bracket_coords_s_college_league
	| gml_Script____struct___168_s_set_matchlist_bracket_coords_s_college_league
	| gml_Script____struct___169_s_set_matchlist_bracket_coords_s_college_league
	| gml_Script____struct___170_s_set_matchlist_bracket_coords_s_college_league
	| gml_Script____struct___171_s_set_matchlist_bracket_coords_s_college_league
	| gml_Script____struct___172_s_set_matchlist_bracket_coords_s_college_league
	| gml_Script____struct___173_s_set_matchlist_bracket_coords_s_college_league
	| gml_Script____struct___174_s_set_matchlist_bracket_coords_s_college_league
	| gml_Script____struct___175_s_set_matchlist_bracket_coords_s_college_league
	| gml_Script_s_set_matchlist_bracket_coords
	| gml_Script_s_get_bracket_map_entry
	| gml_Script_s_co_schedule_draw_gui
	| gml_Script_s_draw_bracket_name_box
	| gml_GlobalScript_s_college_overtime
	| gml_Script_s_college_overtime_start
	| gml_Script_s_college_overtime_handle_play_end
	| gml_Script_s_college_overtime_setup_new_possesion
	| gml_Script_s_college_overtime_offer_kick
	| gml_Script_s_college_overtime_next_round
	| gml_Script_s_college_overtime_possession_count
	| gml_Script_s_college_overtime_one_team_won
	| gml_Script_s_college_overtime_other_teams_turn
	| gml_Script_s_college_overtime_trigger_point_conversion
	| gml_Script_s_college_overtime_flip_possession
	| gml_Script_s_college_overtime_score_hack
	| gml_Script_s_co_poss_str
	| gml_Script_btn_click_toggle_college_overtime_debug
	| gml_Script_s_refresh_btn_overtime_text
	| gml_GlobalScript_s_college_postseason
	| gml_Script____struct___176_s_rm_postseason_init_s_college_postseason
	| gml_Script____struct___177_s_rm_postseason_init_s_college_postseason
	| gml_Script____struct___178_s_rm_postseason_init_s_college_postseason
	| gml_Script____struct___179_s_rm_postseason_init_s_college_postseason
	| gml_Script____struct___180_s_rm_postseason_init_s_college_postseason
	| gml_Script____struct___181_s_rm_postseason_init_s_college_postseason
	| gml_Script____struct___182_s_rm_postseason_init_s_college_postseason
	| gml_Script_s_rm_postseason_init
	| gml_Script_s_btn_postseason_skip_loading
	| gml_Script_s_btn_postseason_skip
	| gml_Script_s_btn_postseason_play
	| gml_Script_s_postseason_goto_home
	| gml_Script_s_btn_result_postseason_continue
	| gml_Script_s_btn_postmatch_co_continue
	| gml_Script_s_btn_postmatch_co_league
	| gml_Script_s_postseason_show_news
	| gml_Script_s_postseason_show_finals
	| gml_Script_s_postseason_show_next_result
	| gml_Script_s_postseason_show_finals_result
	| gml_Script_s_btn_postseason_news_skip
	| gml_Script_s_btn_postseason_news_continue
	| gml_Script_s_postseason_results
	| gml_Script____struct___183_s_create_postseason_result_s_college_postseason
	| gml_Script____struct___184_s_create_postseason_result_s_college_postseason
	| gml_Script_s_create_postseason_result
	| gml_Script_s_postseason_results_data_sort
	| gml_Script_s_get_postseason_result_by_cid
	| gml_Script_s_get_competition_win_access
	| gml_Script_s_get_fix_access_string
	| gml_Script_s_get_fix_result_string
	| gml_Script_s_skip_postseason_until_human_match
	| gml_Script_s_skip_postseason_chunk
	| gml_GlobalScript_s_college_ranking
	| gml_Script_s_co_set_starting_rank
	| gml_Script_s_co_set_ranking_points
	| gml_Script_s_co_reset_teams_rank
	| gml_Script_s_co_update_fix_rank
	| gml_Script_s_get_prestige
	| gml_Script_s_update_ranking_positions
	| gml_Script_s_get_ranking_pos_data
	| gml_Script_s_get_ranking_pos_data_prev
	| gml_Script_s_get_ranking_pos_data_season
	| gml_Script____struct___185_s_parse_ranking_pos_s_college_ranking
	| gml_Script_s_parse_ranking_pos
	| gml_Script_s_encode_ranking_pos
	| gml_Script_s_save_ranking_pos_end_of_season
	| gml_Script_s_get_ranking_pos_last_season
	| gml_Script_s_is_preseason_for_ranking
	| gml_Script_s_update_rank_after_admission_draft
	| gml_Script_s_get_ranking_pct_last_season
	| gml_GlobalScript_s_college_reputation
	| gml_Script_s_get_team_offense_with_reputation_boost
	| gml_Script_s_get_team_defense_with_reputation_boost
	| gml_Script_s_get_strength_with_reputation_boost
	| gml_Script_s_get_reputation_points
	| gml_Script_s_update_fixture_teams_reputation
	| gml_Script_s_has_reputation_point
	| gml_Script_s_update_all_teams_reputation
	| gml_Script_s_update_team_reputation_flag
	| gml_Script_s_update_team_reputation
	| gml_Script_s_get_team_reputation_data
	| gml_Script_s_set_team_reputation_data
	| gml_Script_s_convert_reputation_string_to_data
	| gml_Script_s_convert_reputation_data_to_string
	| gml_Script____struct___186_s_create_reputation_data_s_college_reputation
	| gml_Script_s_create_reputation_data
	| gml_Script_s_update_reputation_data
	| gml_Script_s_is_reputation_string_updated
	| gml_Script_s_is_reputation_data_updated
	| gml_Script_s_get_reputation_string_points
	| gml_Script_s_get_reputation_data_points
	| gml_Script_s_reputation_data_test
	| gml_GlobalScript_s_college_room_tools
	| gml_Script____struct___187
	| gml_Script_s_goto_room
	| gml_Script_anon_653_s_init_rm_s_college_room_tools
	| gml_Script_s_init_rm
	| gml_Script____struct___188_s_destroy_rm_s_college_room_tools
	| gml_Script_s_destroy_rm
	| gml_Script____struct___189_s_create_title_s_college_room_tools
	| gml_Script_s_create_title
	| gml_Script_s_create_button
	| gml_Script_anon_1336_s_destroy_dynamic_buttons_s_college_room_tools
	| gml_Script_s_destroy_dynamic_buttons
	| gml_Script____struct___190_s_calc_grid_coords_s_college_room_tools
	| gml_Script_s_calc_grid_coords
	| gml_Script____struct___191_s_show_rm_winners_s_college_room_tools
	| gml_Script_s_show_rm_winners
	| gml_GlobalScript_s_college_sorting
	| gml_Script_s_co_teams_data_sort_rank
	| gml_Script_s_co_teams_data_sort_rank_season
	| gml_Script_s_co_teams_data_sort_rank_common
	| gml_Script_s_calc_rank_avgpts
	| gml_Script_s_co_teams_data_sort_rank_pos
	| gml_Script_s_co_teams_data_sort_pct
	| gml_Script_s_co_teams_data_sort_pct_quick
	| gml_Script_s_co_teams_data_sort_conf_wins_losses
	| gml_Script_s_co_teams_data_sort_wins_rank
	| gml_Script____struct___192_s_create_team_data_array_s_college_sorting
	| gml_Script_s_create_team_data_array
	| gml_Script_s_update_team_data_rank_pos
	| gml_Script_s_team_data_array_add_formatted_data
	| gml_Script_s_co_teams_tiebreak
	| gml_Script_s_co_teams_tiebreak_record_next_best_placed_division
	| gml_GlobalScript_s_college_tools
	| gml_Script_s_college_set_up_globals
	| gml_Script_s_college_age_index
	| gml_Script_s_college_age_label
	| gml_Script_s_college_age_simple
	| gml_Script_s_college_age_simple_other
	| gml_Script_s_college_age_simple_short
	| gml_Script_s_college_shorter_season
	| gml_Script_s_college_academics_type
	| gml_Script_s_college_correct_new_player
	| gml_Script_s_get_random_hobby
	| gml_Script_s_get_hobby_name
	| gml_Script_s_get_hobby_from_uid
	| gml_Script_s_is_player_hobby_fraternity
	| gml_Script_s_get_random_study_subject
	| gml_Script_s_get_study_subject_from_uid
	| gml_Script_s_get_study_subject_name_from_uid
	| gml_Script_s_get_minor_name
	| gml_Script_s_get_major_name
	| gml_Script_s_get_study_info
	| gml_Script_s_get_random_trait
	| gml_Script_s_get_trait_name
	| gml_Script_s_get_trait_from_uid
	| gml_Script_s_get_random_hometown
	| gml_Script_s_get_hometown_name
	| gml_Script_s_get_only_hometown_name
	| gml_Script_s_get_only_state_name
	| gml_Script_s_get_hometown_from_uid
	| gml_Script_s_pick_rand_epilogue_uid
	| gml_Script_s_get_epilogue_name
	| gml_Script_s_epilogue_tests
	| gml_Script_s_pick_epilogue_story
	| gml_Script_s_epilogue_story_to_str
	| gml_Script_s_try_get_teamname_from_uid_or_name
	| gml_Script_s_add_cv_entry_from_key
	| gml_Script_s_add_cv_entry_direct
	| gml_Script_s_get_random_cv_entry
	| gml_Script_s_extract_cv_entry_from_pool
	| gml_Script_s_set_cv_list_from_player
	| gml_Script_s_add_cv_list_entry
	| gml_Script_split_into_chunks
	| gml_Script_btn_response_player_meeting_academic_coaching
	| gml_Script_s_get_meeting_cost_academic_coaching
	| gml_Script_s_is_co_mode
	| gml_Script_s_is_co_postseason
	| gml_Script_s_is_co_actual_postseason
	| gml_Script_s_is_co_endseason_lastweek
	| gml_Script_s_is_co_offseason
	| gml_Script_s_get_postseason_chunk
	| gml_Script_s_is_earlier_than
	| gml_Script_s_get_skip_to_week
	| gml_Script_s_is_co_team
	| gml_Script_s_get_conference_list
	| gml_Script_s_get_team_list_by_tier
	| gml_Script_s_get_team_list
	| gml_Script_s_count_joboffers_conference
	| gml_Script_s_co_get_year
	| gml_Script_s_get_this_year
	| gml_Script_s_get_next_year
	| gml_Script_s_get_my_conference_uid
	| gml_Script_s_get_my_conference_data
	| gml_Script_s_get_conference_data
	| gml_Script_s_get_my_division
	| gml_Script_s_get_subdivision
	| gml_Script_s_get_teams_subdivision_diff
	| gml_Script_s_get_team_pct_cnf
	| gml_Script_s_is_independent_team
	| gml_Script_s_is_independent_conference_id
	| gml_Script_s_is_independent_conference
	| gml_Script_s_co_set_strength_boost
	| gml_Script_anon_32947_strength_boost_s_college_tools
	| gml_Script_strength_boost
	| gml_Script_s_is_co_bowl_week
	| gml_Script_s_is_co_bowl_fix
	| gml_Script_s_is_co_bowl_comp
	| gml_Script____struct___193_s_get_object_data_s_college_tools
	| gml_Script_s_get_object_data
	| gml_Script_s_get_map
	| gml_Script_s_get_map_real
	| gml_Script_s_map_swap
	| gml_Script_s_get_save_slot
	| gml_Script_s_get_week_name
	| gml_Script_s_get_my_conference_division_string
	| gml_Script_s_get_fix_competition_string
	| gml_Script_s_get_competition_string
	| gml_Script_s_get_fix_location_string
	| gml_Script_s_get_my_subdivision_string
	| gml_Script_s_get_subdiv_name
	| gml_Script_s_joboffers_string
	| gml_Script_s_get_pct_string
	| gml_Script_s_get_comp_level_str
	| gml_Script_s_get_comp_level_str_plain
	| gml_Script_s_get_difficulty_str
	| gml_Script_s_is_ps_chunk_filled
	| gml_Script_s_is_week_played
	| gml_Script_s_is_human_in_week
	| gml_Script_s_is_human_fix
	| gml_Script_s_get_next_college_human_fixture
	| gml_Script_s_update_week_done
	| gml_Script_s_is_week_done
	| gml_Script_s_is_fix_played
	| gml_Script_s_is_fix_filled
	| gml_Script_s_is_fix_on_neutral_ground
	| gml_Script_s_season_competitions_done
	| gml_Script_s_get_fix_away_team_id
	| gml_Script_s_get_fix_home_team_id
	| gml_Script_s_get_fix_by_competition_id
	| gml_Script_s_get_fix_by_match_id
	| gml_Script_s_get_fix_winner_id
	| gml_Script_s_get_fix_by_week_and_teams
	| gml_Script_s_is_southland
	| gml_Script_s_sl_week_str
	| gml_Script_s_sl_get_week_date
	| gml_GlobalScript_s_color_picker
	| gml_Script_s_color_picker
	| gml_GlobalScript_s_color_to_hex
	| gml_Script_s_color_to_hex
	| gml_GlobalScript_s_complete_achievement
	| gml_GlobalScript_s_confirm_freeagent_hire_reset
	| gml_Script_s_confirm_freeagent_hire_reset
	| gml_GlobalScript_s_confirm_staff_hire_reset
	| gml_Script_s_confirm_staff_hire_reset
	| gml_GlobalScript_s_confirm_upgrade_rehab
	| gml_Script_s_confirm_upgrade_rehab
	| gml_GlobalScript_s_confirm_upgrade_stadium
	| gml_Script_s_confirm_upgrade_stadium
	| gml_GlobalScript_s_confirm_upgrade_training
	| gml_Script_s_confirm_upgrade_training
	| gml_GlobalScript_s_convert_scrimmage_to_goal_distance
	| gml_Script_s_convert_scrimmage_to_goal_distance
	| gml_GlobalScript_s_convert_string_to_sprite
	| gml_Script_s_convert_string_to_sprite
	| gml_GlobalScript_s_convert_uniform_colour
	| gml_Script_s_convert_uniform_colour
	| gml_GlobalScript_s_convert_uniform_colours_all
	| gml_Script_s_convert_uniform_colours_all
	| gml_GlobalScript_s_copy_teamnames_from_uniform_file
	| gml_Script_s_copy_teamnames_from_uniform_file
	| gml_GlobalScript_s_copy_uniforms_slot_a
	| gml_Script_s_copy_uniforms_slot_a
	| gml_GlobalScript_s_copy_uniforms_slot_b
	| gml_Script_s_copy_uniforms_slot_b
	| gml_GlobalScript_s_copy_uniforms_slot_c
	| gml_Script_s_copy_uniforms_slot_c
	| gml_GlobalScript_s_copy_uniforms_slot_d
	| gml_Script_s_copy_uniforms_slot_d
	| gml_GlobalScript_s_copy_uniforms_slot_e
	| gml_Script_s_copy_uniforms_slot_e
	| gml_GlobalScript_s_count_achievement
	| gml_GlobalScript_s_count_defenders
	| gml_Script_s_count_defenders
	| gml_GlobalScript_s_count_full_seasons
	| gml_Script_s_count_full_seasons
	| gml_Script_s_count_games_coached
	| gml_Script_s_count_games_simmed
	| gml_Script_s_count_fixtures_played
	| gml_GlobalScript_s_count_hires_by_position
	| gml_Script_s_count_hires_by_position
	| gml_GlobalScript_s_count_hof_entries
	| gml_Script_s_count_hof_entries
	| gml_GlobalScript_s_count_injuries_weeks
	| gml_Script_s_count_injuries_weeks
	| gml_GlobalScript_s_count_injuries
	| gml_Script_s_count_injuries
	| gml_GlobalScript_s_count_joboffers
	| gml_Script_s_count_joboffers
	| gml_GlobalScript_s_count_players_by_position_store
	| gml_Script_s_count_players_by_position_store
	| gml_GlobalScript_s_count_players_by_position
	| gml_Script_s_count_players_by_position
	| gml_GlobalScript_s_count_players_onfield_by_position
	| gml_Script_s_count_players_onfield_by_position
	| gml_GlobalScript_s_count_remaining_fixtures
	| gml_Script_s_count_remaining_fixtures
	| gml_GlobalScript_s_count_simmed_games
	| gml_Script_s_count_simmed_games
	| gml_GlobalScript_s_count_trait_fanfavorite
	| gml_Script_s_count_trait_fanfavorite
	| gml_GlobalScript_s_count_trait_scout
	| gml_Script_s_count_trait_scout
	| gml_GlobalScript_s_cover_object
	| gml_Script_s_cover_object
	| gml_GlobalScript_s_cpu_is_kicking
	| gml_Script_s_cpu_is_kicking_off
	| gml_Script_s_is_kickoff
	| gml_GlobalScript_s_crazygames
	| gml_Script__crazygames_init
	| gml_Script__crazygames_gameplay_start
	| gml_Script__crazygames_gameplay_stop
	| gml_Script__crazygames_pause
	| gml_Script__crazygames_resume
	| gml_Script__crazygames_rewarded_break
	| gml_Script__crazygames_midgame_break
	| gml_Script_gmcallback_crazy_callback
	| gml_GlobalScript_s_create_boundary
	| gml_Script_s_create_boundary
	| gml_GlobalScript_s_create_camera
	| gml_Script_s_create_camera
	| gml_GlobalScript_s_create_credit
	| gml_Script_s_create_credit
	| gml_GlobalScript_s_create_dilemma
	| gml_Script_s_create_dilemma
	| gml_GlobalScript_s_create_draftlist
	| gml_Script_s_create_draftlist
	| gml_Script_s_co_get_player_admission_max_skill
	| gml_GlobalScript_s_create_dummy
	| gml_Script_s_create_dummy
	| gml_GlobalScript_s_create_fixdata
	| gml_Script_s_create_fixdata
	| gml_GlobalScript_s_create_freeagent
	| gml_Script_s_create_freeagent
	| gml_GlobalScript_s_create_freeagentlist
	| gml_Script_s_create_freeagentlist
	| gml_GlobalScript_s_create_hirelist
	| gml_Script_s_create_hirelist
	| gml_GlobalScript_s_create_map_options
	| gml_Script_s_create_map_options
	| gml_GlobalScript_s_create_match_message
	| gml_Script_s_create_match_message
	| gml_Script_s_create_head2head_message
	| gml_GlobalScript_s_create_message
	| gml_Script_s_create_message
	| gml_Script_s_message_recenter
	| gml_Script_s_message_toggle
	| gml_Script_s_create_message3
	| gml_Script_s_create_message4
	| gml_Script_s_do_message
	| gml_Script_s_msg
	| gml_Script_s_loading_button_hijack
	| gml_Script_s_loading_trigger
	| gml_Script____struct___194_s_loading_start_s_create_message
	| gml_Script_s_loading_start
	| gml_Script_s_loading_callback
	| gml_GlobalScript_s_create_my_fixture_list
	| gml_Script_s_create_my_fixture_list
	| gml_GlobalScript_s_create_new_roster_newteam
	| gml_Script_s_create_new_roster_newteam
	| gml_Script_s_create_new_roster_cut_old_roster
	| gml_GlobalScript_s_create_new_roster
	| gml_Script_s_create_new_roster
	| gml_GlobalScript_s_create_new_save
	| gml_Script_s_create_new_save
	| gml_Script_s_regen_clean_save_mode_dependent_data
	| gml_Script_s_load_co_mode_files
	| gml_GlobalScript_s_create_new_stafflist
	| gml_Script_s_create_new_stafflist
	| gml_GlobalScript_s_create_news_message
	| gml_Script_s_create_news_dyn_message
	| gml_GlobalScript_s_create_player_storelist
	| gml_Script_s_create_player_storelist
	| gml_GlobalScript_s_create_player
	| gml_Script_s_create_player_get_RC_cost
	| gml_Script_s_create_player
	| gml_GlobalScript_s_create_playoffs
	| gml_Script_s_create_playoffs
	| gml_GlobalScript_s_create_playoffs2
	| gml_Script_s_create_playoffs2
	| gml_GlobalScript_s_create_staff
	| gml_Script_s_create_staff
	| gml_Script_s_create_headcoach_pmap
	| gml_GlobalScript_s_create_storelist
	| gml_Script_s_create_storelist
	| gml_GlobalScript_s_create_tradelist
	| gml_Script_s_create_tradelist
	| gml_GlobalScript_s_crop_text
	| gml_Script_s_crop_text
	| gml_GlobalScript_s_dec_to_hex
	| gml_Script_s_dec_to_hex
	| gml_GlobalScript_s_decline_facilities
	| gml_Script_s_decline_facilities
	| gml_GlobalScript_s_destroy_master
	| gml_Script_s_destroy_master
	| gml_GlobalScript_s_destroy_match_objects
	| gml_Script_s_destroy_match_objects
	| gml_GlobalScript_s_dilemma_choice_1
	| gml_Script_s_dilemma_choice_1
	| gml_GlobalScript_s_dilemma_choice_2
	| gml_Script_s_dilemma_choice_2
	| gml_GlobalScript_s_dilemma_choice
	| gml_Script_s_dilemma_choice
	| gml_Script_s_cut_player_end
	| gml_Script_s_cut_player_end_gpa
	| gml_Script_s_cut_player_end_toxic
	| gml_Script_s_cut_player_end_party
	| gml_Script_s_cut_player_end_toxic_max
	| gml_Script_s_cut_player_end_party_max
	| gml_Script_s_dilemma_morecc_store
	| gml_Script_s_dilemma_morecc_back
	| gml_Script_s_dilemma_end
	| gml_Script_s_dilemma_college_check_chained
	| gml_Script_s_dilemma_college_check_pending_news
	| gml_GlobalScript_s_do_audible
	| gml_Script_s_do_audible
	| gml_GlobalScript_s_do_banner_draft
	| gml_Script_s_do_banner_draft
	| gml_Script_s_do_banner_season_review
	| gml_GlobalScript_s_do_bye_week
	| gml_Script_s_do_bye_week
	| gml_GlobalScript_s_do_info_coachtrait
	| gml_Script_s_do_info_coachtrait
	| gml_GlobalScript_s_do_info_draftpicks
	| gml_Script_s_do_info_draftpicks
	| gml_GlobalScript_s_do_info_position
	| gml_Script_s_do_info_position
	| gml_GlobalScript_s_do_info_skills
	| gml_Script_s_do_info_skills
	| gml_GlobalScript_s_do_info
	| gml_Script_s_do_info
	| gml_Script_s_info_draft_col1
	| gml_Script_s_info_draft_col2
	| gml_GlobalScript_s_do_nag_message
	| gml_Script_s_do_nag_message
	| gml_Script_s_do_ad_retrogoal
	| gml_GlobalScript_s_do_next_week
	| gml_Script_s_do_next_week
	| gml_GlobalScript_s_do_player_awards
	| gml_Script_s_do_player_awards
	| gml_Script_s_do_player_awards_college
	| gml_Script_s_Award_OutstandingPOTY
	| gml_Script_s_Award_ExtraordinaryAcademicPOTY
	| gml_Script_s_Award_OffensivePOTY
	| gml_Script_s_Award_DefensivePOTY
	| gml_Script_s_Award_PositionPOTY
	| gml_Script_s_Award_AnyPositionPOTY
	| gml_Script_s_Award_CommunityServicePOTY
	| gml_Script_s_Award_WalkOnPOTY
	| gml_Script_s_Award_FreshmanPOTY
	| gml_Script_s_Award_AcademicPrize
	| gml_GlobalScript_s_do_playoff_schedule
	| gml_Script_s_do_playoff_schedule
	| gml_Script_s_get_retrobowl_mvp_winner
	| gml_GlobalScript_s_do_postmatch_dilemma
	| gml_Script_s_do_postmatch_dilemma
	| gml_GlobalScript_s_do_postmatch_effects
	| gml_Script_s_do_postmatch_effects
	| gml_GlobalScript_s_do_postmatch_fans
	| gml_Script_s_do_postmatch_fans
	| gml_Script_s_get_postmatch_fans_qb
	| gml_GlobalScript_s_do_prematch_dilemma_qb
	| gml_Script_s_do_prematch_dilemma_qb
	| gml_GlobalScript_s_do_prematch_dilemma
	| gml_Script_s_do_prematch_dilemma
	| gml_Script_s_create_dilemma_news
	| gml_Script_s_clear_msg_and_back
	| gml_Script_s_get_standard_dilemmas
	| gml_Script_s_dilemma_defend_player_cost
	| gml_Script_s_can_afford_dilemma_cc
	| gml_Script_s_get_college_dilemmas
	| gml_GlobalScript_s_do_purchase_message
	| gml_Script_s_do_purchase_message
	| gml_GlobalScript_s_do_result_news_qb
	| gml_Script_s_do_result_news_qb
	| gml_Script_s_choose_news
	| gml_GlobalScript_s_do_result_news
	| gml_Script_s_do_result_news
	| gml_GlobalScript_s_do_review_message
	| gml_Script_s_do_review_message
	| gml_GlobalScript_s_do_schedule
	| gml_Script_s_do_schedule
	| gml_Script____struct___195_s_co_get_sim_results_s_do_schedule
	| gml_Script_s_co_get_sim_results
	| gml_Script_s_co_conference_stats
	| gml_GlobalScript_s_do_timeout
	| gml_Script_s_do_timeout
	| gml_GlobalScript_s_do_touchback
	| gml_Script_s_do_touchback
	| gml_GlobalScript_s_draw_commentary
	| gml_Script_s_draw_commentary
	| gml_GlobalScript_s_draw_gamepad_controls
	| gml_Script_s_draw_gamepad_controls
	| gml_GlobalScript_s_draw_kick_cone
	| gml_Script_s_draw_kick_cone
	| gml_GlobalScript_s_draw_kicking_power
	| gml_Script_s_draw_kicking_power
	| gml_GlobalScript_s_draw_my_route
	| gml_Script_s_draw_my_route
	| gml_GlobalScript_s_draw_player_image
	| gml_Script_s_draw_player_image
	| gml_GlobalScript_s_draw_scoreboard_qb_training
	| gml_Script_s_draw_scoreboard_qb_training
	| gml_GlobalScript_s_draw_scoreboard
	| gml_Script_s_draw_scoreboard
	| gml_Script_s_get_exhibition_turn_text
	| gml_GlobalScript_s_draw_scrimmage
	| gml_Script_s_draw_scrimmage
	| gml_GlobalScript_s_draw_wind
	| gml_Script_s_draw_wind
	| gml_GlobalScript_s_drop_ball
	| gml_Script_s_drop_ball
	| gml_GlobalScript_s_edit_cancel
	| gml_Script_s_edit_cancel
	| gml_GlobalScript_s_edit_confirm_conf1
	| gml_Script_s_edit_confirm_conf1
	| gml_GlobalScript_s_edit_confirm_conf2
	| gml_Script_s_edit_confirm_conf2
	| gml_GlobalScript_s_edit_confirm_div1
	| gml_Script_s_edit_confirm_div1
	| gml_GlobalScript_s_edit_confirm_div2
	| gml_Script_s_edit_confirm_div2
	| gml_GlobalScript_s_edit_confirm_div3
	| gml_Script_s_edit_confirm_div3
	| gml_GlobalScript_s_edit_confirm_div4
	| gml_Script_s_edit_confirm_div4
	| gml_GlobalScript_s_edit_confirm_profile
	| gml_Script_s_edit_confirm_profile
	| gml_Script_s_update_boss_profile
	| gml_GlobalScript_s_edit_field
	| gml_Script_s_edit_field
	| gml_GlobalScript_s_edit_name
	| gml_Script_s_edit_name
	| gml_GlobalScript_s_end_draft_round
	| gml_Script_s_end_draft_round
	| gml_Script_s_destroy_draftlist
	| gml_GlobalScript_s_end_match
	| gml_Script_s_end_match
	| gml_GlobalScript_s_end_replay
	| gml_Script_s_end_replay
	| gml_GlobalScript_s_fieldtxt_yards
	| gml_GlobalScript_s_fieldtxt
	| gml_Script_s_fieldtxt
	| gml_Script_s_fieldtxt_yards
	| gml_Script_s_fieldimg
	| gml_GlobalScript_s_find_default_button
	| gml_Script_s_find_default_button
	| gml_GlobalScript_s_find_gamepad
	| gml_Script_s_find_gamepad
	| gml_Script_s_gamepad_is_fingerprint_sensor
	| gml_GlobalScript_s_fire_coach
	| gml_Script_s_fire_coach
	| gml_GlobalScript_s_force_quit
	| gml_Script_s_force_quit
	| gml_GlobalScript_s_format_hex_color
	| gml_Script_s_format_hex_color
	| gml_GlobalScript_s_freeze_purchase_buttons
	| gml_Script_s_freeze_purchase_buttons
	| gml_GlobalScript_s_generate_uid
	| gml_Script_s_generate_uid
	| gml_GlobalScript_s_get_achievement_percentage
	| gml_GlobalScript_s_get_achievement
	| gml_GlobalScript_s_get_aim_direction
	| gml_Script_s_get_aim_direction
	| gml_GlobalScript_s_get_attitude_icon
	| gml_Script_s_get_attitude_icon
	| gml_Script_s_attitude_reduce_step
	| gml_GlobalScript_s_get_average_yards
	| gml_Script_s_get_average_yards
	| gml_GlobalScript_s_get_coach_cost
	| gml_Script_s_get_coach_cost
	| gml_GlobalScript_s_get_condition_squad
	| gml_Script_s_get_condition_squad
	| gml_Script_s_get_condition_squad_from_roster
	| gml_GlobalScript_s_get_credit
	| gml_Script_s_get_credit
	| gml_GlobalScript_s_get_defense_attribute
	| gml_Script_s_get_defense_attribute
	| gml_Script_s_get_attribute
	| gml_Script_s_attribute_buff
	| gml_GlobalScript_s_get_destination
	| gml_Script_s_get_destination
	| gml_GlobalScript_s_get_distance_to_furthest_teammate
	| gml_Script_s_get_distance_to_furthest_teammate
	| gml_GlobalScript_s_get_distance_to_nearest_opponent
	| gml_Script_s_get_distance_to_nearest_opponent
	| gml_GlobalScript_s_get_division_winner_by_seed
	| gml_Script_s_get_division_winner_by_seed
	| gml_GlobalScript_s_get_division_winner_name_by_seed
	| gml_Script_s_get_division_winner_name_by_seed
	| gml_GlobalScript_s_get_division_winner_name
	| gml_Script_s_get_division_winner_name
	| gml_GlobalScript_s_get_division_winner
	| gml_Script_s_get_division_winner
	| gml_GlobalScript_s_get_happiness
	| gml_Script_s_get_happiness
	| gml_GlobalScript_s_get_hire_shortlist
	| gml_Script_s_get_hire_shortlist
	| gml_GlobalScript_s_get_history_by_year
	| gml_GlobalScript_s_get_holder_name
	| gml_Script_s_get_holder_name
	| gml_GlobalScript_s_get_human_fixture_by_week
	| gml_Script_s_get_human_fixture_by_week
	| gml_GlobalScript_s_get_human_fixture_next
	| gml_Script_s_get_human_fixture_next
	| gml_GlobalScript_s_get_human_fixture_previous
	| gml_Script_s_get_human_fixture_previous
	| gml_GlobalScript_s_get_kick_direction
	| gml_Script_s_get_kick_direction
	| gml_GlobalScript_s_get_kicker_name
	| gml_Script_s_get_kicker_name
	| gml_GlobalScript_s_get_kicker
	| gml_Script_s_get_kicker
	| gml_GlobalScript_s_get_lifestyle
	| gml_Script_s_get_lifestyle
	| gml_GlobalScript_s_get_match_rating
	| gml_Script_s_get_match_rating
	| gml_GlobalScript_s_get_max_age_normal
	| gml_Script_s_get_max_age_normal
	| gml_GlobalScript_s_get_max_age
	| gml_GlobalScript_s_get_meeting_cost_condition
	| gml_Script_s_get_meeting_cost_condition
	| gml_GlobalScript_s_get_meeting_cost_delay_retirement
	| gml_Script_s_get_meeting_cost_delay_retirement
	| gml_GlobalScript_s_get_meeting_cost_extend_contract
	| gml_Script_s_get_meeting_cost_extend_contract
	| gml_GlobalScript_s_get_meeting_cost_levelup
	| gml_Script_s_get_meeting_cost_levelup
	| gml_GlobalScript_s_get_meeting_cost_morale
	| gml_Script_s_get_meeting_cost_morale
	| gml_GlobalScript_s_get_morale
	| gml_Script_s_get_morale
	| gml_Script_s_get_morale_from_roster
	| gml_GlobalScript_s_get_nearest_opponent_by_position
	| gml_Script_s_get_nearest_opponent_by_position
	| gml_GlobalScript_s_get_nearest_opponent
	| gml_Script_s_get_nearest_opponent
	| gml_GlobalScript_s_get_new_salary
	| gml_Script_s_get_new_salary
	| gml_GlobalScript_s_get_num_audibles
	| gml_Script_s_get_num_audibles
	| gml_GlobalScript_s_get_offer_team
	| gml_Script_s_get_offer_team
	| gml_GlobalScript_s_get_opponent_team_tla
	| gml_Script_s_get_opponent_team_tla
	| gml_GlobalScript_s_get_player_body_type
	| gml_Script_s_get_player_body_type
	| gml_Script_s_spr_from_bt
	| gml_Script_s_is_spr_bodytype
	| gml_Script_s_get_team_body_type
	| gml_GlobalScript_s_get_player_by_lname
	| gml_Script_s_get_player_by_lname
	| gml_GlobalScript_s_get_player_by_position
	| gml_Script_s_get_player_by_position
	| gml_Script_s_get_player_by_position_from_roster
	| gml_Script_s_get_player_kick_returner
	| gml_GlobalScript_s_get_player_name_for_record
	| gml_Script_s_get_player_name_for_record
	| gml_GlobalScript_s_get_player_name
	| gml_Script_s_get_player_name
	| gml_GlobalScript_s_get_player_potential
	| gml_Script_s_get_player_potential
	| gml_GlobalScript_s_get_player_rating
	| gml_Script_s_get_player_rating
	| gml_GlobalScript_s_get_playoff_fixture_by_week
	| gml_Script_s_get_playoff_fixture_by_week
	| gml_GlobalScript_s_get_point_swing
	| gml_Script_s_get_point_swing
	| gml_Script_s_get_head_to_head
	| gml_Script_s_get_win_pecentage_by_confdiv
	| gml_GlobalScript_s_get_points_season
	| gml_Script_s_get_points_season
	| gml_GlobalScript_s_get_points_versus
	| gml_Script_s_get_points_versus
	| gml_GlobalScript_s_get_position_colour
	| gml_Script_s_get_position_colour
	| gml_GlobalScript_s_get_qb_energy
	| gml_Script_s_get_qb_energy
	| gml_GlobalScript_s_get_qb_name
	| gml_Script_s_get_qb_name
	| gml_GlobalScript_s_get_qb_pmap
	| gml_Script_s_get_qb_pmap
	| gml_GlobalScript_s_get_quarterback
	| gml_Script_s_get_quarterback
	| gml_GlobalScript_s_get_random_charity
	| gml_Script_s_get_random_charity
	| gml_GlobalScript_s_get_random_coach
	| gml_Script_s_get_random_coach
	| gml_GlobalScript_s_get_random_college_name
	| gml_Script_s_get_random_college_name
	| gml_GlobalScript_s_get_random_first_name
	| gml_Script_s_get_random_first_name
	| gml_GlobalScript_s_get_random_last_name
	| gml_Script_s_get_random_last_name
	| gml_GlobalScript_s_get_random_player_by_position
	| gml_Script_s_get_random_player_by_position
	| gml_Script_s_get_random_player_by_position_from_roster
	| gml_GlobalScript_s_get_random_player_defensive
	| gml_Script_s_get_random_player_defensive
	| gml_GlobalScript_s_get_random_player_offensive
	| gml_Script_s_get_random_player_offensive
	| gml_GlobalScript_s_get_random_player
	| gml_Script_s_get_random_player
	| gml_GlobalScript_s_get_random_scoredata
	| gml_Script_s_get_random_scoredata
	| gml_Script_s_co_get_random_scoredata
	| gml_GlobalScript_s_get_random_teamname
	| gml_Script_s_get_random_teamname
	| gml_Script_s_get_random_team_id
	| gml_GlobalScript_s_get_record
	| gml_Script_s_get_record
	| gml_GlobalScript_s_get_required_position
	| gml_Script_s_get_required_position
	| gml_Script_s_get_required_position_no_QB_RB
	| gml_GlobalScript_s_get_salary_cap_space
	| gml_Script_s_get_salary_cap_space
	| gml_GlobalScript_s_get_salary_total
	| gml_Script_s_get_salary_total
	| gml_GlobalScript_s_get_savename
	| gml_Script_s_get_savename
	| gml_GlobalScript_s_get_skin_colour_by_index
	| gml_Script_s_get_skin_colour_by_index
	| gml_GlobalScript_s_get_staff
	| gml_Script_s_get_staff
	| gml_GlobalScript_s_get_store_player_by_position
	| gml_Script_s_get_store_player_by_position
	| gml_GlobalScript_s_get_string_action_result
	| gml_Script_s_get_string_action_result
	| gml_GlobalScript_s_get_string_anim
	| gml_Script_s_get_string_anim
	| gml_GlobalScript_s_get_string_attitude
	| gml_Script_s_get_string_attitude
	| gml_GlobalScript_s_get_string_ball_state
	| gml_Script_s_get_string_ball_state
	| gml_GlobalScript_s_get_string_commstage
	| gml_Script_s_get_string_commstage
	| gml_GlobalScript_s_get_string_condition
	| gml_Script_s_get_string_condition
	| gml_GlobalScript_s_get_string_conference
	| gml_Script_s_get_string_conference
	| gml_GlobalScript_s_get_string_division
	| gml_Script_s_get_string_division
	| gml_GlobalScript_s_get_string_downand
	| gml_Script_s_get_string_downand
	| gml_GlobalScript_s_get_string_float
	| gml_Script_s_get_string_float
	| gml_GlobalScript_s_get_string_heshe
	| gml_Script_s_get_string_heshe
	| gml_GlobalScript_s_get_string_performance
	| gml_Script_s_get_string_performance
	| gml_GlobalScript_s_get_string_picks
	| gml_Script_s_get_string_picks
	| gml_GlobalScript_s_get_string_position_full
	| gml_Script_s_get_string_position_full
	| gml_GlobalScript_s_get_string_position
	| gml_Script_s_get_string_position
	| gml_GlobalScript_s_get_string_record
	| gml_Script_s_get_string_record
	| gml_Script_s_get_string_record_co_extended
	| gml_Script_s_get_string_conf_tag
	| gml_GlobalScript_s_get_string_save_details
	| gml_Script_s_get_string_save_details
	| gml_GlobalScript_s_get_string_sex
	| gml_Script_s_get_string_sex
	| gml_GlobalScript_s_get_string_state
	| gml_Script_s_get_string_state
	| gml_GlobalScript_s_get_string_time
	| gml_Script_s_get_string_time
	| gml_GlobalScript_s_get_string_trade_value
	| gml_Script_s_get_string_trade_value
	| gml_GlobalScript_s_get_string_trait
	| gml_Script_s_get_string_trait
	| gml_GlobalScript_s_get_string_week_short
	| gml_Script_s_get_string_week_short
	| gml_GlobalScript_s_get_string_week
	| gml_Script_s_get_string_week
	| gml_GlobalScript_s_get_string_year
	| gml_Script_s_get_string_year
	| gml_GlobalScript_s_get_team_by_id
	| gml_Script_s_get_team_by_id
	| gml_Script_s_get_team_by_id_internal
	| gml_GlobalScript_s_get_team_by_seed
	| gml_Script_s_get_team_by_seed
	| gml_Script_s_get_team_by_seed_co
	| gml_Script_s_get_team_seeding
	| gml_GlobalScript_s_get_team_defense
	| gml_Script_s_get_team_defense
	| gml_Script_s_get_team_defense_exh
	| gml_Script_s_get_team_defense_from_roster
	| gml_GlobalScript_s_get_team_id_by_seed
	| gml_Script_s_get_team_id_by_seed
	| gml_GlobalScript_s_get_team_name_by_id
	| gml_Script_s_get_team_name_by_id
	| gml_GlobalScript_s_get_team_name_by_seed
	| gml_Script_s_get_team_name_by_seed
	| gml_GlobalScript_s_get_team_net_points
	| gml_Script_s_get_team_net_points
	| gml_GlobalScript_s_get_team_offense
	| gml_Script_s_get_team_offense
	| gml_Script_s_get_team_offense_exh
	| gml_Script_s_get_team_offense_from_roster
	| gml_Script_s_debug_up_team_offense
	| gml_GlobalScript_s_get_team_position_by_id
	| gml_Script_s_get_team_position_by_id
	| gml_GlobalScript_s_get_team_tla_by_id
	| gml_Script_s_get_team_tla_by_id
	| gml_GlobalScript_s_get_team_winpct
	| gml_Script_s_get_team_winpct
	| gml_GlobalScript_s_get_ticker_text
	| gml_Script_s_get_ticker_text
	| gml_GlobalScript_s_get_trade_value_by_rating
	| gml_Script_s_get_trade_value_by_rating
	| gml_GlobalScript_s_get_trade_value
	| gml_Script_s_get_trade_value
	| gml_GlobalScript_s_get_watermark_color
	| gml_Script_s_get_watermark_color
	| gml_GlobalScript_s_get_watermarked_stats
	| gml_Script_s_get_watermarked_stats
	| gml_GlobalScript_s_get_week_superbowl
	| gml_Script_s_get_week_superbowl
	| gml_GlobalScript_s_get_wins_versus
	| gml_Script_s_get_wins_versus
	| gml_GlobalScript_s_gui_helpers
	| gml_Script_s_create_label
	| gml_Script_s_is_new_shadow
	| gml_GlobalScript_s_gui_matchline
	| gml_Script____struct___196_s_obj_matchLine_create_s_gui_matchline
	| gml_Script_s_obj_matchLine_create
	| gml_Script_s_obj_matchLine_step
	| gml_Script_s_obj_matchLine_global_flick
	| gml_Script_s_obj_matchLine_draw
	| gml_Script_s_obj_matchLine_draw_gui
	| gml_GlobalScript_s_has_xp_gain
	| gml_Script_s_has_xp_gain
	| gml_GlobalScript_s_hex_string_to_col
	| gml_Script_s_hex_string_to_col
	| gml_GlobalScript_s_history
	| gml_Script_s_get_history_by_year
	| gml_Script_s_create_history_for_current_year
	| gml_Script_s_log_this_year_history
	| gml_Script_s_log_full_history
	| gml_Script_s_update_history
	| gml_Script_s_update_history_playoffs
	| gml_Script_s_update_history_finish
	| gml_Script_s_update_history_season_end
	| gml_Script_s_update_history_won_championship
	| gml_Script_s_update_history_reached_playoffs_round
	| gml_Script_s_update_history_won_bowl
	| gml_Script_s_update_history_subdivisional_champ_finals
	| gml_Script_s_history_display_lines_count
	| gml_Script_s_history_display_lines_count_yearindex
	| gml_GlobalScript_s_html5_helpers
	| gml_Script_file_exists_safe
	| gml_GlobalScript_s_iap_async_android
	| gml_Script_s_debug_purge_all_android_iap
	| gml_Script_s_iap_async_android
	| gml_GlobalScript_s_iap_async_ios
	| gml_Script_s_iap_async_ios
	| gml_GlobalScript_s_iap_init
	| gml_Script_s_iap_init
	| gml_GlobalScript_s_iap_purchase_Credits_100
	| gml_GlobalScript_s_iap_purchase_Credits_20
	| gml_GlobalScript_s_iap_purchase_Credits_250
	| gml_GlobalScript_s_iap_purchase_Credits_50
	| gml_GlobalScript_s_iap_purchase_FullVersion
	| gml_Script_s_iap_purchase_FullVersion
	| gml_GlobalScript_s_iap_restore
	| gml_Script_s_iap_restore
	| gml_GlobalScript_s_increase_player_attribute
	| gml_Script_s_increase_player_attribute
	| gml_GlobalScript_s_injury_effect_on_attitude
	| gml_Script_s_injury_effect_on_attitude
	| gml_GlobalScript_s_intercept_object
	| gml_Script_s_intercept_object
	| gml_GlobalScript_s_is_backup
	| gml_Script_s_is_backup
	| gml_GlobalScript_s_is_ball_dead
	| gml_Script_s_is_ball_dead
	| gml_GlobalScript_s_is_bye_week
	| gml_Script_s_is_bye_week
	| gml_Script_s_get_bye_week
	| gml_GlobalScript_s_is_defensive_player
	| gml_Script_s_is_defensive_player
	| gml_GlobalScript_s_is_falling
	| gml_Script_s_is_falling
	| gml_GlobalScript_s_is_in_the_clear
	| gml_Script_s_is_in_the_clear
	| gml_GlobalScript_s_is_offensive_player
	| gml_Script_s_is_offensive_player
	| gml_Script_s_get_training_reg
	| gml_GlobalScript_s_is_on_pitch_xy
	| gml_Script_s_is_on_pitch_xy
	| gml_GlobalScript_s_is_on_pitch
	| gml_Script_s_is_on_pitch
	| gml_GlobalScript_s_is_quarter_over
	| gml_Script_s_is_quarter_over
	| gml_GlobalScript_s_is_staff
	| gml_Script_s_is_staff
	| gml_GlobalScript_s_kick_ball
	| gml_Script_s_kick_ball
	| gml_GlobalScript_s_kick_off
	| gml_Script_s_kick_off
	| gml_GlobalScript_s_last_secs_of_half
	| gml_Script_s_last_secs_of_half
	| gml_Script_s_seconds_remaining
	| gml_GlobalScript_s_lastname_already_on_roster
	| gml_Script_s_lastname_already_on_roster
	| gml_GlobalScript_s_lines_intersect
	| gml_Script_s_lines_intersect
	| gml_GlobalScript_s_load_endzone_from_uniform_file
	| gml_Script_s_load_endzone_from_uniform_file
	| gml_GlobalScript_s_load_map_file
	| gml_Script_s_load_map_file
	| gml_Script_s_destroy_map_file
	| gml_GlobalScript_s_load_options
	| gml_Script_s_load_options
	| gml_GlobalScript_s_load_profile_uni
	| gml_Script_s_load_profile_uni
	| gml_GlobalScript_s_load_retrobowl_history
	| gml_Script_s_load_retrobowl_history
	| gml_Script_is_string_real
	| gml_GlobalScript_s_load_retrobowl_hof
	| gml_Script_s_load_retrobowl_hof
	| gml_GlobalScript_s_load_schedule
	| gml_Script_s_load_schedule
	| gml_Script_s_load_college_schedule
	| gml_Script_s_get_schedule_data_years
	| gml_Script_s_get_schedule_year_stagger
	| gml_Script_s_get_fix_type
	| gml_Script____struct___197_s_calc_fix_type_s_load_schedule
	| gml_Script_s_calc_fix_type
	| gml_Script_s_get_fix_type_string
	| gml_Script_s_get_fix_type_string_by_values
	| gml_Script_s_create_fix_type_string
	| gml_Script_s_list_schedule_fix_type
	| gml_GlobalScript_s_load_strings
	| gml_Script_s_refresh_strings
	| gml_Script_s_load_strings
	| gml_Script_s_select_lang
	| gml_Script_s_select_lang_file
	| gml_Script_s_select_override_lang_file
	| gml_Script_s_select_institution_lang_file
	| gml_Script_s_add_file_to_lang_strings
	| gml_Script____struct___198_s_co_refresh_strings_s_load_strings
	| gml_Script_s_co_refresh_strings
	| gml_Script_s_co_load_strings
	| gml_Script_s_load_language_file
	| gml_GlobalScript_s_load_team_detail
	| gml_Script_s_load_team_detail
	| gml_GlobalScript_s_load_teamname_from_uniform_file
	| gml_Script_s_load_teamname_from_uniform_file
	| gml_GlobalScript_s_load_teams
	| gml_Script_s_load_teams
	| gml_Script_s_load_teams_data
	| gml_Script_s_reset_co_team_data
	| gml_Script_s_set_teams_min_max_ids
	| gml_Script_s_get_struct_in_array_by_uid
	| gml_Script____struct___199_load_data_to_struct_array_s_load_teams
	| gml_Script_load_data_to_struct_array
	| gml_Script____struct___200_s_load_json_s_load_teams
	| gml_Script_s_load_json
	| gml_Script_s_save_json
	| gml_Script_anon_4747_keys_rows_data_s_load_teams
	| gml_Script_anon_5285_keys_rows_data_s_load_teams
	| gml_Script_anon_5654_keys_rows_data_s_load_teams
	| gml_Script_anon_5724_keys_rows_data_s_load_teams
	| gml_Script_anon_5792_keys_rows_data_s_load_teams
	| gml_Script_keys_rows_data
	| gml_GlobalScript_s_load_uniform_file2
	| gml_Script_s_load_uniform_file2
	| gml_Script_s_verify_restore_uniform_file
	| gml_GlobalScript_s_loadgame
	| gml_Script_btn_click_LoadSlot1
	| gml_Script_btn_click_LoadSlot2
	| gml_Script_btn_click_LoadSlot3
	| gml_Script_btn_click_LoadSlot4
	| gml_Script_btn_click_LoadSlot5
	| gml_Script_btn_click_slot
	| gml_Script_s_master_load
	| gml_Script_s_master_load_from_backup
	| gml_Script_s_loadgame
	| gml_Script_s_cap_breach_refresh
	| gml_Script_s_cap_breach_str
	| gml_Script_s_is_player_pmap_corrupt
	| gml_Script_s_check_for_return_stats
	| gml_Script_s_check_longest_records
	| gml_Script_s_fix_poki_browser_max_percent_grade
	| gml_Script_s_update_ui_colours
	| gml_Script_s_get_college_primary_col
	| gml_Script_s_update_game_title
	| gml_Script_s_reset_subdivision_names
	| gml_GlobalScript_s_log_player
	| gml_Script_s_log_player
	| gml_GlobalScript_s_make_random_colour
	| gml_Script_s_make_random_colour
	| gml_GlobalScript_s_match_rating_effect_on_morale
	| gml_Script_s_match_rating_effect_on_morale
	| gml_GlobalScript_s_meter_change_end
	| gml_Script_s_meter_change_end
	| gml_GlobalScript_s_meter_change
	| gml_Script_s_meter_change
	| gml_GlobalScript_s_msg_clear_info_draft
	| gml_Script_s_msg_clear_info_draft
	| gml_GlobalScript_s_msg_clear
	| gml_Script_s_msg_clear
	| gml_GlobalScript_s_msg_timeouts
	| gml_Script_s_msg_timeouts
	| gml_GlobalScript_s_news_clear
	| gml_Script_s_news_clear
	| gml_GlobalScript_s_notification
	| gml_Script_s_notification
	| gml_GlobalScript_s_obj_controller_draw_begin
	| gml_Script_s_obj_controller_draw_begin
	| gml_GlobalScript_s_obj_controller_helpers
	| gml_Script_s_obj_controller_step2
	| gml_Script_s_obj_controller_step
	| gml_GlobalScript_s_obj_player_draw_begin
	| gml_Script_s_obj_player_draw_begin
	| gml_GlobalScript_s_obj_player_helpers
	| gml_Script_s_obj_player_step2
	| gml_Script_s_obj_player_step
	| gml_GlobalScript_s_open_store_nag
	| gml_Script_s_open_store_nag
	| gml_GlobalScript_s_open_store
	| gml_Script_s_open_store
	| gml_Script_s_btn_store_exit
	| gml_Script_s_iap_purchase_credits
	| gml_Script_s_iap_purchase_Credits_100
	| gml_Script_s_iap_purchase_Credits_20
	| gml_Script_s_iap_purchase_Credits_250
	| gml_Script_s_iap_purchase_Credits_50
	| gml_Script_s_iap_purchase_Credits_2000
	| gml_Script_s_is_consumable_pruchase
	| gml_Script_s_award_shop_credits
	| gml_Script_s_do_info_unlimited_info
	| gml_Script_s_do_info_unlimited_info_continue
	| gml_GlobalScript_s_opponent_goalside
	| gml_Script_s_opponent_goalside
	| gml_GlobalScript_s_opposite_aim
	| gml_Script_s_opposite_aim
	| gml_GlobalScript_s_parse_dilemma
	| gml_Script_s_parse_dilemma
	| gml_GlobalScript_s_parse_intro
	| gml_Script_s_parse_intro
	| gml_GlobalScript_s_parse_news
	| gml_Script_s_parse_news
	| gml_GlobalScript_s_parse_player_message
	| gml_Script_s_parse_player_message
	| gml_GlobalScript_s_parse_string
	| gml_Script_s_parse_string
	| gml_GlobalScript_s_play
	| gml_Script_s_play
	| gml_Script_s_play_endweek
	| gml_GlobalScript_s_player_at_max_potential
	| gml_Script_s_player_at_max_potential
	| gml_GlobalScript_s_player_gpa
	| gml_Script_s_gpa_from_percent_grade
	| gml_Script_s_gpa_string
	| gml_Script_s_gpa_string_direct
	| gml_Script_s_decay_percent_grade
	| gml_Script_s_debug_recover_percent_grade
	| gml_Script_s_post_match_gpa_refresh
	| gml_Script_s_add_percent_grade
	| gml_Script_s_get_decay
	| gml_Script_s_get_decay_info
	| gml_Script_s_refresh_suspended
	| gml_Script_s_get_percent_grade_squad
	| gml_Script_btn_click_Boost_GPA
	| gml_Script_btn_response_boost_gpa
	| gml_Script_s_post_season_gpa_boost
	| gml_Script_s_my_team_academics
	| gml_Script_s_player_grade_suspend
	| gml_Script_s_player_grade_suspend_from_age
	| gml_Script_s_player_grade_lift_suspension
	| gml_Script_s_gpa_step_from_percent_grade
	| gml_Script_s_percent_grade_from_gpa_step_UPPER
	| gml_Script_s_player_gpa_color
	| gml_Script_s_player_gpa_colors_info
	| gml_GlobalScript_s_player_party
	| gml_Script_s_update_party_meter
	| gml_Script_s_get_party_info
	| gml_Script_s_add_to_party_meter
	| gml_Script_s_clear_party_meter
	| gml_Script_s_team_halve_all_party_meters
	| gml_Script_s_team_clear_all_party_meters
	| gml_GlobalScript_s_player_profile_qb_mode
	| gml_Script_s_player_profile_qb_mode
	| gml_GlobalScript_s_playoffs_12
	| gml_Script_s_playoffs_12
	| gml_GlobalScript_s_point_to_path
	| gml_Script_s_point_to_path
	| gml_GlobalScript_s_populate_division
	| gml_Script_s_populate_division
	| gml_GlobalScript_s_populate_schedulebox
	| gml_Script_s_populate_schedulebox
	| gml_GlobalScript_s_position_already_on_roster
	| gml_Script_s_position_already_on_roster
	| gml_GlobalScript_s_position_edit_name_btn
	| gml_Script_s_position_edit_name_btn
	| gml_GlobalScript_s_practice_passing
	| gml_Script_s_practice_passing
	| gml_GlobalScript_s_practice_qb_mode
	| gml_Script_s_practice_qb_mode
	| gml_Script_s_end_qb_mode_practice
	| gml_Script_s_quit_qb_mode_practice
	| gml_GlobalScript_s_practice_running_qb
	| gml_Script_s_practice_running_qb
	| gml_GlobalScript_s_practice_running
	| gml_Script_s_practice_running
	| gml_GlobalScript_s_pre_match
	| gml_Script_s_pre_match
	| gml_Script_s_continue_time_for_draft_msg
	| gml_Script_s_co_pre_match
	| gml_Script_s_rm_winners_notice
	| gml_GlobalScript_s_promote_playoff_winner
	| gml_Script_s_promote_playoff_winner
	| gml_Script_s_seed_divisional_round
	| gml_GlobalScript_s_punt
	| gml_Script_s_punt
	| gml_GlobalScript_s_qb_mode_auto_xp
	| gml_Script_s_qb_mode_auto_xp
	| gml_GlobalScript_s_qb_mode_update_resting
	| gml_Script_s_qb_mode_update_resting
	| gml_GlobalScript_s_qb_run
	| gml_Script_s_qb_run
	| gml_Script_s_qb_revert_throw
	| gml_GlobalScript_s_receive_ball
	| gml_Script_s_receive_ball
	| gml_GlobalScript_s_received_AI_kickoff
	| gml_Script_s_received_AI_kickoff
	| gml_GlobalScript_s_received_AI_new
	| gml_Script_s_received_AI_new
	| gml_GlobalScript_s_record_frame
	| gml_Script_s_record_frame
	| gml_GlobalScript_s_recruitment_credits
	| gml_Script_recruitment_credits_cap_total
	| gml_Script_s_validate_recruitment_credits_cap
	| gml_Script_can_fit_recruitment_credits
	| gml_Script_recruitment_credits_space
	| gml_Script_recruitment_credits_add
	| gml_Script_recruitment_credits_toggle_roster_size
	| gml_Script_recruitment_credits_button_click_boost
	| gml_Script_btn_response_boost_recruitment_credits
	| gml_GlobalScript_s_refactor_team_strengths
	| gml_Script_s_refactor_team_strengths
	| gml_Script_s_refactor_co_team_strengths
	| gml_GlobalScript_s_refresh_save_slots
	| gml_Script_s_refresh_save_slots
	| gml_GlobalScript_s_rehab_effect
	| gml_Script_s_rehab_effect
	| gml_GlobalScript_s_reinstate_hof_player
	| gml_Script_s_reinstate_hof_player
	| gml_GlobalScript_s_remaining_picks_by_round
	| gml_Script_s_remaining_picks_by_round
	| gml_GlobalScript_s_remaining_picks
	| gml_Script_s_remaining_picks
	| gml_GlobalScript_s_remove_player
	| gml_Script_s_remove_player
	| gml_GlobalScript_s_replay_controls
	| gml_Script_s_replay_controls
	| gml_GlobalScript_s_replay_frame
	| gml_Script_s_replay_frame
	| gml_GlobalScript_s_reset_draft_picks
	| gml_Script_s_reset_draft_picks
	| gml_GlobalScript_s_reset_match_stats
	| gml_Script_s_reset_match_stats
	| gml_GlobalScript_s_reset_player_meetings
	| gml_Script_s_reset_player_meetings
	| gml_GlobalScript_s_reset_staff_hire_list
	| gml_Script_s_reset_staff_hire_list
	| gml_GlobalScript_s_reset_wind
	| gml_Script_s_reset_wind
	| gml_GlobalScript_s_rest_all_players
	| gml_Script_s_rest_all_players
	| gml_GlobalScript_s_restore_uniforms_all
	| gml_Script_s_restore_uniforms_all
	| gml_GlobalScript_s_rgb_to_bgr
	| gml_Script_s_rgb_to_bgr
	| gml_GlobalScript_s_roman_numerals
	| gml_Script_s_roman_numerals
	| gml_GlobalScript_s_round_player_attributes
	| gml_Script_s_round_player_attributes
	| gml_GlobalScript_s_round_to_decimal
	| gml_Script_s_round_to_decimal
	| gml_GlobalScript_s_save_backup
	| gml_Script_s_save_backup
	| gml_GlobalScript_s_save_options
	| gml_Script_s_save_options
	| gml_GlobalScript_s_save_uniform_file2
	| gml_Script_s_save_uniform_file2
	| gml_GlobalScript_s_savegame
	| gml_Script_s_savegame
	| gml_GlobalScript_s_set_anim
	| gml_Script_s_set_anim
	| gml_GlobalScript_s_set_ball_down
	| gml_Script_s_set_ball_down
	| gml_GlobalScript_s_set_position_defense_fg
	| gml_Script_s_set_position_defense_fg
	| gml_GlobalScript_s_set_position_defense
	| gml_Script_s_set_position_defense
	| gml_GlobalScript_s_set_position_kickoff
	| gml_Script_s_set_position_return_ko
	| gml_Script_s_set_position_take_ko
	| gml_GlobalScript_s_set_position_offense_fg
	| gml_Script_s_set_position_offense_fg
	| gml_GlobalScript_s_set_position_offense
	| gml_Script_s_set_position_offense
	| gml_GlobalScript_s_set_rewarded_route
	| gml_Script_s_set_rewarded_route
	| gml_GlobalScript_s_set_skills_and_skin
	| gml_Script_s_set_skills_and_skin
	| gml_Script_ssss_pick_defense_player_pmap
	| gml_Script_ssss_pick_offense_player_pmap
	| gml_Script_s_set_skills_and_skin_new
	| gml_Script_s_set_skills_and_skin_old
	| gml_GlobalScript_s_set_team_morale
	| gml_Script_s_set_team_morale
	| gml_GlobalScript_s_set_up_button_kickoff
	| gml_Script_s_set_up_button_kickoff
	| gml_Script_btn_kick_off
	| gml_Script_s_btn_kickoff_recenter
	| gml_GlobalScript_s_set_up_edit_screen
	| gml_Script_s_set_up_edit_screen
	| gml_GlobalScript_s_set_up_fieldgoal
	| gml_Script_s_set_up_fieldgoal
	| gml_GlobalScript_s_set_up_globals
	| gml_Script_s_set_up_globals
	| gml_Script_s_set_up_temp_variables
	| gml_GlobalScript_s_set_up_hof_players_screen
	| gml_Script_s_set_up_hof_players_screen
	| gml_GlobalScript_s_set_up_kickoff
	| gml_Script_s_set_up_kickoff
	| gml_GlobalScript_s_set_up_play
	| gml_Script_s_set_up_play
	| gml_Script_s_btn_audible_reposition
	| gml_Script_s_btn_fieldgoal_reposition
	| gml_GlobalScript_s_set_up_practice
	| gml_Script_s_set_up_practice
	| gml_GlobalScript_s_set_up_purchase_ids
	| gml_Script_s_set_up_purchase_ids
	| gml_GlobalScript_s_set_up_qb_pmap
	| gml_Script_s_set_up_qb_pmap
	| gml_GlobalScript_s_set_up_uniform_profile
	| gml_Script_s_set_up_uniform_profile
	| gml_GlobalScript_s_set_up_uniforms_training
	| gml_Script_s_set_up_uniforms_training
	| gml_GlobalScript_s_set_up_uniforms
	| gml_Script_s_set_up_uniforms
	| gml_GlobalScript_s_set_up_xp_headers
	| gml_Script_s_set_up_xp_headers
	| gml_GlobalScript_s_shader_get_uniforms
	| gml_Script_s_shader_get_uniforms
	| gml_GlobalScript_s_shader_set_uniforms
	| gml_Script_s_shader_set_uniforms
	| gml_Script_s_blackwhite_colour_hack
	| gml_GlobalScript_s_show_backups
	| gml_Script_s_show_backups
	| gml_Script_s_restore_backup1
	| gml_Script_s_restore_backup2
	| gml_Script_s_restore_backup3
	| gml_Script_s_restore_backup4
	| gml_Script_s_restore_backup5
	| gml_GlobalScript_s_sim_stat_increment
	| gml_Script_s_sim_stat_increment
	| gml_Script_s_sim_stat_update
	| gml_Script_s_sim_stat_touchdown
	| gml_Script_s_sim_stat_pass
	| gml_Script_s_sim_stat_run
	| gml_Script_s_sim_stat_fumble
	| gml_Script_s_sim_stat_interception
	| gml_Script_s_sim_stat_sack
	| gml_GlobalScript_s_simming_action
	| gml_Script_s_simming_action
	| gml_GlobalScript_s_skip_to_week
	| gml_Script_s_skip_to_week
	| gml_GlobalScript_s_sort_hirelist
	| gml_Script_s_sort_hirelist
	| gml_GlobalScript_s_sort_list_by_column
	| gml_Script_s_sort_maplist_by_numeric_field
	| gml_GlobalScript_s_sort_players
	| gml_Script_s_sort_players
	| gml_GlobalScript_s_sort_record_list
	| gml_Script_s_sort_record_list
	| gml_GlobalScript_s_sort_retrobowl_history_list
	| gml_Script_s_sort_retrobowl_history_list
	| gml_GlobalScript_s_sort_retrobowl_list
	| gml_Script_s_sort_retrobowl_list
	| gml_GlobalScript_s_sort_teams
	| gml_Script_s_sort_teams
	| gml_GlobalScript_s_sound_audience_catch
	| gml_Script_s_sound_audience_catch
	| gml_GlobalScript_s_sound_audience_dis
	| gml_Script_s_sound_audience_dis
	| gml_GlobalScript_s_sound_audience_fg
	| gml_Script_s_sound_audience_fg
	| gml_GlobalScript_s_sound_audience_idle
	| gml_Script_s_sound_audience_idle
	| gml_GlobalScript_s_sound_audience_inc
	| gml_Script_s_sound_audience_inc
	| gml_GlobalScript_s_sound_audience_tck
	| gml_Script_s_sound_audience_tck
	| gml_GlobalScript_s_sound_bounce
	| gml_Script_s_sound_bounce
	| gml_GlobalScript_s_sound_dive
	| gml_Script_s_sound_dive
	| gml_GlobalScript_s_sound_kick
	| gml_Script_s_sound_kick
	| gml_GlobalScript_s_sound_loop
	| gml_Script_s_sound_loop
	| gml_GlobalScript_s_sound_oof
	| gml_Script_s_sound_oof
	| gml_GlobalScript_s_sound_post
	| gml_Script_s_sound_post
	| gml_GlobalScript_s_sound_tackle
	| gml_Script_s_sound_tackle
	| gml_GlobalScript_s_sound_throw
	| gml_Script_s_sound_throw
	| gml_GlobalScript_s_sound
	| gml_Script_s_sound
	| gml_Script_s_sound_brass_setup
	| gml_Script_s_sound_brass_loop
	| gml_Script_s_stop_brass_loop
	| gml_Script_s_stop_brass_loop_finalize
	| gml_GlobalScript_s_spike_ball
	| gml_Script_s_spike_ball
	| gml_GlobalScript_s_split_string
	| gml_Script_s_split_string
	| gml_GlobalScript_s_sprite_holding_ball
	| gml_Script_s_sprite_holding_ball
	| gml_GlobalScript_s_start_new_season
	| gml_Script_s_start_new_season
	| gml_Script_s_renew_contracts_qb_mode
	| gml_Script_s_update_coach_rating_college
	| gml_GlobalScript_s_start_replay
	| gml_Script_s_start_replay
	| gml_GlobalScript_s_startup
	| gml_Script_s_startup
	| gml_Script_s_startup_welcome_msg
	| gml_Script_s_startup_set_master_variables
	| gml_Script_s_startup_handle_saved_game
	| gml_Script_s_startup_college_mode
	| gml_Script_s_startup_browser
	| gml_GlobalScript_s_stop_tackling
	| gml_Script_s_stop_tackling
	| gml_GlobalScript_s_store_cant_afford
	| gml_Script_s_store_cant_afford
	| gml_GlobalScript_s_str_helpers
	| gml_Script_s_str_int_to_ordinal
	| gml_GlobalScript_s_str
	| gml_Script_s_str
	| gml_Script_s_str_u
	| gml_Script_s_str_real
	| gml_Script_s_strf
	| gml_Script_s_strfl
	| gml_Script_s_co_str
	| gml_Script_s_co_str_real
	| gml_GlobalScript_s_string_rand
	| gml_Script_s_string_rand
	| gml_GlobalScript_s_strP
	| gml_Script_s_strP
	| gml_GlobalScript_s_subtract_time
	| gml_Script_s_subtract_time
	| gml_GlobalScript_s_switch_drivedirection
	| gml_Script_s_switch_drivedirection
	| gml_GlobalScript_s_tackle_failure
	| gml_Script_s_tackle_failure
	| gml_GlobalScript_s_tag_backups
	| gml_Script_s_tag_backups
	| gml_Script_s_tag_backups_internal
	| gml_GlobalScript_s_team_helpers
	| gml_Script_s_teams_file
	| gml_GlobalScript_s_team_interested
	| gml_Script_s_team_interested
	| gml_Script_s_qb_mode_team_interested
	| gml_GlobalScript_s_throw_ball
	| gml_Script_s_throw_ball
	| gml_GlobalScript_s_tip_continue
	| gml_Script_s_tip_continue
	| gml_GlobalScript_s_toxic_effect_on_morale
	| gml_Script_s_toxic_effect_on_morale
	| gml_GlobalScript_s_training_regime_effect_on_morale
	| gml_Script_s_training_regime_effect_on_morale
	| gml_GlobalScript_s_unfreeze_purchase_buttons
	| gml_Script_s_unfreeze_purchase_buttons
	| gml_GlobalScript_s_uniform_helpers
	| gml_Script_s_uniforms_default_file
	| gml_Script_s_extract_uniform_cols_to_record
	| gml_Script_s_uniform_cols_to_record
	| gml_Script_s_uniform_cols_from_record
	| gml_GlobalScript_s_update_ball_fieldgoal
	| gml_Script_s_update_ball_fieldgoal
	| gml_GlobalScript_s_update_ball_movement
	| gml_Script_s_update_ball_movement
	| gml_GlobalScript_s_update_ball_offset
	| gml_Script_s_update_ball_offset
	| gml_GlobalScript_s_update_ball
	| gml_Script_s_update_ball
	| gml_GlobalScript_s_update_camera
	| gml_Script_s_update_camera
	| gml_GlobalScript_s_update_commentary
	| gml_Script_s_update_commentary
	| gml_Script_s_go_for_it_or_not
	| gml_Script_s_check_toggle_sim
	| gml_Script_s_toggle_sim_debug_log
	| gml_Script_btn_toggle_sim
	| gml_Script_btn_toggle_sim_confirm
	| gml_Script_btn_toggle_sim_dismiss
	| gml_Script_s_toggle_sim_active
	| gml_Script_anon_42892_sim_state_s_update_commentary
	| gml_Script_anon_43102_sim_state_s_update_commentary
	| gml_Script_anon_43225_sim_state_s_update_commentary
	| gml_Script_anon_43731_sim_state_s_update_commentary
	| gml_Script_anon_44127_sim_state_s_update_commentary
	| gml_Script_sim_state
	| gml_Script_s_skip_time_active
	| gml_Script_s_check_skip_time_button
	| gml_Script_btn_skip_time
	| gml_Script_s_no_ties_allowed
	| gml_Script_roster_short_desc
	| gml_Script_roster_short_desc_tag
	| gml_Script_slog_roster
	| gml_Script_slog_master_roster
	| gml_GlobalScript_s_update_contracts
	| gml_Script_s_update_contracts
	| gml_Script_s_check_staff_exist
	| gml_GlobalScript_s_update_draft_page
	| gml_Script_s_update_draft_page
	| gml_GlobalScript_s_update_freeagents_page
	| gml_Script_s_update_freeagents_page
	| gml_GlobalScript_s_update_game_clock
	| gml_Script_s_update_game_clock
	| gml_GlobalScript_s_update_game_timer
	| gml_Script_s_update_game_timer
	| gml_GlobalScript_s_update_gamepad
	| gml_Script_s_update_gamepad
	| gml_Script_s_gamepad_async
	| gml_Script_s_gamepad_activity
	| gml_Script_s_clear_last_selected_history
	| gml_Script_s_overwrite_last_selected
	| gml_Script____struct___201_s_save_last_selected_s_update_gamepad
	| gml_Script_s_save_last_selected
	| gml_Script_s_get_last_selected
	| gml_Script____struct___202_s_reset_gamepad_s_update_gamepad
	| gml_Script_s_reset_gamepad
	| gml_Script_s_update_gamepad_data
	| gml_Script_s_update_ui_selected
	| gml_Script____struct___203_s_multiplayer_init_s_update_gamepad
	| gml_Script_s_multiplayer_init
	| gml_Script_s_is_multicon_wanted
	| gml_Script_s_toggle_multicon_wanted
	| gml_Script_s_multicon_reset
	| gml_Script_s_multicon_init
	| gml_Script_s_refresh_gamepads
	| gml_Script_s_gamepad_lv_dir
	| gml_Script_s_set_multicon_active
	| gml_Script_s_set_multicon_turn
	| gml_Script_s_multicon_save_turn
	| gml_Script_s_multicon_restore_turn
	| gml_Script_s_is_turn
	| gml_Script_s_is_multicon
	| gml_Script_s_is_pad_used_in_multicon
	| gml_Script_s_get_multicon_current_pad
	| gml_Script_s_set_multicon_touch
	| gml_Script_s_is_touch_allowed
	| gml_Script_s_is_ui_selected
	| gml_Script_s_ui_selected_color
	| gml_GlobalScript_s_update_history_finish
	| gml_GlobalScript_s_update_history_playoffs
	| gml_GlobalScript_s_update_history
	| gml_GlobalScript_s_update_human_playoff_fixtures
	| gml_Script_s_update_human_playoff_fixtures
	| gml_Script_s_check_rearranged_human_playoff
	| gml_Script_s_update_human_fixtures
	| gml_Script_s_update_fixturelist_fix_extra_data
	| gml_GlobalScript_s_update_job_offer_buttons
	| gml_Script_s_update_job_offer_buttons
	| gml_GlobalScript_s_update_manual_gestures
	| gml_Script_s_update_manual_gestures
	| gml_GlobalScript_s_update_maplist_from_file
	| gml_Script_s_update_maplist_from_file
	| gml_GlobalScript_s_update_music
	| gml_Script_s_update_music
	| gml_Script_s_update_music_safe
	| gml_Script_s_is_audio_safe
	| gml_GlobalScript_s_update_my_shadow
	| gml_Script_s_update_my_shadow
	| gml_GlobalScript_s_update_options
	| gml_Script_s_update_options
	| gml_Script_s_get_op_invert_throw
	| gml_Script_s_get_op_autorun
	| gml_Script_btn_click_CollegeToggleColor
	| gml_Script_s_get_gm_version
	| gml_Script_s_update_options_if_present
	| gml_GlobalScript_s_update_poki_scaling
	| gml_Script_s_update_poki_scaling
	| gml_GlobalScript_s_update_rest_all_button
	| gml_Script_s_update_rest_all_button
	| gml_GlobalScript_s_update_shopping_buttons
	| gml_Script_s_update_shopping_buttons
	| gml_Script_btn_click_shopping_next
	| gml_Script_btn_click_shopping_prev
	| gml_Script_btn_shopping_purchase
	| gml_Script_s_confirm_purchase
	| gml_Script_s_count_shop_items_by_type
	| gml_Script_s_degrade_shop_items
	| gml_GlobalScript_s_update_stats
	| gml_Script_s_update_stats
	| gml_GlobalScript_s_update_team_buttons
	| gml_Script_s_update_team_buttons
	| gml_GlobalScript_s_update_team_edit_buttons
	| gml_Script_s_update_team_edit_buttons
	| gml_GlobalScript_s_update_uniform_name
	| gml_Script_s_update_uniform_name
	| gml_GlobalScript_s_update_xdead
	| gml_Script_s_update_xdead
	| gml_GlobalScript_s_update_yard_gain
	| gml_Script_s_update_yard_gain
	| gml_GlobalScript_s_y_on_myside
	| gml_Script_s_y_on_myside
	| gml_GlobalScript_scale_canvas
	| gml_Script_scale_canvas
	| gml_GlobalScript_season_tally_scripts
	| gml_Script____struct___204_s_obj_season_tally_create_season_tally_scripts
	| gml_Script____struct___205_s_obj_season_tally_create_season_tally_scripts
	| gml_Script_s_obj_season_tally_create
	| gml_Script_s_maps_array_sort_week
	| gml_Script_s_get_human_opponent_sla_prefix
	| gml_Script_s_obj_season_tally_step
	| gml_Script_s_obj_season_tally_draw_gui
	| gml_Script_s_obj_season_tally_draw_gui_begin
	| gml_Script_s_draw_season_tally_header
	| gml_GlobalScript_slog
	| gml_Script_slog
	| gml_Script_slog2
	| gml_Script_slogf
	| gml_Script_slog_map
	| gml_Script_slog_struct
	| gml_GlobalScript_title_scripts
	| gml_Script_s_title_goto
	| gml_Script_s_title_create
	| gml_Script_s_title_exit
	| gml_Script_s_title_check_any_button
	| gml_Script_s_title_create_image
	| gml_Script_s_title_step_image
	| gml_Script_s_title_draw_gui_image
	| gml_Script_f_almost_same
	| gml_Script_s_title_create_video
	| gml_Script_s_title_async_social_video
	| gml_Script_s_title_do_video_end
	| gml_Script_s_title_step_video
	| gml_Script_s_title_draw_gui_video
	| gml_Script_s_title_create_fadeinout_splash
	| gml_Script_s_title_step_fadeinout_splash
	| gml_Script_s_title_draw_fadeinout_splash
	| gml_Script_poki_init
	| gml_Script_poki_commercial_break
	| gml_Script_poki_rewarded_break
	| gml_Script_poki_script_closure
	| gml_Script_gmcallback_poki_closure
	| gml_Script_poki_get_team
	| gml_Script_poki_set_team
	| gml_Object_obj_ad_retrogoal_Create_0
	| gml_Object_obj_ad_retrogoal_Step_0
	| gml_Object_obj_appstore_btn_Create_0
	| gml_Object_obj_appstore_btn_Step_0
	| gml_Object_obj_appstore_btn_PreCreate_0
	| gml_Object_obj_attribute_Draw_0
	| gml_Object_obj_attribute_Draw_64
	| gml_Object_obj_attribute_PreCreate_0
	| gml_Object_obj_ball_Create_0
	| gml_Object_obj_ball_Alarm_0
	| gml_Object_obj_ball_Alarm_1
	| gml_Object_obj_ball_Step_0
	| gml_Object_obj_ball_Step_2
	| gml_Object_obj_ball_Collision_obj_dummy
	| gml_Object_obj_ball_Draw_0
	| gml_Object_obj_ball_Draw_64
	| gml_Object_obj_blank_Create_0
	| gml_Object_obj_blank_Destroy_0
	| gml_Object_obj_blank_Step_0
	| gml_Object_obj_blank_Other_70
	| gml_Object_obj_blank_Draw_0
	| gml_Object_obj_blank_Draw_64
	| gml_Object_obj_blank_Gesture_64
	| gml_Object_obj_blank_Gesture_69
	| gml_Object_obj_blank_Gesture_0
	| gml_Object_obj_blank_PreCreate_0
	| gml_Object_obj_bossprofile_Create_0
	| gml_Object_obj_bossprofile_Draw_64
	| gml_Object_obj_bossprofile_KeyPress_90
	| gml_Object_obj_boundary_Step_0
	| gml_Object_obj_boundary_Draw_0
	| gml_Object_obj_boundary_PreCreate_0
	| gml_Object_obj_box_coachcredit_Create_0
	| gml_Object_obj_box_coachcredit_Step_0
	| gml_Object_obj_box_coachcredit_Draw_0
	| gml_Object_obj_box_coachcredit_Draw_64
	| gml_Object_obj_box_coachcredit_PreCreate_0
	| gml_Object_obj_box_defense_Create_0
	| gml_Object_obj_box_defense_Draw_0
	| gml_Object_obj_box_defense_Draw_64
	| gml_Object_obj_box_defense_PreCreate_0
	| gml_Object_obj_box_morale_Create_0
	| gml_Object_obj_box_morale_Step_0
	| gml_Object_obj_box_morale_Draw_0
	| gml_Object_obj_box_morale_Draw_64
	| gml_Object_obj_box_morale_PreCreate_0
	| gml_Object_obj_box_offense_Create_0
	| gml_Object_obj_box_offense_Step_0
	| gml_Object_obj_box_offense_Draw_0
	| gml_Object_obj_box_offense_Draw_64
	| gml_Object_obj_box_offense_PreCreate_0
	| gml_Object_obj_box_recruitmentcredit_Create_0
	| gml_Object_obj_box_recruitmentcredit_Step_0
	| gml_Object_obj_box_recruitmentcredit_Draw_0
	| gml_Object_obj_box_recruitmentcredit_Draw_64
	| gml_Object_obj_box_recruitmentcredit_PreCreate_0
	| gml_Object_obj_box_relationship_Create_0
	| gml_Object_obj_box_relationship_Step_0
	| gml_Object_obj_box_relationship_Draw_0
	| gml_Object_obj_box_relationship_Draw_64
	| gml_Object_obj_box_relationship_PreCreate_0
	| gml_Object_obj_btn_audible_Create_0
	| gml_Object_obj_btn_audible_Step_0
	| gml_Object_obj_btn_audible_Draw_64
	| gml_Object_obj_btn_audible_Draw_0
	| gml_Object_obj_btn_audible_Draw_75
	| gml_Object_obj_btn_audible_PreCreate_0
	| gml_Object_obj_btn_buy_Alarm_0
	| gml_Object_obj_btn_buy_Step_0
	| gml_Object_obj_btn_buy_PreCreate_0
	| gml_Object_obj_btn_fieldgoal_Create_0
	| gml_Object_obj_btn_fieldgoal_Step_0
	| gml_Object_obj_btn_fieldgoal_Draw_64
	| gml_Object_obj_btn_fieldgoal_Draw_0
	| gml_Object_obj_btn_fieldgoal_Draw_75
	| gml_Object_obj_btn_fieldgoal_PreCreate_0
	| gml_Object_obj_btn_goforit_Create_0
	| gml_Object_obj_btn_goforit_Step_0
	| gml_Object_obj_btn_goforit_Draw_64
	| gml_Object_obj_btn_goforit_Draw_0
	| gml_Object_obj_btn_goforit_Draw_75
	| gml_Object_obj_btn_goforit_PreCreate_0
	| gml_Object_obj_btn_kickoff_Create_0
	| gml_Object_obj_btn_kickoff_Step_0
	| gml_Object_obj_btn_kickoff_Draw_64
	| gml_Object_obj_btn_kickoff_Draw_0
	| gml_Object_obj_btn_kickoff_PreCreate_0
	| gml_Object_obj_btn_pause_Step_0
	| gml_Object_obj_btn_pause_Draw_0
	| gml_Object_obj_btn_pause_Draw_64
	| gml_Object_obj_btn_restore_Create_0
	| gml_Object_obj_btn_restore_Alarm_0
	| gml_Object_obj_btn_restore_Step_0
	| gml_Object_obj_btn_restore_PreCreate_0
	| gml_Object_obj_btn_skiptime_Create_0
	| gml_Object_obj_btn_skiptime_Step_0
	| gml_Object_obj_btn_skiptime_Draw_64
	| gml_Object_obj_btn_skiptime_Draw_0
	| gml_Object_obj_btn_skiptime_Draw_75
	| gml_Object_obj_btn_skiptime_PreCreate_0
	| gml_Object_obj_btn_store_Create_0
	| gml_Object_obj_btn_store_Step_0
	| gml_Object_obj_btn_store_PreCreate_0
	| gml_Object_obj_btn_timeout_Create_0
	| gml_Object_obj_btn_timeout_Step_0
	| gml_Object_obj_btn_timeout_Draw_64
	| gml_Object_obj_btn_timeout_Draw_0
	| gml_Object_obj_btn_timeout_PreCreate_0
	| gml_Object_obj_btn_togglesim_Create_0
	| gml_Object_obj_btn_togglesim_Step_0
	| gml_Object_obj_btn_togglesim_Draw_64
	| gml_Object_obj_btn_togglesim_Draw_0
	| gml_Object_obj_btn_togglesim_Draw_75
	| gml_Object_obj_btn_togglesim_PreCreate_0
	| gml_Object_obj_button_9s_Create_0
	| gml_Object_obj_button_9s_Step_0
	| gml_Object_obj_button_9s_Draw_0
	| gml_Object_obj_button_9s_Draw_64
	| gml_Object_obj_button_9s_PreCreate_0
	| gml_Object_obj_button_color_Create_0
	| gml_Object_obj_button_color_Step_0
	| gml_Object_obj_button_color_Draw_0
	| gml_Object_obj_button_color_Draw_64
	| gml_Object_obj_button_color_PreCreate_0
	| gml_Object_obj_button_med_slim_Create_0
	| gml_Object_obj_button_med_slim_Step_0
	| gml_Object_obj_button_med_slim_Draw_0
	| gml_Object_obj_button_med_slim_Draw_64
	| gml_Object_obj_button_med_slim_PreCreate_0
	| gml_Object_obj_button_med_Create_0
	| gml_Object_obj_button_med_Step_0
	| gml_Object_obj_button_med_Draw_0
	| gml_Object_obj_button_med_Draw_64
	| gml_Object_obj_button_med_PreCreate_0
	| gml_Object_obj_button_small_Draw_64
	| gml_Object_obj_button_small_PreCreate_0
	| gml_Object_obj_button_sqr_Draw_64
	| gml_Object_obj_button_sqr_PreCreate_0
	| gml_Object_obj_button_team_Draw_75
	| gml_Object_obj_button_team_PreCreate_0
	| gml_Object_obj_button_thin_Draw_64
	| gml_Object_obj_button_thin_PreCreate_0
	| gml_Object_obj_button_Create_0
	| gml_Object_obj_button_Step_0
	| gml_Object_obj_button_Draw_0
	| gml_Object_obj_button_Draw_64
	| gml_Object_obj_button_PreCreate_0
	| gml_Object_obj_camera_Create_0
	| gml_Object_obj_camera_Alarm_0
	| gml_Object_obj_camera_Step_2
	| gml_Object_obj_camera_Other_4
	| gml_Object_obj_camera_Other_5
	| gml_Object_obj_camera_Draw_64
	| gml_Object_obj_checkbox_Step_0
	| gml_Object_obj_checkbox_Draw_64
	| gml_Object_obj_checkbox_Draw_0
	| gml_Object_obj_checkbox_PreCreate_0
	| gml_Object_obj_checkbox012_Step_0
	| gml_Object_obj_checkbox012_Draw_64
	| gml_Object_obj_checkbox012_Draw_0
	| gml_Object_obj_checkbox012_PreCreate_0
	| gml_Object_obj_choose_face_Create_0
	| gml_Object_obj_choose_team_Create_0
	| gml_Object_obj_choose_team_Other_4
	| gml_Object_obj_choose_team_PreCreate_0
	| gml_Object_obj_colbox_Draw_64
	| gml_Object_obj_colbox_Draw_0
	| gml_Object_obj_colbox_PreCreate_0
	| gml_Object_obj_college_nfl_draft_Create_0
	| gml_Object_obj_college_nfl_draft_Draw_64
	| gml_Object_obj_colpicker_Create_0
	| gml_Object_obj_colpicker_Step_0
	| gml_Object_obj_colpicker_Draw_64
	| gml_Object_obj_conference_Create_0
	| gml_Object_obj_conference_Destroy_0
	| gml_Object_obj_conference_Draw_64
	| gml_Object_obj_conference_Draw_0
	| gml_Object_obj_conference_PreCreate_0
	| gml_Object_obj_controller_Create_0
	| gml_Object_obj_controller_Alarm_0
	| gml_Object_obj_controller_Alarm_1
	| gml_Object_obj_controller_Step_0
	| gml_Object_obj_controller_Step_2
	| gml_Object_obj_controller_Draw_64
	| gml_Object_obj_controller_Draw_72
	| gml_Object_obj_controller_Draw_0
	| gml_Object_obj_controller_KeyPress_13
	| gml_Object_obj_controller_KeyPress_70
	| gml_Object_obj_controller_KeyPress_80
	| gml_Object_obj_controller_KeyPress_32
	| gml_Object_obj_controller_KeyPress_84
	| gml_Object_obj_controller_KeyPress_75
	| gml_Object_obj_controller_Gesture_69
	| gml_Object_obj_controller_Gesture_64
	| gml_Object_obj_controller_Gesture_67
	| gml_Object_obj_controller_Gesture_66
	| gml_Object_obj_controller_Gesture_68
	| gml_Object_obj_controller_Gesture_65
	| gml_Object_obj_credit_Create_0
	| gml_Object_obj_credit_Destroy_0
	| gml_Object_obj_credit_Step_0
	| gml_Object_obj_credit_Draw_0
	| gml_Object_obj_credit_Draw_75
	| gml_Object_obj_credit_PreCreate_0
	| gml_Object_obj_details_Create_0
	| gml_Object_obj_details_PreCreate_0
	| gml_Object_obj_difficulty_watermark_Create_0
	| gml_Object_obj_difficulty_watermark_PreCreate_0
	| gml_Object_obj_division_Step_0
	| gml_Object_obj_division_Draw_0
	| gml_Object_obj_division_Draw_64
	| gml_Object_obj_division_PreCreate_0
	| gml_Object_obj_draft_Create_0
	| gml_Object_obj_draft_PreCreate_0
	| gml_Object_obj_dummy_Step_0
	| gml_Object_obj_dummy_Collision_obj_player
	| gml_Object_obj_dummy_Draw_0
	| gml_Object_obj_dummy_Draw_72
	| gml_Object_obj_dummy_PreCreate_0
	| gml_Object_obj_edit_team_Create_0
	| gml_Object_obj_edit_team_Step_0
	| gml_Object_obj_edit_team_PreCreate_0
	| gml_Object_obj_exhibition_postmatch_Create_0
	| gml_Object_obj_exhibition_postmatch_PreCreate_0
	| gml_Object_obj_facility_rehab_Create_0
	| gml_Object_obj_facility_stadium_Create_0
	| gml_Object_obj_facility_training_Create_0
	| gml_Object_obj_facility_Draw_0
	| gml_Object_obj_facility_Draw_64
	| gml_Object_obj_facility_PreCreate_0
	| gml_Object_obj_fieldtxt_Step_0
	| gml_Object_obj_fieldtxt_Draw_0
	| gml_Object_obj_fieldtxt_PreCreate_0
	| gml_Object_obj_freeagents_Create_0
	| gml_Object_obj_freeagents_PreCreate_0
	| gml_Object_obj_freeagents2_Create_0
	| gml_Object_obj_frontoffice_Create_0
	| gml_Script____struct___206_gml_Object_obj_frontoffice_Create_0
	| gml_Object_obj_goal_post_Create_0
	| gml_Object_obj_goal_post_Step_0
	| gml_Object_obj_goal_stand_Create_0
	| gml_Object_obj_goal_stand_Step_0
	| gml_Object_obj_halloffame_pr_rm_Create_0
	| gml_Object_obj_halloffame_rm_Create_0
	| gml_Object_obj_headshot_Create_0
	| gml_Object_obj_headshot_Step_0
	| gml_Object_obj_headshot_Draw_0
	| gml_Object_obj_headshot_Draw_64
	| gml_Object_obj_headshot_PreCreate_0
	| gml_Object_obj_helmet_Create_0
	| gml_Object_obj_helmet_Draw_0
	| gml_Object_obj_helmet_Draw_64
	| gml_Object_obj_helmet_PreCreate_0
	| gml_Object_obj_hof_achievements_Create_0
	| gml_Object_obj_hof_achievements_Step_0
	| gml_Object_obj_hof_achievements_Draw_64
	| gml_Object_obj_hof_achievements_Gesture_69
	| gml_Object_obj_hof_achievements_PreCreate_0
	| gml_Object_obj_hof_btn_Create_0
	| gml_Object_obj_hof_btn_Draw_64
	| gml_Object_obj_hof_btn_PreCreate_0
	| gml_Object_obj_hof_history_Create_0
	| gml_Object_obj_hof_history_Step_0
	| gml_Object_obj_hof_history_Draw_64
	| gml_Script_s_draw_history_line_gml_Object_obj_hof_history_Draw_64
	| gml_Script_s_draw_history_lines_college_gml_Object_obj_hof_history_Draw_64
	| gml_Object_obj_hof_history_Gesture_69
	| gml_Object_obj_hof_history_PreCreate_0
	| gml_Object_obj_hof_players_Create_0
	| gml_Object_obj_hof_records_coach_Create_0
	| gml_Script_s_records_conf_only_games_gml_Object_obj_hof_records_coach_Create_0
	| gml_Script_s_records_conf_only_pct_gml_Object_obj_hof_records_coach_Create_0
	| gml_Object_obj_hof_records_coach_Step_0
	| gml_Object_obj_hof_records_coach_Draw_64
	| gml_Object_obj_hof_records_coach_Gesture_69
	| gml_Object_obj_hof_records_coach_PreCreate_0
	| gml_Object_obj_hof_records_player_Create_0
	| gml_Object_obj_hof_records_player_Step_0
	| gml_Object_obj_hof_records_player_Draw_64
	| gml_Object_obj_hof_records_player_Gesture_69
	| gml_Object_obj_hof_records_player_PreCreate_0
	| gml_Object_obj_hof_retrobowl_history_Create_0
	| gml_Object_obj_hof_retrobowl_history_Destroy_0
	| gml_Object_obj_hof_retrobowl_history_Step_0
	| gml_Object_obj_hof_retrobowl_history_Draw_64
	| gml_Object_obj_hof_retrobowl_history_Gesture_69
	| gml_Object_obj_hof_retrobowl_history_PreCreate_0
	| gml_Object_obj_hof_retrobowl_wins_Create_0
	| gml_Script_s_hof_retrobowl_wins_franchise_create_gml_Object_obj_hof_retrobowl_wins_Create_0
	| gml_Script_s_academic_gpa_limits_create_gml_Object_obj_hof_retrobowl_wins_Create_0
	| gml_Object_obj_hof_retrobowl_wins_Destroy_0
	| gml_Object_obj_hof_retrobowl_wins_Draw_64
	| gml_Script_s_hof_retrobowl_wins_franchise_draw_gml_Object_obj_hof_retrobowl_wins_Draw_64
	| gml_Script_s_academic_gpa_limits_draw_gml_Object_obj_hof_retrobowl_wins_Draw_64
	| gml_Object_obj_home_Create_0
	| gml_Script____struct___207_gml_Object_obj_home_Create_0
	| gml_Object_obj_home_Alarm_0
	| gml_Object_obj_home_Step_0
	| gml_Object_obj_home_Draw_0
	| gml_Object_obj_info_Step_0
	| gml_Object_obj_info_Draw_64
	| gml_Object_obj_info_Draw_0
	| gml_Object_obj_info_PreCreate_0
	| gml_Object_obj_infobox_Draw_0
	| gml_Object_obj_infobox_Draw_64
	| gml_Object_obj_infobox_PreCreate_0
	| gml_Object_obj_input_box_Step_0
	| gml_Object_obj_input_box_Draw_64
	| gml_Object_obj_input_box_Draw_0
	| gml_Object_obj_input_box_PreCreate_0
	| gml_Object_obj_intercept_point_Create_0
	| gml_Object_obj_kb_key_Create_0
	| gml_Object_obj_kb_key_Step_0
	| gml_Object_obj_kb_key_Draw_64
	| gml_Object_obj_kb_key_Gesture_0
	| gml_Object_obj_kongregate_Create_0
	| gml_Object_obj_league_Create_0
	| gml_Object_obj_league_PreCreate_0
	| gml_Object_obj_life_Create_0
	| gml_Object_obj_link_btn_Create_0
	| gml_Object_obj_link_btn_Step_0
	| gml_Object_obj_link_btn_PreCreate_0
	| gml_Object_obj_master_Create_0
	| gml_Object_obj_master_Alarm_0
	| gml_Object_obj_master_Alarm_1
	| gml_Object_obj_master_Alarm_2
	| gml_Object_obj_master_Step_0
	| gml_Object_obj_master_Other_75
	| gml_Object_obj_master_Other_4
	| gml_Object_obj_master_KeyPress_67
	| gml_Object_obj_master_KeyPress_83
	| gml_Object_obj_master_KeyPress_48
	| gml_Object_obj_master_KeyPress_66
	| gml_Object_obj_master_KeyPress_78
	| gml_Object_obj_master_KeyPress_68
	| gml_Object_obj_master_KeyPress_82
	| gml_Object_obj_match_msg_Create_0
	| gml_Object_obj_match_msg_Alarm_0
	| gml_Object_obj_match_msg_Draw_64
	| gml_Object_obj_match_msg_PreCreate_0
	| gml_Object_obj_matchline_Create_0
	| gml_Object_obj_matchline_Step_0
	| gml_Object_obj_matchline_Draw_0
	| gml_Object_obj_matchline_Draw_64
	| gml_Object_obj_matchline_Gesture_69
	| gml_Object_obj_matchline_PreCreate_0
	| gml_Object_obj_matchob_Create_0
	| gml_Object_obj_matchob_CleanUp_0
	| gml_Object_obj_meeting_player_Create_0
	| gml_Object_obj_meeting_player_PreCreate_0
	| gml_Object_obj_messagebox_Draw_0
	| gml_Object_obj_messagebox_Draw_64
	| gml_Object_obj_messagebox_PreCreate_0
	| gml_Object_obj_metaball_Create_0
	| gml_Object_obj_metaball_Step_0
	| gml_Object_obj_metaball_Draw_0
	| gml_Object_obj_metaball_Draw_73
	| gml_Object_obj_meter_coach_Create_0
	| gml_Object_obj_meter_coach_Step_0
	| gml_Object_obj_meter_condition_Create_0
	| gml_Object_obj_meter_condition_Step_0
	| gml_Object_obj_meter_conditionQB_Create_0
	| gml_Object_obj_meter_conditionQB_Step_0
	| gml_Object_obj_meter_fans_Create_0
	| gml_Object_obj_meter_fans_Step_0
	| gml_Object_obj_meter_fans_PreCreate_0
	| gml_Object_obj_meter_happiness_Create_0
	| gml_Object_obj_meter_happiness_Step_0
	| gml_Object_obj_meter_lifestyle_Create_0
	| gml_Object_obj_meter_lifestyle_Step_0
	| gml_Object_obj_meter_starrating_Create_0
	| gml_Object_obj_meter_starrating_Step_0
	| gml_Object_obj_meter_team_Create_0
	| gml_Object_obj_meter_team_Step_0
	| gml_Object_obj_meter_Draw_64
	| gml_Object_obj_meter_Draw_0
	| gml_Object_obj_meter_PreCreate_0
	| gml_Object_obj_msgbg_Create_0
	| gml_Object_obj_msgbg_Alarm_0
	| gml_Object_obj_msgbg_Draw_64
	| gml_Object_obj_msgbg_Draw_0
	| gml_Object_obj_msgbg_KeyPress_27
	| gml_Object_obj_msgbg_PreCreate_0
	| gml_Object_obj_negotiate_num_Create_0
	| gml_Object_obj_negotiate_num_Step_0
	| gml_Object_obj_negotiate_num_Draw_64
	| gml_Object_obj_negotiate_num_Draw_0
	| gml_Object_obj_negotiate_num_PreCreate_0
	| gml_Object_obj_news_dyn_Create_0
	| gml_Object_obj_news_dyn_Draw_64
	| gml_Object_obj_news_dyn_Draw_0
	| gml_Object_obj_news_dyn_KeyPress_27
	| gml_Object_obj_news_dyn_CleanUp_0
	| gml_Object_obj_news_dyn_PreCreate_0
	| gml_Object_obj_notification_Create_0
	| gml_Object_obj_notification_Alarm_0
	| gml_Object_obj_notification_Step_0
	| gml_Object_obj_notification_Draw_64
	| gml_Object_obj_notification_PreCreate_0
	| gml_Object_obj_nx_Create_0
	| gml_Object_obj_options_controls_Create_0
	| gml_Object_obj_options_exh_Create_0
	| gml_Object_obj_options_Create_0
	| gml_Object_obj_options_Alarm_0
	| gml_Object_obj_options_Step_0
	| gml_Object_obj_options2_Create_0
	| gml_Object_obj_picks_Create_0
	| gml_Object_obj_picks_Draw_64
	| gml_Object_obj_player_image_Create_0
	| gml_Object_obj_player_image_Draw_0
	| gml_Object_obj_player_image_Draw_64
	| gml_Object_obj_player_image_PreCreate_0
	| gml_Object_obj_player_profile_Create_0
	| gml_Object_obj_player_profile_Step_0
	| gml_Object_obj_player_profile_Draw_0
	| gml_Object_obj_player_profile_Draw_64
	| gml_Object_obj_player_profile_PreCreate_0
	| gml_Object_obj_player_Create_0
	| gml_Object_obj_player_Destroy_0
	| gml_Object_obj_player_Step_0
	| gml_Object_obj_player_Step_2
	| gml_Object_obj_player_Other_7
	| gml_Object_obj_player_Draw_0
	| gml_Object_obj_player_Draw_72
	| gml_Object_obj_playerDF_Create_0
	| gml_Object_obj_playerOF_Create_0
	| gml_Object_obj_playerprofile_rm_Create_0
	| gml_Object_obj_playerprofile_rm_Step_0
	| gml_Object_obj_playerprofile_rm_Draw_64
	| gml_Object_obj_playerprofile_rm_KeyPress_88
	| gml_Object_obj_playerprofile_rm_KeyPress_73
	| gml_Object_obj_playerprofile_rm_KeyPress_77
	| gml_Object_obj_playerprofile_rm_KeyPress_68
	| gml_Object_obj_playerprofile_rm_KeyPress_79
	| gml_Object_obj_playerprofile_rm_KeyPress_82
	| gml_Object_obj_playerprofile_rm_KeyPress_90
	| gml_Object_obj_playoffs_Create_0
	| gml_Object_obj_playoffs_PreCreate_0
	| gml_Object_obj_playoffs2_Create_0
	| gml_Object_obj_playoffs2_PreCreate_0
	| gml_Object_obj_postmatch_Create_0
	| gml_Object_obj_postmatch_Step_0
	| gml_Object_obj_postmatch_PreCreate_0
	| gml_Object_obj_prematch_Create_0
	| gml_Object_obj_prematch_Draw_64
	| gml_Object_obj_raindrop_Create_0
	| gml_Object_obj_raindrop_Step_0
	| gml_Object_obj_raindrop_Draw_0
	| gml_Object_obj_reddit_btn_Create_0
	| gml_Object_obj_reddit_btn_Step_0
	| gml_Object_obj_reddit_btn_PreCreate_0
	| gml_Object_obj_rm_exhibition_Create_0
	| gml_Object_obj_rm_exhibition_Draw_64
	| gml_Object_obj_rm_qb_contract_Create_0
	| gml_Object_obj_rm_qb_negotiate_Create_0
	| gml_Object_obj_rm_qb_postmatch_Create_0
	| gml_Object_obj_rm_qb_postmatch_Step_0
	| gml_Object_obj_rm_qb_shopping_Create_0
	| gml_Object_obj_rm_qb_shopping_PreCreate_0
	| gml_Object_obj_roomtitle_special_Step_0
	| gml_Object_obj_roomtitle_special_PreCreate_0
	| gml_Object_obj_roomtitle_Draw_0
	| gml_Object_obj_roomtitle_Draw_64
	| gml_Object_obj_roomtitle_PreCreate_0
	| gml_Object_obj_roster_Create_0
	| gml_Object_obj_roster_PreCreate_0
	| gml_Object_obj_salarycap_Create_0
	| gml_Object_obj_salarycap_Draw_0
	| gml_Object_obj_salarycap_Draw_64
	| gml_Object_obj_salarycap_PreCreate_0
	| gml_Object_obj_scanlines_Create_0
	| gml_Object_obj_scanlines_Draw_75
	| gml_Object_obj_scanlines_PreCreate_0
	| gml_Object_obj_schedulebox_Create_0
	| gml_Object_obj_schedulebox_Draw_0
	| gml_Object_obj_schedulebox_Draw_64
	| gml_Object_obj_schedulebox_PreCreate_0
	| gml_Object_obj_scoreboard_Draw_0
	| gml_Object_obj_scoreboard_Draw_64
	| gml_Object_obj_scoreboard_PreCreate_0
	| gml_Object_obj_season_tally_Create_0
	| gml_Object_obj_season_tally_Step_0
	| gml_Object_obj_season_tally_Draw_64
	| gml_Object_obj_season_tally_Draw_74
	| gml_Object_obj_smallbox_Draw_0
	| gml_Object_obj_smallbox_Draw_64
	| gml_Object_obj_smallbox_PreCreate_0
	| gml_Object_obj_snowflake_Create_0
	| gml_Object_obj_snowflake_Step_0
	| gml_Object_obj_snowflake_Draw_73
	| gml_Object_obj_snowflake_Draw_0
	| gml_Object_obj_splash_Create_0
	| gml_Object_obj_splash_PreCreate_0
	| gml_Object_obj_staffprofile_Create_0
	| gml_Object_obj_staffprofile_Step_0
	| gml_Object_obj_staffprofile_Draw_64
	| gml_Object_obj_staffprofile_KeyPress_88
	| gml_Object_obj_staffprofile_KeyPress_90
	| gml_Object_obj_stats_player_rm_Create_0
	| gml_Object_obj_stats_player_Create_0
	| gml_Object_obj_stats_player_Destroy_0
	| gml_Object_obj_stats_player_Draw_0
	| gml_Object_obj_stats_player_Draw_64
	| gml_Object_obj_stats_player_PreCreate_0
	| gml_Object_obj_store_async_Create_0
	| gml_Object_obj_store_async_Other_66
	| gml_Object_obj_tag_kr_Draw_64
	| gml_Object_obj_tag_kr_PreCreate_0
	| gml_Object_obj_team_editor_Create_0
	| gml_Object_obj_team_editor_PreCreate_0
	| gml_Object_obj_text_exp_Draw_64
	| gml_Object_obj_text_exp_Draw_0
	| gml_Object_obj_text_exp_PreCreate_0
	| gml_Object_obj_text_watermark_Mouse_4
	| gml_Object_obj_text_watermark_Draw_64
	| gml_Object_obj_text_watermark_Draw_0
	| gml_Object_obj_text_watermark_PreCreate_0
	| gml_Object_obj_text_Draw_64
	| gml_Object_obj_text_Draw_0
	| gml_Object_obj_text_PreCreate_0
	| gml_Object_obj_txt_credit_Create_0
	| gml_Object_obj_txt_credit_Step_0
	| gml_Object_obj_txt_credit_PreCreate_0
	| gml_Object_obj_uniform_Create_0
	| gml_Object_obj_uniform_Draw_64
	| gml_Object_obj_uniform_Draw_0
	| gml_Object_obj_uniform_PreCreate_0
	| gml_Object_obj_vbox_Draw_64
	| gml_Object_obj_vbox_Draw_0
	| gml_Object_obj_vbox_PreCreate_0
	| gml_Object_obj_viewhires_Create_0
	| gml_Object_obj_watermark_Create_0
	| gml_Object_obj_watermark_Step_0
	| gml_Object_obj_watermark_Draw_64
	| gml_Object_obj_watermark_Draw_74
	| gml_Object_obj_weather_Create_0
	| gml_Object_obj_weather_Step_0
	| gml_Object_obj_weather_Draw_64
	| gml_Object_obj_weather_PreCreate_0
	| gml_Object_obj_winners_Create_0
	| gml_Object_obj_winners_Alarm_0
	| gml_Object_obj_winners_Draw_0
	| gml_Object_obj_winners_PreCreate_0
	| gml_Object_obj_xp_player_Draw_0
	| gml_Object_obj_xp_player_Draw_64
	| gml_Object_obj_xp_player_PreCreate_0
	| gml_Object_obj_xp_update_Create_0
	| gml_Object_obj_xp_update_Destroy_0
	| gml_Object_obj_xp_update_Step_0
	| gml_Object_obj_xp_update_Draw_0
	| gml_Object_obj_xp_update_Draw_64
	| gml_Object_obj_xp_update_PreCreate_0
	| gml_Object_ui_selectable_Create_0
	| gml_Object_ui_selectable_Alarm_0
	| gml_Object_ui_selectable_Draw_75
	| gml_Object_ui_selectable_PreCreate_0
	| gmlInitGlobal
	| gmlGameEndScripts
	| _f1
	| _02
	| _i4
	| __5
	| _y6
	| _A6
	| _h3
	| _C6
	| _y8
	| _ia
	| _va
	| _Da
	| _wa
	| _xa
	| _ya
	| _za
	| _Aa
	| _Ba
	| _Ca
	| _Sa
	| _Za
	| _gc
	| _Kc
	| _Zd
	| _ee
	| _ge
	| _ie
	| _le
	| _ze
	| _Ee
	| ds_set_precision
	| _Cg
	| _Dg
	| ds_grid_create
	| ds_grid_destroy
	| ds_grid_copy
	| ds_grid_resize
	| ds_grid_width
	| ds_grid_height
	| ds_grid_clear
	| _Qg
	| _Rg
	| _Sg
	| _Tg
	| _Ug
	| _Vg
	| ds_grid_add
	| ds_grid_multiply
	| ds_grid_set_region
	| ds_grid_add_region
	| ds_grid_multiply_region
	| ds_grid_set_disk
	| ds_grid_add_disk
	| ds_grid_multiply_disk
	| _5h
	| ds_grid_set_grid_region
	| ds_grid_add_grid_region
	| ds_grid_multiply_grid_region
	| _hh
	| _ih
	| _jh
	| ds_grid_get_sum
	| ds_grid_get_max
	| ds_grid_get_min
	| ds_grid_get_mean
	| _kh
	| ds_grid_get_disk_sum
	| ds_grid_get_disk_max
	| ds_grid_get_disk_min
	| ds_grid_get_disk_mean
	| _lh
	| ds_grid_value_exists
	| ds_grid_value_x
	| ds_grid_value_y
	| _mh
	| ds_grid_value_disk_exists
	| ds_grid_value_disk_x
	| ds_grid_value_disk_y
	| ds_grid_shuffle
	| ds_grid_write
	| ds_grid_read
	| ds_grid_sort
	| ds_grid_to_mp_grid
	| ds_list_create
	| ds_list_destroy
	| ds_list_clear
	| ds_list_copy
	| ds_list_size
	| ds_list_empty
	| ds_list_add
	| _4i
	| _7i
	| ds_list_set
	| ds_list_set_pre
	| ds_list_set_post
	| ds_list_insert
	| _ci
	| _di
	| ds_list_replace
	| ds_list_delete
	| ds_list_find_index
	| ds_list_find_value
	| ds_list_is_list
	| ds_list_is_map
	| ds_list_sort
	| ds_list_shuffle
	| ds_list_write
	| ds_list_read
	| ds_list_mark_as_map
	| ds_list_mark_as_list
	| _li
	| _5i
	| _wi
	| ds_map_create
	| ds_map_destroy
	| ds_map_clear
	| _xi
	| ds_map_copy
	| ds_map_size
	| ds_map_empty
	| ds_map_replace
	| ds_map_replace_map
	| ds_map_replace_list
	| ds_map_delete
	| ds_map_exists
	| ds_map_add
	| ds_map_add_map
	| ds_map_add_list
	| ds_map_set
	| ds_map_set_pre
	| ds_map_set_post
	| ds_map_find_value
	| ds_map_values_to_array
	| ds_map_keys_to_array
	| ds_map_is_map
	| ds_map_is_list
	| ds_map_find_previous
	| ds_map_find_next
	| ds_map_find_first
	| ds_map_find_last
	| ds_map_write
	| ds_map_read
	| ds_map_secure_save
	| ds_map_secure_load_buffer
	| ds_map_secure_save_buffer
	| ds_map_secure_load
	| _Ti
	| _Li
	| _Vi
	| _Xi
	| ds_priority_create
	| ds_priority_destroy
	| ds_priority_clear
	| ds_priority_copy
	| ds_priority_size
	| ds_priority_empty
	| ds_priority_add
	| ds_priority_change_priority
	| ds_priority_find_priority
	| ds_priority_delete_value
	| ds_priority_delete_min
	| ds_priority_find_min
	| ds_priority_delete_max
	| ds_priority_find_max
	| ds_priority_write
	| ds_priority_read
	| ds_queue_create
	| ds_queue_destroy
	| ds_queue_clear
	| ds_queue_copy
	| ds_queue_size
	| ds_queue_empty
	| ds_queue_enqueue
	| ds_queue_dequeue
	| ds_queue_head
	| ds_queue_tail
	| ds_queue_write
	| ds_queue_read
	| ds_stack_create
	| ds_stack_destroy
	| ds_stack_clear
	| ds_stack_copy
	| ds_stack_size
	| ds_stack_empty
	| ds_stack_push
	| ds_stack_pop
	| ds_stack_top
	| ds_stack_write
	| ds_stack_read
	| _gj
	| animcurve_get
	| animcurve_get_channel_index
	| animcurve_get_channel
	| animcurve_channel_evaluate
	| animcurve_create
	| animcurve_destroy
	| animcurve_exists
	| animcurve_channel_new
	| animcurve_point_new
	| _Fj
	| _Kj
	| _Mj
	| _Nj
	| _Pj
	| _Qj
	| _1k
	| _2k
	| _7k
	| _bk
	| _dk
	| _jk
	| _lk
	| _nk
	| _pk
	| _rk
	| _wk
	| _Bk
	| _Ck
	| _Dk
	| _Ek
	| _Kk
	| _Mk
	| _Sk
	| _Wk
	| _Xk
	| _0l
	| _2l
	| _4l
	| _6l
	| _9l
	| _al
	| clickable_add
	| clickable_add_ext
	| clickable_exists
	| clickable_delete
	| clickable_change
	| clickable_change_ext
	| clickable_set_style
	| _vl
	| _Fl
	| collision_point
	| _Ll
	| collision_point_list
	| _2m
	| collision_rectangle
	| _5m
	| collision_rectangle_list
	| collision_circle
	| collision_circle_list
	| _bm
	| _dm
	| collision_ellipse
	| collision_ellipse_list
	| _fm
	| _hm
	| collision_line
	| collision_line_list
	| point_in_rectangle
	| rectangle_in_rectangle
	| _pm
	| point_in_triangle
	| _Am
	| point_in_circle
	| rectangle_in_circle
	| _Pm
	| _Qm
	| _Um
	| rectangle_in_triangle
	| _0n
	| _1n
	| _2n
	| _3n
	| _4n
	| _5n
	| _6n
	| _7n
	| _8n
	| _9n
	| _an
	| _bn
	| _cn
	| matrix_get
	| matrix_set
	| gpu_set_blendenable
	| gpu_set_ztestenable
	| gpu_set_zfunc
	| gpu_set_zwriteenable
	| gpu_set_fog
	| gpu_set_cullmode
	| gpu_set_blendmode
	| gpu_set_blendmode_ext
	| gpu_set_blendmode_ext_sepalpha
	| gpu_set_blendequation
	| gpu_set_blendequation_sepalpha
	| gpu_set_colorwriteenable
	| gpu_set_colourwriteenable
	| gpu_set_alphatestenable
	| gpu_set_alphatestref
	| gpu_set_texfilter
	| gpu_set_texfilter_ext
	| gpu_set_texrepeat
	| gpu_set_texrepeat_ext
	| gpu_set_tex_filter
	| gpu_set_tex_filter_ext
	| gpu_set_tex_repeat
	| gpu_set_tex_repeat_ext
	| gpu_set_tex_mip_filter
	| gpu_set_tex_mip_filter_ext
	| gpu_set_tex_mip_bias
	| gpu_set_tex_mip_bias_ext
	| gpu_set_tex_min_mip
	| gpu_set_tex_min_mip_ext
	| gpu_set_tex_max_mip
	| gpu_set_tex_max_mip_ext
	| gpu_set_tex_max_aniso
	| gpu_set_tex_max_aniso_ext
	| gpu_set_tex_mip_enable
	| gpu_set_tex_mip_enable_ext
	| gpu_get_blendenable
	| gpu_get_ztestenable
	| gpu_get_zfunc
	| gpu_get_zwriteenable
	| gpu_get_fog
	| gpu_get_cullmode
	| gpu_get_blendmode
	| gpu_get_blendmode_ext
	| gpu_get_blendmode_ext_sepalpha
	| gpu_get_blendmode_src
	| gpu_get_blendmode_dest
	| gpu_get_blendmode_srcalpha
	| gpu_get_blendmode_destalpha
	| gpu_get_blendequation
	| gpu_get_blendequation_sepalpha
	| gpu_get_colorwriteenable
	| gpu_get_colourwriteenable
	| gpu_get_alphatestenable
	| gpu_get_alphatestref
	| gpu_get_texfilter
	| gpu_get_texfilter_ext
	| gpu_get_texrepeat
	| gpu_get_texrepeat_ext
	| gpu_get_tex_filter
	| gpu_get_tex_filter_ext
	| gpu_get_tex_repeat
	| gpu_get_tex_repeat_ext
	| gpu_get_tex_mip_filter
	| gpu_get_tex_mip_filter_ext
	| gpu_get_tex_mip_bias
	| gpu_get_tex_mip_bias_ext
	| gpu_get_tex_min_mip
	| gpu_get_tex_min_mip_ext
	| gpu_get_tex_max_mip
	| gpu_get_tex_max_mip_ext
	| gpu_get_tex_max_aniso
	| gpu_get_tex_max_aniso_ext
	| gpu_get_tex_mip_enable
	| gpu_get_tex_mip_enable_ext
	| gpu_push_state
	| gpu_pop_state
	| gpu_get_state
	| gpu_set_state
	| _un
	| _vn
	| _wn
	| _xn
	| _yn
	| _Fn
	| _1p
	| _zn
	| _En
	| _Dn
	| _An
	| _Bn
	| _Cn
	| _Gn
	| _Hn
	| _In
	| _mn
	| _nn
	| _on
	| _pn
	| _qn
	| _dn
	| _en
	| _fn
	| _gn
	| _hn
	| _jn
	| _in
	| _kn
	| _ln
	| _Kn
	| _Ln
	| _Mn
	| _Nn
	| _On
	| _Pn
	| _Qn
	| _Jn
	| _Rn
	| _Sn
	| _Tn
	| _Un
	| _Vn
	| _Wn
	| _Xn
	| _Yn
	| _Zn
	| __n
	| _0o
	| _1o
	| _2o
	| _3o
	| _4o
	| _5o
	| _6o
	| _7o
	| _8o
	| _9o
	| _ao
	| _bo
	| _co
	| _do
	| _eo
	| _fo
	| _go
	| _ho
	| _io
	| _jo
	| _ko
	| _lo
	| _mo
	| _no
	| _oo
	| _po
	| _qo
	| _ro
	| _Mr
	| _Nr
	| _so
	| _to
	| _uo
	| _vo
	| _wo
	| _xo
	| _yo
	| _zo
	| _Ao
	| _Bo
	| _Co
	| _Do
	| _Eo
	| _Fo
	| _Go
	| _Ho
	| _Io
	| _Jo
	| _Ko
	| _Lo
	| _Mo
	| _No
	| _Tr
	| _Vr
	| _Oo
	| _Po
	| _3s
	| _gs
	| _ks
	| _ms
	| _os
	| date_current_datetime
	| _xs
	| _ys
	| date_create_datetime
	| date_get_year
	| date_get_month
	| date_get_day
	| date_get_weekday
	| date_get_week
	| date_get_hour
	| date_get_minute
	| date_get_second
	| _Gs
	| date_valid_datetime
	| date_inc_year
	| date_inc_month
	| date_inc_week
	| date_inc_day
	| date_inc_hour
	| date_inc_minute
	| date_inc_second
	| date_get_day_of_year
	| date_get_hour_of_year
	| date_get_minute_of_year
	| date_get_second_of_year
	| date_year_span
	| date_month_span
	| date_week_span
	| date_day_span
	| date_hour_span
	| date_minute_span
	| date_second_span
	| _Us
	| date_compare_datetime
	| date_compare_date
	| date_compare_time
	| _Zs
	| _0t
	| _1t
	| _3t
	| date_date_of
	| date_time_of
	| _6t
	| date_datetime_string
	| date_date_string
	| date_time_string
	| date_days_in_month
	| date_days_in_year
	| date_leap_year
	| date_is_today
	| date_set_timezone
	| date_get_timezone
	| debug
	| _pt
	| __yy__processException
	| _73
	| _Sf
	| _qa
	| _Jt
	| _Lt
	| _Mt
	| _Nt
	| _Ot
	| _Tt
	| _Vt
	| debug_event
	| dbg_view
	| dbg_section
	| dbg_view_delete
	| dbg_section_delete
	| dbg_slider
	| dbg_drop_down
	| dbg_watch
	| dbg_same_line
	| dbg_button
	| dbg_text_input
	| dbg_checkbox
	| dbg_colour
	| dbg_color
	| dbg_text
	| dbg_sprite
	| dbg_slider_int
	| dbg_add_font_glyphs
	| ref_create
	| is_debug_overlay_open
	| is_mouse_over_debug_overlay
	| is_keyboard_used_debug_overlay
	| show_debug_log
	| show_debug_message
	| show_debug_message_ext
	| show_debug_overlay
	| debug_get_callstack
	| show_message_async
	| show_message
	| show_error
	| show_question_async
	| show_question
	| get_integer_async
	| get_integer
	| _8u
	| _uu
	| _yu
	| _Au
	| _Bu
	| _Du
	| _Fu
	| _3u
	| _pu
	| get_login_async
	| get_string_async
	| get_string
	| _su
	| _Ft
	| _zt
	| _Dt
	| _Mu
	| _Wu
	| UpdateDebugWindow
	| _5v
	| file_text_open_from_string
	| file_text_open_read
	| file_text_close
	| file_text_open_write
	| file_text_open_append
	| file_text_write_string
	| file_text_write_real
	| file_text_writeln
	| file_text_read_string
	| file_text_read_real
	| file_text_readln
	| file_text_eof
	| file_text_eoln
	| file_exists
	| file_delete
	| file_rename
	| file_copy
	| directory_exists
	| directory_create
	| directory_destroy
	| file_find_first
	| file_find_next
	| file_find_close
	| file_attributes
	| filename_name
	| filename_path
	| filename_dir
	| filename_drive
	| filename_change_ext
	| file_bin_open
	| file_bin_rewrite
	| file_bin_close
	| file_bin_size
	| file_bin_position
	| file_bin_seek
	| file_bin_write_byte
	| file_bin_read_byte
	| environment_get_variable
	| filename_ext
	| _Av
	| _Iv
	| _Jv
	| _Kv
	| json_decode
	| _Qv
	| _Tv
	| _Uv
	| _Sv
	| json_encode
	| _Xv
	| json_stringify
	| _5w
	| _7w
	| json_parse
	| _aw
	| load_csv
	| draw_set_halign
	| draw_get_halign
	| draw_set_valign
	| draw_get_valign
	| draw_set_font
	| draw_get_font
	| draw_text
	| draw_text_color
	| draw_text_ext_color
	| draw_text_ext
	| draw_text_transformed
	| draw_text_ext_transformed
	| draw_text_ext_transformed_color
	| draw_text_transformed_color
	| string_height
	| string_width
	| string_width_ext
	| string_height_ext
	| font_exists
	| font_get_bold
	| font_get_fontname
	| font_get_name
	| font_get_italic
	| font_get_first
	| font_get_last
	| font_get_size
	| _Cw
	| font_delete
	| font_enable_sdf
	| font_get_sdf_enabled
	| font_sdf_spread
	| font_get_sdf_spread
	| font_enable_effects
	| font_add
	| font_add_sprite
	| font_add_sprite_ext
	| font_replace_sprite
	| font_replace_sprite_ext
	| font_set_cache_size
	| font_get_texture
	| font_get_uvs
	| font_get_info
	| font_add_enable_aa
	| font_add_get_enable_aa
	| _5x
	| scheduler_resolution_set
	| scheduler_resolution_get
	| display_set_timing_method
	| display_get_timing_method
	| _8x
	| _9x
	| _fx
	| draw_highscore
	| highscore_clear
	| highscore_add
	| highscore_value
	| highscore_name
	| _kx
	| _qx
	| _rx
	| event_perform
	| event_perform_async
	| _Bx
	| event_perform_object
	| event_user
	| event_inherited
	| parameter_count
	| parameter_string
	| _Yx
	| os_get_language
	| os_get_region
	| os_check_permission
	| os_request_permission
	| device_mouse_dbclick_enable
	| base64_encode
	| _1y
	| base64_decode
	| _4y
	| md5_string_unicode
	| md5_string_utf8
	| md5_file
	| os_is_network_connected
	| os_powersave_enable
	| os_lock_orientation
	| analytics_event
	| analytics_event_ext
	| sha1_string_unicode
	| sha1_string_utf8
	| sha1_file
	| _5y
	| _fy
	| _hy
	| _jy
	| _ly
	| _my
	| _ny
	| _dy
	| _ky
	| _cy
	| _gy
	| _iy
	| _ey
	| _6y
	| _Dy
	| _qy
	| _oy
	| _py
	| _Ny
	| _Iy
	| _Jy
	| _Ky
	| _Ly
	| _My
	| _Oy
	| _9y
	| _Ty
	| _Uy
	| _Vy
	| _Xy
	| _Yy
	| _Zy
	| _Sy
	| _Wy
	| _1z
	| __y
	| _0z
	| _3z
	| _4z
	| _5z
	| _7z
	| _8z
	| _dz
	| _uz
	| asset_get_index
	| asset_get_type
	| asset_get_ids
	| alarm_get
	| alarm_set
	| game_set_speed
	| game_get_speed
	| _Qz
	| gamepad_is_supported
	| gamepad_get_device_count
	| gamepad_is_connected
	| gamepad_get_button_threshold
	| gamepad_set_button_threshold
	| gamepad_get_axis_deadzone
	| gamepad_set_axis_deadzone
	| gamepad_get_description
	| gamepad_button_count
	| gamepad_button_check
	| gamepad_button_check_pressed
	| gamepad_button_check_released
	| gamepad_button_value
	| gamepad_axis_count
	| gamepad_axis_value
	| gamepad_set_vibration
	| gamepad_set_color
	| gamepad_set_colour
	| gamepad_hat_count
	| gamepad_hat_value
	| gamepad_remove_mapping
	| gamepad_test_mapping
	| gamepad_get_mapping
	| gamepad_get_guid
	| gamepad_set_option
	| gamepad_get_option
	| display_get_gui_height
	| display_get_gui_width
	| display_set_gui_size
	| display_set_gui_maximise
	| display_get_dpi_x
	| display_get_dpi_y
	| display_get_width
	| display_get_height
	| display_get_orientation
	| draw_clear
	| draw_clear_alpha
	| make_color_rgb
	| color_get_blue
	| color_get_green
	| color_get_red
	| _AA
	| color_get_hue
	| color_get_saturation
	| color_get_value
	| merge_color
	| merge_colour
	| make_color_hsv
	| make_colour_hsv
	| draw_set_alpha
	| draw_get_alpha
	| draw_get_color
	| draw_get_colour
	| draw_set_color
	| draw_set_lighting
	| draw_light_enable
	| draw_light_define_direction
	| draw_light_define_ambient
	| draw_light_define_point
	| draw_light_get_ambient
	| draw_light_get
	| draw_get_lighting
	| draw_roundrect
	| draw_roundrect_ext
	| draw_roundrect_color
	| draw_roundrect_color_ext
	| draw_roundrect_colour_ext
	| _PA
	| draw_rectangle
	| _TA
	| draw_rectangle_color
	| draw_rectangle_colour
	| _WA
	| draw_point
	| draw_line_width
	| draw_line
	| draw_getpixel
	| draw_getpixel_ext
	| _3B
	| draw_triangle
	| _9B
	| draw_triangle_color
	| draw_triangle_colour
	| _bB
	| _dB
	| draw_healthbar
	| draw_set_circle_precision
	| _tB
	| draw_arrow
	| draw_ellipse
	| draw_ellipse_color
	| draw_ellipse_colour
	| _wB
	| draw_circle_color
	| draw_circle_colour
	| _HB
	| draw_circle
	| draw_point_color
	| draw_point_colour
	| _JB
	| draw_line_width_color
	| draw_line_width_colour
	| _KB
	| draw_line_color
	| draw_button
	| _MB
	| _OB
	| draw_texture_flush
	| draw_enable_drawevent
	| skeleton_animation_set
	| skeleton_animation_mix
	| skeleton_animation_set_ext
	| skeleton_animation_get_ext
	| skeleton_attachment_set
	| skeleton_attachment_get
	| skeleton_attachment_create
	| skeleton_attachment_create_colour
	| skeleton_attachment_create_color
	| skeleton_attachment_replace
	| skeleton_attachment_replace_colour
	| skeleton_attachment_destroy
	| skeleton_attachment_exists
	| skeleton_attachment_replace_color
	| skeleton_slot_colour_set
	| skeleton_slot_color_set
	| skeleton_slot_colour_get
	| skeleton_slot_color_get
	| skeleton_slot_alpha_get
	| skeleton_skin_set
	| skeleton_skin_get
	| skeleton_skin_create
	| skeleton_animation_get
	| skeleton_animation_get_duration
	| skeleton_animation_get_frames
	| skeleton_animation_get_frame
	| skeleton_animation_set_frame
	| skeleton_animation_get_position
	| skeleton_animation_set_position
	| skeleton_animation_get_event_frames
	| skeleton_animation_clear
	| skeleton_animation_is_looping
	| skeleton_animation_is_finished
	| skeleton_collision_draw_set
	| skeleton_bone_data_get
	| skeleton_bone_data_set
	| skeleton_bone_state_get
	| skeleton_bone_state_set
	| draw_skeleton
	| draw_skeleton_time
	| draw_skeleton_instance
	| draw_skeleton_collision
	| draw_enable_skeleton_blendmodes
	| draw_get_enable_skeleton_blendmodes
	| skeleton_animation_list
	| skeleton_skin_list
	| skeleton_bone_list
	| skeleton_slot_list
	| skeleton_slot_data
	| skeleton_slot_data_instance
	| _bC
	| skeleton_get_minmax
	| skeleton_get_num_bounds
	| skeleton_get_bounds
	| skeleton_find_slot
	| draw_enable_swf_aa
	| draw_set_swf_aa_level
	| draw_get_swf_aa_level
	| _hC
	| _Hp
	| _IC
	| _NC
	| _PC
	| view_get_camera
	| view_get_visible
	| view_get_xport
	| view_get_yport
	| view_get_wport
	| view_get_hport
	| view_get_surface_id
	| view_set_camera
	| view_set_visible
	| view_set_xport
	| view_set_yport
	| view_set_wport
	| view_set_hport
	| view_set_surface_id
	| _XC
	| _YC
	| _ZC
	| display_set_windows_alternate_sync
	| display_set_ui_visibility
	| display_set_sleep_margin
	| display_get_sleep_margin
	| __C
	| _5D
	| _bD
	| _gD
	| _kD
	| _pD
	| _nD
	| _zD
	| _yD
	| http_get
	| http_get_file
	| http_post_string
	| http_request
	| _ID
	| http_set_request_crossorigin
	| http_get_request_crossorigin
	| ini_open_from_string
	| ini_open
	| ini_close
	| ini_read_string
	| ini_read_real
	| ini_write_string
	| ini_write_real
	| ini_key_exists
	| ini_section_exists
	| ini_key_delete
	| ini_section_delete
	| instance_find
	| instance_id_get
	| instance_exists
	| instance_number
	| instance_position
	| instance_position_list
	| instance_nearest
	| instance_furthest
	| _fE
	| _4m
	| _im
	| _em
	| _Jl
	| _fF
	| _nF
	| _xF
	| instance_place
	| instance_place_list
	| _zF
	| instance_destroy
	| position_destroy
	| position_change
	| motion_set
	| motion_add
	| instance_copy
	| _UF
	| __F
	| instance_deactivate_all
	| instance_activate_all
	| _5G
	| instance_activate_object
	| instance_deactivate_object
	| instance_deactivate_region
	| _dG
	| instance_deactivate_layer
	| instance_activate_layer
	| instance_activate_region
	| keyboard_key_press
	| keyboard_key_release
	| _pG
	| mouse_check_button
	| mouse_check_button_pressed
	| mouse_check_button_released
	| mouse_wheel_up
	| mouse_wheel_down
	| mouse_clear
	| io_clear
	| keyboard_check
	| keyboard_check_pressed
	| keyboard_clear
	| keyboard_check_released
	| keyboard_check_direct
	| display_mouse_get_x
	| display_mouse_get_y
	| keyboard_set_map
	| keyboard_get_map
	| keyboard_unset_map
	| keyboard_virtual_show
	| keyboard_virtual_hide
	| keyboard_virtual_status
	| keyboard_virtual_height
	| gesture_drag_time
	| gesture_drag_distance
	| gesture_flick_speed
	| gesture_double_tap_time
	| gesture_double_tap_distance
	| gesture_pinch_distance
	| gesture_pinch_angle_towards
	| gesture_pinch_angle_away
	| gesture_rotate_time
	| gesture_rotate_angle
	| gesture_tap_count
	| gesture_get_drag_time
	| gesture_get_drag_distance
	| gesture_get_flick_speed
	| gesture_get_double_tap_time
	| gesture_get_double_tap_distance
	| gesture_get_pinch_distance
	| gesture_get_pinch_angle_towards
	| gesture_get_pinch_angle_away
	| gesture_get_rotate_time
	| gesture_get_rotate_angle
	| gesture_get_tap_count
	| _YG
	| _2H
	| _nH
	| _oH
	| _pH
	| _sH
	| _uH
	| _vH
	| _yH
	| _KH
	| _SH
	| _VH
	| __H
	| _1I
	| _9I
	| _MK
	| _dL
	| _fL
	| layer_get_id
	| layer_get_id_at_depth
	| layer_get_depth
	| layer_create
	| layer_destroy
	| layer_destroy_instances
	| layer_add_instance
	| _mL
	| layer_has_instance
	| layer_instance_get_instance
	| layer_set_visible
	| layer_get_visible
	| layer_exists
	| layer_script_begin
	| layer_script_end
	| layer_shader
	| _oL
	| layer_get_script_begin
	| layer_get_script_end
	| layer_get_shader
	| layer_set_target_room
	| layer_get_target_room
	| layer_reset_target_room
	| _qL
	| layer_background_get_id
	| layer_background_exists
	| layer_background_create
	| layer_background_destroy
	| layer_background_visible
	| layer_background_change
	| layer_background_htiled
	| layer_background_vtiled
	| layer_background_xscale
	| layer_background_yscale
	| layer_background_stretch
	| layer_background_blend
	| layer_background_alpha
	| layer_background_index
	| layer_background_sprite
	| layer_background_speed
	| layer_background_get_visible
	| layer_background_get_sprite
	| layer_background_get_htiled
	| layer_background_get_vtiled
	| layer_background_get_stretch
	| layer_background_get_xscale
	| layer_background_get_yscale
	| layer_background_get_blend
	| layer_background_get_alpha
	| layer_background_get_index
	| layer_background_get_speed
	| _tL
	| layer_sprite_get_id
	| layer_sprite_exists
	| layer_sprite_create
	| layer_sprite_destroy
	| layer_sprite_change
	| layer_sprite_index
	| layer_sprite_speed
	| layer_sprite_xscale
	| layer_sprite_yscale
	| layer_sprite_angle
	| layer_sprite_blend
	| layer_sprite_alpha
	| layer_sprite_x
	| layer_sprite_y
	| layer_sprite_get_sprite
	| layer_sprite_get_index
	| layer_sprite_get_speed
	| layer_sprite_get_xscale
	| layer_sprite_get_yscale
	| layer_sprite_get_angle
	| layer_sprite_get_blend
	| layer_sprite_get_alpha
	| layer_sprite_get_x
	| layer_sprite_get_y
	| _IL
	| layer_tilemap_get_id
	| layer_tilemap_exists
	| layer_tilemap_create
	| layer_tilemap_destroy
	| layer_x
	| layer_y
	| layer_get_x
	| layer_get_y
	| layer_hspeed
	| layer_vspeed
	| layer_get_hspeed
	| layer_get_vspeed
	| tilemap_tileset
	| tilemap_x
	| tilemap_y
	| tilemap_set
	| _6K
	| tilemap_set_at_pixel
	| tileset_get_texture
	| tileset_get_name
	| tileset_get_uvs
	| tileset_get_info
	| tilemap_get_tileset
	| tilemap_get_tile_width
	| tilemap_get_tile_height
	| tilemap_get_width
	| tilemap_get_height
	| _ZL
	| tilemap_set_width
	| tilemap_set_height
	| tilemap_get_x
	| tilemap_get_y
	| tilemap_get
	| tilemap_get_at_pixel
	| tilemap_get_cell_x_at_pixel
	| tilemap_get_cell_y_at_pixel
	| tilemap_clear
	| tilemap_set_global_mask
	| tilemap_get_global_mask
	| tilemap_get_mask
	| tilemap_get_frame
	| tilemap_set_mask
	| draw_tilemap
	| tile_set_empty
	| tile_set_index
	| tile_set_flip
	| tile_set_mirror
	| tile_set_rotate
	| tile_get_empty
	| tile_get_index
	| tile_get_flip
	| tile_get_mirror
	| tile_get_rotate
	| _5M
	| instance_create_depth
	| instance_create_layer
	| layer_get_all
	| layer_get_all_elements
	| layer_get_name
	| layer_depth
	| layer_get_element_layer
	| layer_get_element_type
	| layer_element_move
	| layer_force_draw_depth
	| layer_is_draw_depth_forced
	| layer_get_forced_depth
	| _fM
	| layer_tile_exists
	| layer_tile_create
	| layer_tile_destroy
	| layer_tile_change
	| layer_tile_xscale
	| layer_tile_yscale
	| layer_tile_blend
	| layer_tile_alpha
	| layer_tile_x
	| layer_tile_y
	| layer_tile_region
	| layer_tile_visible
	| layer_tile_get_sprite
	| layer_tile_get_xscale
	| layer_tile_get_yscale
	| layer_tile_get_blend
	| layer_tile_get_alpha
	| layer_tile_get_x
	| layer_tile_get_y
	| layer_tile_get_region
	| layer_tile_get_visible
	| _kM
	| layer_sequence_get_instance
	| layer_sequence_create
	| layer_sequence_destroy
	| layer_sequence_exists
	| layer_sequence_x
	| layer_sequence_y
	| layer_sequence_angle
	| layer_sequence_xscale
	| layer_sequence_yscale
	| layer_sequence_headpos
	| layer_sequence_headdir
	| layer_sequence_pause
	| layer_sequence_play
	| layer_sequence_speedscale
	| layer_sequence_get_x
	| layer_sequence_get_y
	| layer_sequence_get_angle
	| layer_sequence_get_xscale
	| layer_sequence_get_yscale
	| layer_sequence_get_headpos
	| layer_sequence_get_headdir
	| layer_sequence_get_sequence
	| layer_sequence_is_paused
	| layer_sequence_is_finished
	| layer_sequence_get_speedscale
	| layer_sequence_get_length
	| sequence_instance_exists
	| fx_create
	| fx_get_name
	| fx_get_parameter_names
	| fx_get_parameter
	| fx_get_parameters
	| fx_get_single_layer
	| fx_set_parameter
	| fx_set_parameters
	| fx_set_single_layer
	| layer_set_fx
	| layer_get_fx
	| layer_clear_fx
	| layer_enable_fx
	| layer_fx_is_enabled
	| floor
	| _8N
	| _aN
	| abs
	| cos
	| dcos
	| sin
	| dsin
	| tan
	| dtan
	| lengthdir_x
	| lengthdir_y
	| point_direction
	| point_distance
	| point_distance_3d
	| _85
	| _75
	| max
	| _hN
	| min
	| _jN
	| _mN
	| _pN
	| _rN
	| random
	| irandom
	| random_range
	| random_set_seed
	| randomize
	| irandom_range
	| random_get_seed
	| choose
	| sign
	| ceil
	| frac
	| sqrt
	| sqr
	| power
	| exp
	| ln
	| log2
	| log10
	| logn
	| arcsin
	| darcsin
	| arccos
	| darccos
	| arctan
	| darctan
	| arctan2
	| darctan2
	| degtorad
	| radtodeg
	| mean
	| median
	| dot_product
	| dot_product_3d
	| math_set_epsilon
	| math_get_epsilon
	| dot_product_normalised
	| dot_product_3d_normalised
	| is_real
	| is_numeric
	| is_bool
	| is_undefined
	| is_int32
	| is_int64
	| is_ptr
	| is_struct
	| is_nan
	| is_infinity
	| static_get
	| static_set
	| YYIsInstanceof
	| YYInstanceof
	| YYTypeof
	| int64
	| ptr
	| _FN
	| is_string
	| is_array
	| array_length_1d
	| array_length_2d
	| array_height_2d
	| clamp
	| lerp
	| angle_difference
	| _xN
	| yyCompareVal
	| yyfplus
	| yyfminus
	| yyftime
	| yyfdivide
	| yyfmod
	| yyfdiv
	| yyfnotequal
	| yyfequal
	| yyfless
	| yyflessequal
	| yyfgreater
	| yyfgreaterequal
	| yyfand
	| yyfor
	| yyfxor
	| yyfbitand
	| yyfbitor
	| yyfbitxor
	| yyfbitshiftleft
	| yyfbitshiftright
	| extension_exists
	| extension_get_version
	| extension_get_option_value
	| extension_get_option_count
	| extension_get_option_names
	| extension_get_options
	| gc_collect
	| gc_enable
	| gc_is_enabled
	| gc_get_stats
	| _5O
	| _7O
	| mp_linear_step
	| mp_linear_step_object
	| _bO
	| mp_potential_step
	| mp_potential_step_object
	| mp_potential_settings
	| _jO
	| _kO
	| mp_linear_path
	| mp_linear_path_object
	| _vO
	| _eO
	| _AO
	| _BO
	| mp_potential_path
	| mp_potential_path_object
	| _IO
	| mp_grid_create
	| mp_grid_destroy
	| mp_grid_clear_all
	| mp_grid_clear_cell
	| mp_grid_clear_rectangle
	| mp_grid_add_cell
	| mp_grid_get_cell
	| mp_grid_add_rectangle
	| mp_grid_add_instances
	| _1P
	| mp_grid_path
	| mp_grid_to_ds_grid
	| place_free
	| place_empty
	| place_meeting
	| place_snapped
	| move_random
	| move_snap
	| move_wrap
	| move_towards_point
	| _IP
	| _KP
	| move_bounce_solid
	| move_bounce_all
	| _VP
	| _WP
	| _yF
	| _cE
	| move_and_collide
	| move_contact_solid
	| move_contact_all
	| _sQ
	| move_outside_solid
	| move_outside_all
	| distance_to_point
	| distance_to_object
	| position_empty
	| position_meeting
	| _FQ
	| _RQ
	| _SQ
	| _TQ
	| _VQ
	| __Q
	| _6R
	| _tR
	| network_create_server
	| network_create_server_raw
	| network_set_timeout
	| network_create_socket_ext
	| network_create_socket
	| network_connect
	| network_connect_raw
	| network_connect_async
	| network_connect_raw_async
	| network_resolve
	| network_send_broadcast
	| network_send_packet
	| network_send_raw
	| network_set_config
	| network_send_udp
	| network_send_udp_raw
	| network_destroy
	| object_exists
	| object_get_name
	| object_get_sprite
	| object_get_solid
	| object_get_visible
	| _SR
	| object_get_persistent
	| object_get_mask
	| object_get_parent
	| object_get_physics
	| object_set_sprite
	| object_set_solid
	| object_set_visible
	| object_set_persistent
	| object_set_mask
	| __R
	| object_is_ancestor
	| _2S
	| _8S
	| _bS
	| _eS
	| _hS
	| _iS
	| _kS
	| _mS
	| particle_get_info
	| particle_exists
	| part_system_create
	| part_system_destroy
	| part_system_exists
	| part_system_clear
	| part_system_draw_order
	| part_system_depth
	| part_system_color
	| part_system_position
	| part_system_angle
	| part_system_automatic_update
	| part_system_automatic_draw
	| part_system_update
	| part_system_drawit
	| part_particles_create
	| part_particles_create_color
	| part_particles_burst
	| part_particles_clear
	| part_particles_count
	| part_type_create
	| part_type_destroy
	| part_type_exists
	| part_type_clear
	| part_type_shape
	| part_type_sprite
	| part_type_subimage
	| part_type_size
	| part_type_size_x
	| part_type_size_y
	| part_type_scale
	| part_type_blend
	| part_type_color1
	| part_type_color2
	| part_type_color3
	| part_type_color_mix
	| part_type_color_rgb
	| part_type_color_hsv
	| part_type_alpha1
	| part_type_alpha2
	| part_type_alpha3
	| part_type_life
	| part_type_step
	| part_type_death
	| part_type_orientation
	| part_type_speed
	| part_type_direction
	| part_type_gravity
	| part_emitter_create
	| part_emitter_destroy
	| part_emitter_destroy_all
	| part_emitter_enable
	| part_emitter_exists
	| part_emitter_clear
	| part_emitter_region
	| part_emitter_burst
	| part_emitter_stream
	| part_emitter_delay
	| part_emitter_interval
	| part_emitter_relative
	| effect_create_below
	| effect_create_above
	| effect_create_layer
	| effect_create_depth
	| effect_clear
	| part_system_create_layer
	| part_system_get_layer
	| part_system_layer
	| part_system_global_space
	| part_system_get_info
	| path_exists
	| path_get_name
	| path_get_length
	| path_get_kind
	| path_get_closed
	| path_get_precision
	| path_get_number
	| path_get_point_x
	| path_get_point_y
	| path_get_point_speed
	| path_get_x
	| path_get_y
	| path_get_speed
	| path_set_kind
	| path_set_closed
	| path_set_precision
	| path_add
	| path_duplicate
	| path_assign
	| path_start
	| path_end
	| _uV
	| path_shift
	| path_rescale
	| path_rotate
	| path_reverse
	| path_flip
	| path_mirror
	| path_change_point
	| path_delete
	| path_append
	| path_add_point
	| path_insert_point
	| path_delete_point
	| path_clear_points
	| physics_world_create
	| physics_world_draw_debug
	| physics_world_gravity
	| physics_world_update_speed
	| physics_world_update_iterations
	| physics_pause_enable
	| physics_fixture_create
	| physics_fixture_set_kinematic
	| physics_fixture_set_density
	| physics_fixture_set_restitution
	| physics_fixture_set_friction
	| physics_fixture_set_collision_group
	| physics_fixture_set_sensor
	| physics_fixture_set_linear_damping
	| physics_fixture_set_angular_damping
	| physics_fixture_set_awake
	| physics_fixture_set_circle_shape
	| physics_fixture_set_box_shape
	| physics_fixture_set_edge_shape
	| physics_fixture_set_polygon_shape
	| physics_fixture_set_chain_shape
	| physics_fixture_add_point
	| physics_fixture_bind_ext
	| physics_fixture_bind
	| physics_fixture_delete
	| physics_joint_distance_create
	| physics_joint_rope_create
	| physics_joint_revolute_create
	| physics_joint_prismatic_create
	| physics_joint_pulley_create
	| physics_joint_wheel_create
	| physics_joint_weld_create
	| physics_joint_friction_create
	| physics_joint_gear_create
	| physics_joint_enable_motor
	| physics_joint_get_value
	| physics_joint_set_value
	| physics_joint_delete
	| physics_apply_force
	| physics_apply_impulse
	| physics_apply_local_force
	| physics_apply_local_impulse
	| physics_apply_angular_impulse
	| physics_apply_torque
	| physics_mass_properties
	| physics_draw_debug
	| physics_test_overlap
	| physics_remove_fixture
	| physics_get_friction
	| physics_get_density
	| physics_get_restitution
	| physics_set_friction
	| physics_set_density
	| physics_set_restitution
	| physics_particle_create
	| physics_particle_delete
	| physics_particle_delete_region_circle
	| physics_particle_delete_region_box
	| physics_particle_delete_region_poly
	| physics_particle_group_begin
	| physics_particle_group_circle
	| physics_particle_group_box
	| physics_particle_group_polygon
	| physics_particle_group_add_point
	| physics_particle_group_end
	| physics_particle_group_join
	| physics_particle_group_delete
	| physics_particle_draw
	| physics_particle_draw_ext
	| physics_particle_count
	| physics_particle_get_data
	| physics_particle_get_max_count
	| physics_particle_get_radius
	| physics_particle_get_density
	| physics_particle_get_damping
	| physics_particle_get_gravity_scale
	| physics_particle_set_max_count
	| physics_particle_set_radius
	| physics_particle_set_density
	| physics_particle_set_damping
	| physics_particle_set_gravity_scale
	| physics_particle_set_flags
	| physics_particle_set_category_flags
	| physics_particle_set_group_flags
	| physics_particle_get_group_flags
	| physics_particle_get_data_particle
	| physics_particle_group_count
	| physics_particle_group_get_data
	| physics_particle_group_get_mass
	| physics_particle_group_get_inertia
	| physics_particle_group_get_centre_x
	| physics_particle_group_get_centre_y
	| physics_particle_group_get_vel_x
	| physics_particle_group_get_vel_y
	| physics_particle_group_get_ang_vel
	| physics_particle_group_get_x
	| physics_particle_group_get_y
	| physics_particle_group_get_angle
	| room_exists
	| room_get_name
	| _eZ
	| room_get_info
	| room_set_width
	| room_set_height
	| room_set_persistent
	| room_set_background_color
	| room_get_camera
	| room_set_camera
	| room_get_viewport
	| room_set_viewport
	| room_set_view_enabled
	| room_add
	| room_duplicate
	| room_assign
	| room_instance_add
	| room_instance_clear
	| room_goto_next
	| room_restart
	| room_goto
	| room_goto_previous
	| room_previous
	| room_next
	| game_end
	| game_restart
	| _VZ
	| sequence_create
	| sequence_destroy
	| sequence_get
	| sequence_exists
	| _4_
	| sequence_keyframe_new
	| sequence_keyframedata_new
	| sequence_track_new
	| sequence_get_objects
	| sequence_instance_override_object
	| _Z_
	| ___
	| _001
	| _101
	| _201
	| _301
	| _401
	| _501
	| _601
	| _701
	| _801
	| _901
	| _a01
	| _b01
	| _c01
	| _d01
	| _e01
	| texture_get_texel_width
	| texture_get_texel_height
	| texture_set_stage
	| shaders_are_supported
	| shader_is_compiled
	| shader_set
	| shader_reset
	| shader_current
	| shader_get_uniform
	| shader_set_uniform_i
	| shader_set_uniform_f
	| _j01
	| shader_set_uniform_matrix
	| shader_get_sampler_index
	| shader_enable_corner_id
	| shader_set_uniform_i_array
	| shader_set_uniform_f_array
	| shader_set_uniform_f_buffer
	| shader_set_uniform_matrix_array
	| shader_get_name
	| _e11
	| _m11
	| _r11
	| _E11
	| _o11
	| _w11
	| _I11
	| _L11
	| _x11
	| _P11
	| _Q11
	| _021
	| _h31
	| _m31
	| _h21
	| _i21
	| _j21
	| _w21
	| _u31
	| _v31
	| _y31
	| _x31
	| _D11
	| _s11
	| audio_system_is_available
	| audio_system_is_initialised
	| audio_sound_is_playable
	| _G31
	| _r21
	| _N31
	| _Q31
	| audio_play_sound
	| audio_play_sound_on
	| audio_play_sound_at
	| audio_play_sound_ext
	| audio_stop_sound
	| audio_pause_sound
	| audio_resume_sound
	| audio_play_music
	| audio_stop_music
	| audio_pause_music
	| audio_resume_music
	| audio_music_is_playing
	| audio_exists
	| audio_sound_get_pitch
	| audio_sound_pitch
	| audio_sound_get_gain
	| audio_sound_gain
	| audio_music_gain
	| _A11
	| audio_sound_length
	| audio_sound_get_track_position
	| audio_sound_set_track_position
	| audio_sound_loop
	| audio_sound_get_loop
	| audio_sound_loop_start
	| audio_sound_get_loop_start
	| audio_sound_loop_end
	| audio_sound_get_loop_end
	| audio_system
	| audio_emitter_exists
	| audio_get_type
	| audio_get_name
	| audio_falloff_set_model
	| _c41
	| audio_stop_all
	| _q41
	| audio_pause_all
	| audio_resume_all
	| _d41
	| audio_is_paused
	| audio_is_playing
	| audio_listener_position
	| audio_listener_velocity
	| audio_listener_orientation
	| audio_listener_set_position
	| audio_listener_set_velocity
	| audio_listener_set_orientation
	| audio_listener_get_data
	| audio_emitter_position
	| audio_emitter_get_x
	| audio_emitter_get_y
	| audio_emitter_get_z
	| audio_emitter_create
	| audio_emitter_free
	| audio_master_gain
	| audio_set_master_gain
	| audio_get_master_gain
	| audio_emitter_gain
	| audio_emitter_get_gain
	| audio_emitter_pitch
	| audio_emitter_get_pitch
	| audio_emitter_falloff
	| audio_channel_num
	| audio_sound_get_listener_mask
	| audio_emitter_get_listener_mask
	| audio_get_listener_mask
	| audio_get_listener_count
	| audio_get_listener_info
	| audio_debug
	| _T41
	| _V41
	| _X41
	| _Y41
	| _051
	| _151
	| _351
	| _451
	| __41
	| _e51
	| _751
	| _851
	| _B11
	| _C11
	| audio_group_load
	| audio_group_unload
	| audio_group_is_loaded
	| audio_group_load_progress
	| audio_group_name
	| audio_group_stop_all
	| audio_group_set_gain
	| audio_group_get_gain
	| audio_group_get_assets
	| audio_sound_get_audio_group
	| audio_create_stream
	| audio_destroy_stream
	| _y51
	| _z51
	| _B51
	| audio_create_buffer_sound
	| audio_free_buffer_sound
	| _S51
	| audio_create_play_queue
	| audio_queue_sound
	| audio_free_play_queue
	| audio_get_recorder_count
	| audio_get_recorder_info
	| audio_start_recording
	| audio_stop_recording
	| audio_bus_create
	| audio_effect_create
	| audio_emitter_bus
	| audio_emitter_get_bus
	| audio_bus_get_emitters
	| audio_bus_clear_emitters
	| lin_to_db
	| db_to_lin
	| _w61
	| _z61
	| _B61
	| _D61
	| _F61
	| _H61
	| _J61
	| _L61
	| _wz
	| _N61
	| _xz
	| _P61
	| _Q61
	| _V61
	| _X61
	| sprite_exists
	| sprite_get_width
	| sprite_get_height
	| sprite_get_name
	| _171
	| sprite_get_number
	| _271
	| sprite_get_xoffset
	| sprite_get_yoffset
	| sprite_get_bbox_left
	| sprite_get_bbox_right
	| sprite_get_bbox_top
	| sprite_get_bbox_bottom
	| sprite_get_bbox_mode
	| sprite_set_offset
	| sprite_set_bbox
	| sprite_set_bbox_mode
	| sprite_set_alpha_from_sprite
	| _971
	| _a71
	| sprite_create_from_surface
	| _g71
	| sprite_add_from_surface
	| _r71
	| sprite_delete
	| sprite_save
	| sprite_duplicate
	| sprite_add
	| sprite_add_ext
	| sprite_replace
	| sprite_merge
	| sprite_assign
	| sprite_collision_mask
	| _O71
	| sprite_set_cache_size
	| sprite_set_cache_size_ext
	| sprite_get_tpe
	| sprite_get_texture
	| sprite_get_uvs
	| sprite_prefetch
	| sprite_prefetch_multi
	| sprite_flush
	| sprite_flush_multi
	| sprite_set_speed
	| sprite_get_speed_type
	| sprite_get_speed
	| sprite_get_nineslice
	| sprite_set_nineslice
	| sprite_nineslice_create
	| sprite_get_info
	| ansi_char
	| chr
	| ord
	| real
	| bool
	| _Zt
	| string
	| string_ext
	| string_format
	| string_length
	| string_byte_length
	| _A81
	| _E81
	| string_pos
	| string_pos_ext
	| string_last_pos
	| string_last_pos_ext
	| string_copy
	| string_char_at
	| string_ord_at
	| _T81
	| _W81
	| string_byte_at
	| string_set_byte_at
	| string_delete
	| string_insert
	| string_replace
	| string_replace_all
	| string_count
	| string_hash_to_newline
	| string_lower
	| string_upper
	| string_repeat
	| string_letters
	| string_digits
	| string_lettersdigits
	| _691
	| string_trim_start
	| string_trim_end
	| string_trim
	| string_starts_with
	| string_ends_with
	| _c91
	| string_split
	| string_split_ext
	| _l91
	| string_join
	| string_join_ext
	| string_concat
	| string_concat_ext
	| _r91
	| string_foreach
	| surface_resize
	| surface_depth_disable
	| surface_get_depth_disable
	| _G91
	| surface_create_ext
	| _N91
	| surface_exists
	| surface_get_width
	| surface_get_height
	| surface_get_texture
	| _E91
	| _T91
	| _7a1
	| surface_get_target
	| _ta1
	| _8B
	| surface_getpixel
	| surface_getpixel_ext
	| _Ja1
	| _Ka1
	| surface_save
	| surface_save_part
	| draw_surface
	| _La1
	| draw_surface_stretched
	| draw_surface_tiled
	| draw_surface_part
	| draw_surface_ext
	| draw_surface_stretched_ext
	| _Ma1
	| draw_surface_part_ext
	| draw_surface_general
	| surface_copy
	| surface_copy_part
	| _Qa1
	| _Ya1
	| surface_format_is_supported
	| surface_get_format
	| _2b1
	| _6b1
	| _Ib1
	| tag_get_asset_ids
	| tag_get_assets
	| asset_get_tags
	| asset_add_tags
	| asset_remove_tags
	| asset_has_tags
	| asset_has_any_tag
	| asset_clear_tags
	| _Mb1
	| draw_self
	| draw_sprite_ext
	| draw_sprite
	| draw_sprite_pos
	| draw_sprite_stretched
	| draw_sprite_stretched_ext
	| draw_sprite_part
	| draw_sprite_part_ext
	| draw_sprite_tiled
	| draw_sprite_tiled_ext
	| draw_sprite_general
	| _Ub1
	| _Vb1
	| _Wb1
	| _Xb1
	| _Yb1
	| _Zb1
	| __b1
	| _0c1
	| _5c1
	| _6c1
	| _8c1
	| _bc1
	| _cc1
	| time_source_create
	| _wc1
	| time_source_destroy
	| _Bc1
	| _Ac1
	| time_source_start
	| _Ic1
	| time_source_stop
	| _Kc1
	| time_source_pause
	| _Lc1
	| time_source_resume
	| _Mc1
	| time_source_reset
	| _Nc1
	| time_source_reconfigure
	| _Oc1
	| time_source_get_period
	| _Qc1
	| time_source_get_reps_completed
	| _Sc1
	| time_source_get_reps_remaining
	| _Uc1
	| time_source_get_units
	| _Wc1
	| time_source_get_time_remaining
	| _Yc1
	| time_source_get_state
	| __c1
	| time_source_get_parent
	| _1d1
	| time_source_get_children
	| _3d1
	| time_source_exists
	| _5d1
	| time_seconds_to_bpm
	| _7d1
	| time_bpm_to_seconds
	| _ad1
	| call_later
	| _bd1
	| call_cancel
	| _ed1
	| timeline_exists
	| timeline_get_name
	| _gd1
	| timeline_add
	| timeline_delete
	| timeline_clear
	| _id1
	| timeline_moment_add_script
	| timeline_size
	| timeline_max_moment
	| timeline_moment_clear
	| _nd1
	| window_handle
	| window_device
	| _pd1
	| window_set_fullscreen
	| window_get_fullscreen
	| window_set_showborder
	| window_get_showborder
	| _sd1
	| _td1
	| _ud1
	| _wd1
	| _xd1
	| _zd1
	| window_set_caption
	| window_set_min_width
	| window_set_max_width
	| window_set_min_height
	| window_set_max_height
	| window_get_caption
	| _Bd1
	| window_set_cursor
	| window_get_cursor
	| window_set_color
	| window_get_color
	| _Od1
	| _Qd1
	| window_set_position
	| window_set_size
	| window_set_rectangle
	| window_center
	| _2e1
	| window_get_x
	| window_get_y
	| window_get_width
	| window_get_height
	| window_get_visible_rects
	| window_mouse_get_x
	| window_mouse_get_y
	| window_mouse_set
	| window_mouse_set_locked
	| window_mouse_get_locked
	| window_mouse_get_delta_x
	| window_mouse_get_delta_y
	| window_view_mouse_get_x
	| window_view_mouse_get_y
	| window_views_mouse_get_x
	| window_views_mouse_get_y
	| aa_1241_kz
	| _je1
	| code_is_compiled
	| _ke1
	| achievement_available
	| achievement_login
	| achievement_logout
	| achievement_login_status
	| achievement_reset
	| achievement_show_achievements
	| achievement_show_leaderboards
	| achievement_load_friends
	| achievement_load_leaderboard
	| achievement_get_pic
	| achievement_load_progress
	| achievement_send_challenge
	| os_get_info
	| achievement_event
	| achievement_show
	| achievement_get_info
	| os_get_config
	| url_open_full
	| url_open_ext
	| url_open
	| achievement_post_score
	| achievement_post
	| shop_leave_rating
	| virtual_key_add
	| virtual_key_delete
	| _ye1
	| virtual_key_show
	| virtual_key_hide
	| device_get_tilt_x
	| device_get_tilt_y
	| device_get_tilt_z
	| _Be1
	| _Ce1
	| _De1
	| _Ee1
	| _Fe1
	| _Ge1
	| _He1
	| _Ie1
	| _Je1
	| _Ke1
	| _Le1
	| _Me1
	| device_is_keypad_open
	| _Ne1
	| url_get_domain
	| _Oe1
	| device_mouse_check_button
	| device_mouse_check_button_pressed
	| device_mouse_check_button_released
	| device_mouse_x
	| device_mouse_raw_x
	| device_mouse_y
	| device_mouse_raw_y
	| device_mouse_x_to_gui
	| device_mouse_y_to_gui
	| os_is_paused
	| window_has_focus
	| ds_exists
	| script_exists
	| script_get_name
	| _Ve1
	| script_execute
	| script_execute_ext
	| gml_release_mode
	| application_surface_draw_enable
	| application_surface_enable
	| application_surface_is_enabled
	| _3f1
	| application_get_position
	| extension_stubfunc_real
	| extension_stubfunc_string
	| _xM1
	| _zM1
	| _BM1
	| _CM1
	| _6N1
	| _yN1
	| _2V1
	| _RH
	| _uV1
	| _8N1
	| _AN1
	| _Ha
	| _9N1
	| _zN1
	| Long
	| _KW1
	| _NW1
	| _QW1
	| _PW1
	| _YW1
	| _EN
	| _nY1
	| _rY1
	| _tY1
	| _uY1
	| _vY1
	| _wY1
	| _CY1
	| _3W
	| _dZ1
	| _pZ1
	| _o_1
	| _V12
	| _022
	| _UV
	| _F22
	| _M42
	| _352
	| _f52
	| _j52
	| _G52
	| _p52
	| _m52
	| _n52
	| _q52
	| _o52
	| _Q52
	| _V52
	| _K11
	| _J11
	| _N42
	| _q61
	| _241
	| _f21
	| _T62
	| _yk2
	| _pQ1
	| _5l2
	| _El2
	| _8m2
	| _R11
	| _pn2
	| camera_create
	| camera_create_view
	| camera_destroy
	| camera_apply
	| camera_copy_transforms
	| camera_get_active
	| camera_get_default
	| camera_set_default
	| camera_set_view_mat
	| camera_set_proj_mat
	| camera_set_view_target
	| camera_set_update_script
	| camera_set_begin_script
	| camera_set_end_script
	| _jp2
	| camera_set_view_pos
	| camera_set_view_size
	| camera_set_view_speed
	| camera_set_view_border
	| camera_set_view_angle
	| camera_get_view_mat
	| camera_get_proj_mat
	| camera_get_view_target
	| camera_get_update_script
	| camera_get_begin_script
	| camera_get_end_script
	| camera_get_view_x
	| camera_get_view_y
	| camera_get_view_width
	| camera_get_view_height
	| camera_get_view_speed_x
	| camera_get_view_speed_y
	| camera_get_view_border_x
	| camera_get_view_border_y
	| camera_get_view_angle
	| _Np2
	| _aV
	| _Pp2
	| _Qp2
	| _Sp2
	| _Up2
	| _Vp2
	| _Xp2
	| _Yp2
	| _Zp2
	| _0q2
	| _2q2
	| _3q2
	| _4q2
	| _6q2
	| _bV
	| _aq2
	| _cq2
	| _dq2
	| _eq2
	| _vq2
	| _Eq2
	| _3r2
	| _8r2
	| _er2
	| _wx
	| _xx
	| _kv2
	| _vv2
	| _iC2
	| _jC2
	| _mC2
	| _oC2
	| _wC2
	| _yC2
	| _fN
	| _LA
	| _5k
	| _zC2
	| _Oa
	| _6x
	| _yl
	| _eE
	| _FC2
	| _pC2
	| _PC2
	| _ZC2
	| _hD2
	| _iD2
	| _jD2
	| _kD2
	| _lD2
	| _mD2
	| ClearEventListeners
	| _oD2
	| _pD2
	| _qD2
	| _rD2
	| _sD2
	| _uD2
	| _wD2
	| _xD2
	| _BD2
	| _CD2
	| _FD2
	| _HD2
	| _KD2
	| _OD2
	| _QD2
	| _YD2
	| _ZD2
	| _vC2
	| __D2
	| _mv
	| _Qo
	| _mv2
	| __j
	| _V71
	| _8E2
	| _mF2
	| _oF2
	| _pF2
	| _qF2
	| _rF2
	| _wF2
	| _zF2
	| game_save
	| game_load
	| game_save_buffer
	| game_load_buffer
	| os_set_orientation_lock
	| screen_save
	| screen_save_part
	| display_reset
	| display_mouse_set
	| _EF2
	| clipboard_has_text
	| clipboard_get_text
	| clipboard_set_text
	| keyboard_get_numlock
	| keyboard_set_numlock
	| sprite_save_strip
	| get_open_filename
	| get_save_filename
	| get_open_filename_ext
	| get_save_filename_ext
	| _HF2
	| _IF2
	| _KF2
	| texture_get_width
	| texture_get_height
	| _MF2
	| _NF2
	| _OF2
	| _PF2
	| _QF2
	| texture_get_uvs
	| texture_global_scale
	| _SF2
	| _TF2
	| _UF2
	| _VF2
	| zip_unzip
	| zip_create
	| zip_add_file
	| zip_save
	| game_change
	| winphone_license_trial_version
	| winphone_tile_title
	| winphone_tile_count
	| winphone_tile_back_title
	| winphone_tile_back_content
	| winphone_tile_back_content_wide
	| winphone_tile_front_image
	| winphone_tile_front_image_small
	| winphone_tile_front_image_wide
	| winphone_tile_back_image
	| winphone_tile_back_image_wide
	| winphone_tile_background_colour
	| winphone_tile_background_color
	| winphone_tile_icon_image
	| winphone_tile_small_icon_image
	| winphone_tile_wide_content
	| winphone_tile_cycle_images
	| winphone_tile_small_background_image
	| push_local_notification
	| push_get_first_local_notification
	| push_get_next_local_notification
	| push_cancel_local_notification
	| push_get_application_badge_number
	| push_set_application_badge_number
	| surface_set_target_ext
	| surface_get_target_ext
	| audio_emitter_velocity
	| audio_emitter_get_vx
	| audio_emitter_get_vy
	| audio_emitter_get_vz
	| audio_set_listener_mask
	| audio_sound_set_listener_mask
	| audio_emitter_set_listener_mask
	| audio_destroy_sync_group
	| audio_create_sync_group
	| audio_play_in_sync_group
	| audio_start_sync_group
	| audio_pause_sync_group
	| audio_resume_sync_group
	| audio_stop_sync_group
	| audio_sync_group_get_track_pos
	| audio_sync_group_is_playing
	| audio_sync_group_is_paused
	| audio_sync_group_debug
	| _WF2
	| _XF2
	| _YF2
	| _ZF2
	| win8_livetile_tile_notification
	| win8_livetile_tile_clear
	| win8_livetile_badge_notification
	| win8_livetile_badge_clear
	| win8_livetile_queue_enable
	| win8_secondarytile_pin
	| win8_secondarytile_badge_notification
	| win8_secondarytile_delete
	| win8_settingscharm_add_xaml_entry
	| win8_settingscharm_set_xaml_property
	| win8_settingscharm_get_xaml_property
	| win8_livetile_notification_begin
	| win8_livetile_notification_secondary_begin
	| win8_livetile_notification_expiry
	| win8_livetile_notification_tag
	| win8_livetile_notification_text_add
	| win8_livetile_notification_image_add
	| win8_livetile_notification_end
	| win8_appbar_enable
	| win8_appbar_add_element
	| win8_appbar_remove_element
	| win8_settingscharm_add_entry
	| win8_settingscharm_add_html_entry
	| win8_settingscharm_remove_entry
	| win8_share_image
	| win8_share_screenshot
	| win8_share_file
	| win8_share_url
	| win8_share_text
	| win8_search_enable
	| win8_search_disable
	| win8_search_add_suggestions
	| win8_device_touchscreen_available
	| win8_license_initialize_sandbox
	| win8_license_trial_version
	| uwp_livetile_tile_clear
	| uwp_livetile_badge_notification
	| uwp_livetile_badge_clear
	| uwp_livetile_queue_enable
	| uwp_secondarytile_pin
	| uwp_secondarytile_badge_notification
	| uwp_secondarytile_delete
	| uwp_secondarytile_tile_clear
	| uwp_secondarytile_badge_clear
	| uwp_livetile_notification_begin
	| uwp_livetile_notification_secondary_begin
	| uwp_livetile_notification_expiry
	| uwp_livetile_notification_tag
	| uwp_livetile_notification_text_add
	| uwp_livetile_notification_image_add
	| uwp_livetile_notification_end
	| uwp_livetile_notification_template_add
	| uwp_appbar_enable
	| uwp_appbar_add_element
	| uwp_appbar_remove_element
	| uwp_device_touchscreen_available
	| external_define
	| external_call
	| external_free
	| _3p
	| _NV
	| _Ej
	| _wj
	| _Cj
	| _MG2
	| _cD2
	| _Bz
	| _Cz
	| _qH2
	| _mu
	| _rH2
	| _Pk
	| _Qk
	| _eD2
	| _Zj
	| _FH2
	| _IH2
	| _7D2
	| _1I2
	| _cI2
	| _8Q1
	| _iI2
	| _zI2
	| _0y
	| _HI2
	| _JI2
	| _NI2
	| _QI2
	| _RI2
	| _SI2
	| _TI2
	| _VI2
	| _XI2
	| _YI2
	| _ZI2
	| __I2
	| _t_1
	| _iJ2
	| _oJ2
	| _qJ2
	| _uJ2
	| _xJ2
	| buffer_seek
	| buffer_read
	| buffer_peek
	| buffer_poke
	| buffer_create_from_vertex_buffer
	| buffer_create_from_vertex_buffer_ext
	| buffer_copy_from_vertex_buffer
	| buffer_create
	| _gK2
	| buffer_exists
	| buffer_write
	| buffer_tell
	| _iK2
	| buffer_copy
	| _DK2
	| buffer_copy_stride
	| buffer_get_type
	| buffer_get_alignment
	| buffer_get_size
	| buffer_resize
	| buffer_sizeof
	| buffer_fill
	| buffer_md5
	| buffer_crc32
	| buffer_sha1
	| buffer_base64_encode
	| _VK2
	| _XK2
	| buffer_base64_decode
	| buffer_compress
	| buffer_decompress
	| buffer_base64_decode_ext
	| buffer_save
	| buffer_delete
	| buffer_async_group_begin
	| buffer_async_group_option
	| buffer_async_group_end
	| buffer_load_async
	| buffer_load
	| buffer_save_ext
	| buffer_save_async
	| buffer_load_ext
	| buffer_load_partial
	| buffer_get_address
	| buffer_get_surface
	| buffer_set_used_size
	| buffer_set_surface
	| _kL2
	| _oL2
	| _nL2
	| _PL2
	| _pL2
	| _qL2
	| _lL2
	| _mL2
	| _rL2
	| _sL2
	| _tL2
	| _uL2
	| _vL2
	| _wL2
	| _xL2
	| _yL2
	| _zL2
	| _AL2
	| _BL2
	| _CL2
	| _DL2
	| _EL2
	| _FL2
	| _GL2
	| _LL2
	| _HL2
	| _IL2
	| _JL2
	| _KL2
	| __C2
	| _aO2
	| _bO2
	| _iO2
	| _qO2
	| _gP2
	| _iP2
	| _zP2
	| _fD2
	| _eQ2
	| _Iw
	| _VQ2
	| _9D2
	| _xS2
	| _HT2
	| _IT2
	| _d71
	| _QT2
	| _6a1
	| _RT2
	| _1D2
	| _3U2
	| _4U2
	| _q71
	| _4E2
	| _kU2
	| _jR2
	| _f8
	| _GH2
	| _ZT2
	| __T2
	| _WT2
	| _sU2
	| _0U2
	| _1U2
	| _YT2
	| _XT2
	| _a7
	| _BU2
	| _CU2
	| _DU2
	| _ik
	| _6U2
	| _7U2
	| _gk
	| _N71
	| _ST2
	| _9U2
	| _TT2
	| _aU2
	| _KU2
	| _UT2
	| _VT2
	| _bU2
	| _rU2
	| _SU2
	| _TU2
	| _2U2
	| _ok
	| _Jk
	| _Lk
	| _VU2
	| _5U2
	| _Xj
	| _8U2
	| gif_open
	| gif_save_buffer
	| gif_save
	| gif_add_surface
	| _n1
	| _s4
	| _XD
	| _TD
	| _WD
	| _p31
	| _QV2
	| _RV2
	| _UV2
	| _VV2
	| _WV2
	| _Ni
	| _Ri
	| _7L2
	| _YV2
	| _kv
	| _MF
	| _AX2
	| _cY2
	| _qY2
	| _sY2
	| _wY2
	| _zY2
	| _AY2
	| _BY2
	| _CY2
	| _DY2
	| _GY2
	| _IY2
	| _JY2
	| _kY2
	| _6Y2
	| _hY2
	| _aY2
	| _2D2
	| _tZ2
	| _AZ2
	| _Ye1
	| _Ze1
	| _BF
	| _LZ2
	| _NZ2
	| _OZ2
	| _0_2
	| _1_2
	| _3_2
	| _4_2
	| _8_2
	| _o_2
	| _v_2
	| _w_2
	| _ou
	| _eu
	| _A_2
	| _z_2
	| _x_2
	| _C_2
	| _jl
	| _L91
	| _M91
	| _F_2
	| _G_2
	| _0D2
	| _m03
	| browser_input_capture
	| _l03
	| _2_2
	| _V_2
	| _W_2
	| _X_2
	| _Y_2
	| _Z_2
	| ___2
	| _003
	| _103
	| _203
	| _303
	| _n03
	| _403
	| _503
	| _603
	| _703
	| _803
	| _903
	| _a03
	| _b03
	| _c03
	| _o03
	| _S_2
	| _j03
	| _d03
	| _w03
	| _h03
	| _e03
	| _g03
	| _i03
	| _U_2
	| _F03
	| _G03
	| _te1
	| _xe1
	| _I03
	| _Wh
	| _313
	| _381
	| _p23
	| _t23
	| _v23
	| _w23
	| _2E2
	| _LN2
	| _MN2
	| _3D2
	| GetWithArray
	| _Zi
	| _o33
	| _p33
	| _s33
	| _t33
	| _x33
	| _E33
	| _F33
	| _rz
	| _EP
	| _R33
	| _V33
	| _W33
	| _Y33
	| _Z33
	| _dY
	| _xT
	| _yT
	| _AT
	| _343
	| _zT
	| _CT
	| _GT
	| _IT
	| _NT
	| _OT
	| _PT
	| _QT
	| _nU
	| _qU
	| _tU
	| _EU
	| _JU
	| _zU
	| _MU
	| _7U
	| _0U
	| _eU
	| _UT
	| _WT
	| _YT
	| _gU
	| _iU
	| _kU
	| _ST
	| _dE2
	| _NU
	| _OU
	| _PU
	| _QU
	| _RU
	| _SU
	| _YU
	| _I43
	| _K43
	| _ZU
	| __U
	| _S43
	| _3V
	| _T43
	| _7V
	| _8V
	| _sT
	| _tT
	| _uT
	| _vT
	| _W43
	| _wT
	| _Y43
	| _M33
	| _bT
	| _eT
	| _dT
	| _053
	| _fT
	| _eV
	| _fV
	| _gV
	| _353
	| _hT
	| _iT
	| _jT
	| _kT
	| _lT
	| _nT
	| _oT
	| _553
	| _853
	| _e53
	| _pT
	| _h53
	| _i53
	| _j53
	| _qT
	| _v53
	| _w53
	| _B53
	| _F53
	| _G53
	| _H53
	| _K53
	| _nV
	| _cE2
	| _aD2
	| _kP
	| _IZ
	| _6L
	| _gD2
	| _za1
	| _ra1
	| _X63
	| draw_tile
	| _R83
	| _V93
	| _X93
	| _W93
	| _Y93
	| _kA
	| _4D2
	| _i93
	| _fG2
	| _683
	| _Sb3
	| _yG2
	| _vG2
	| _Ub3
	| _Xb3
	| _7c3
	| _C_
	| _G_
	| _9c3
	| _y_
	| _z_
	| _J_
	| _D_
	| _S_
	| _H_
	| _A_
	| _R_
	| _B_
	| _L_
	| _N_
	| _P_
	| _F_
	| _E_
	| _Hc3
	| _Jd3
	| _w_
	| _x_
	| _Nd3
	| _l_
	| _Od3
	| _m_
	| _o_
	| _t_
	| _u_
	| _r_
	| _s_
	| _v_
	| _p_
	| _n_
	| _q_
	| _k_
	| _h_
	| _2_
	| _dD2
	| _zz
	| _Az
	| _xe3
	| _Ce3
	| _De3
	| _Ge3
	| _sK
	| _5f3
	| _lK
	| _qf3
	| _V_
	| _0g3
	| _2g3
	| _5g3
	| _Vf3
	| _ef3
	| _ag3
	| _cg3
	| _eg3
	| _S61
	| _8D2
	| _og3
	| _tg3
	| _0F
	| _mE
	| _Ku
	| _j71
	| _Ih3
	| _6E2
	| _Ph3
	| _eF
	| _5D2
	| _hE2
	| _6D2
	| _ij3
	| texture_is_ready
	| texture_prefetch
	| texture_flush
	| texturegroup_get_names
	| texturegroup_get_textures
	| texturegroup_get_sprites
	| texturegroup_get_fonts
	| texturegroup_get_tilesets
	| texturegroup_load
	| texturegroup_unload
	| texturegroup_get_status
	| texturegroup_set_mode
	| texture_debug_messages
	| _rj3
	| _sj3
	| _Cj3
	| _Ej3
	| _fk3
	| _bD2
	| _hk3
	| _1E2
	| _Gl
	| _Dl
	| YYASSET_REF
	| _Rv
	| _Hv
	| yyGetReal
	| yyGetInt64
	| yyGetInt32
	| yyGetBool
	| _5S
	| _Vk3
	| _Wk3
	| _Xk3
	| yyGetString
	| _gl3
	| array_get_2D
	| array_set_2D
	| array_set_2D_pre
	| array_set_2D_post
	| array_get
	| array_set
	| array_set_pre
	| array_set_post
	| __yy_is_nullish
	| __yy_gml_array_create
	| _Yw
	| __yy_gml_object_create
	| is_method
	| is_callable
	| is_handle
	| __yyg_call_method
	| __yy_method
	| method
	| _ml3
	| _Te1
	| _LP2
	| method_get_self
	| method_get_index
	| _rl3
	| __yy_gml_array_check
	| __yy_gml_array_set_owner
	| __yy_gml_array_check_index
	| __yy_gml_array_check_index_set
	| __yy_gml_array_check_index_chain
	| __yy_gml_errCheck
	| _Th
	| _n91
	| array_equals
	| array_create
	| array_copy
	| array_resize
	| array_push
	| array_pop
	| array_shift
	| array_insert
	| array_delete
	| array_sort
	| array_shuffle
	| array_shuffle_ext
	| array_first
	| array_last
	| array_create_ext
	| array_find_index
	| array_get_index
	| array_contains
	| array_contains_ext
	| array_any
	| array_all
	| array_foreach
	| array_reduce
	| array_filter
	| array_filter_ext
	| array_map
	| array_map_ext
	| array_copy_while
	| array_unique
	| array_unique_ext
	| array_reverse
	| array_reverse_ext
	| array_concat
	| array_union
	| array_intersection
	| _sh
	| _qh
	| _Kl3
	| _Ll3
	| _wh
	| _zh
	| _Ql3
	| _Rl3
	| variable_global_exists
	| variable_global_get
	| variable_global_set
	| variable_instance_get
	| variable_instance_set
	| _Vl3
	| variable_instance_exists
	| variable_instance_names_count
	| _Zk3
	| variable_instance_get_names
	| __yy_gml_copy_prototype
	| variable_struct_exists
	| variable_struct_set
	| variable_struct_set_pre
	| variable_struct_set_post
	| variable_struct_get
	| variable_struct_get_names
	| variable_struct_names_count
	| variable_struct_remove
	| struct_exists
	| struct_set
	| struct_get
	| struct_get_names
	| struct_names_count
	| struct_remove
	| struct_foreach
	| struct_get_from_hash
	| struct_set_from_hash
	| variable_get_hash
	| __l3
	| variable_clone
	| _1m3
	| _2m3
	| _5m3
	| _6m3
	| _7m3
	| _8m3
	| _9m3
	| _am3
	| _3m3
	| _4m3
	| _bm3
	| video_get_format
	| video_open
	| video_close
	| _wm3
	| _Bm3
	| _Dm3
	| _Em3
	| video_draw
	| video_set_volume
	| video_pause
	| video_resume
	| video_enable_loop
	| video_seek_to
	| video_get_duration
	| video_get_position
	| video_get_status
	| video_is_looping
	| video_get_volume
	| _rC2
	| _r63
	| _Om3
	| weak_ref_create
	| weak_ref_alive
	| weak_ref_any_alive
	| _cU2
	| _xo3
	| _sB
	| _uB
	| _wo3
	| _yo3
	| _zo3
	| _Ao3
	| _Co3
	| _ln3
	| _mn3
	| _in3
	| _jn3
	| _0p
	| _en3
	| _bn3
	| _cn3
	| _fn3
	| _Kn3
	| _an3
	| _Mn3
	| _dn3
	| _gn3
	| _hn3
	| _kn3
	| _pn3
	| _Sn3
	| _qn3
	| _tn3
	| _un3
	| _tp3
	| _sp3
	| _pp3
	| _rn3
	| _sn3
	| _9q3
	| _on3
	| _vn3
	| _wn3
	| _xn3
	| _yn3
	| _Gn3
	| _Cn3
	| _zn3
	| _An3
	| _Bn3
	| _Dn3
	| _En3
	| _Fn3
	| _Hn3
	| _In3
	| _Jn3
	| _fq3
	| _Tn3
	| _Un3
	| _Vn3
	| _Wn3
	| _Pn3
	| _gq3
	| _Xn3
	| _Yn3
	| _Zn3
	| _oq3
	| _pq3
	| __n3
	| _0o3
	| _1o3
	| _Rn3
	| _Qn3
	| _nn3
	| _Nn3
	| _On3
	| _2o3
	| _3o3
	| _4o3
	| _1S2
	| _2S2
	| _go3
	| _5o3
	| _6o3
	| _7o3
	| _8o3
	| _9o3
	| _ao3
	| _bo3
	| _co3
	| _do3
	| _eo3
	| _ho3
	| _io3
	| _jo3
	| _ko3
	| _lo3
	| _mo3
	| _no3
	| _oo3
	| _po3
	| _fo3
	| _qo3
	| _ro3
	| _so3
	| _to3
	| _yp
	| _Cp
	| _Do3
	| _Ln3
	| _f7
	| _h7
	| _5l
	| _PB
	| _qQ1
	| _7c
	| _uo3
	| _vo3
	| _Zq3
	| exception_unhandled_handler
	| __q3
	| _1r3
	| _8r3
	| _9r3
	| _7r3
	| _dr3
	| _er3
	| CreateDebugConsole
	| _gr3
	| _hr3
	| _ir3
	| _6e
	| _jr3
	| _y_2
	| GameMaker_Init
	| _Xq3
	| _ur3
	| _qr3
	| _LD2
	| _zr3
	| _Br3
	| _ko2
	| _Qr3
	| _sr3
	| _Sr3
	| _Tr3
	| _Ur3
	| _Vr3
	| _Wr3
	| _Xr3
	| _da3
	| _Yr3
	| _Zr3
	| _pA
	| _qA
	| __r3
	| _WK2
	| _2s3
	| _3s3
	| _5s3
	| _6s3
	| _7s3
	| _9s3
	| _as3
	| _bs3
	| _cs3
	| _tr3;
